{"version":3,"sources":["components/FooterComponent.js","UserContext.js","components/HomeButton.js","components/ContactComponent.js","components/AboutComponent.js","components/SpinningButton.js","components/Signature.js","components/LandingPageComponent.js","components/PortfolioComponent.js","components/AboutButton.js","components/PortfolioButton.js","components/DarkModeToggle.js","components/NavigationComponent.js","components/ExampleOneComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["copyright","icon","faCopyright","github","faGithub","size","linkedin","width","height","viewBox","fill","xmlns","className","fill-rule","clip-rule","d","transition","duration","ease","itemFooter","initial","opacity","in","out","Footer","motion","div","variants","animate","exit","style","maxWidth","href","target","rel","Date","getFullYear","HERO","id","title","description","heroImage","ABOUT","intro","titleFront","frontend","titleDesign","design","experience","experienceList","linkedInGeneral","githubGeneral","PORTFOLIOWORK","img1","titleExample","objectiveTitle","objective","contributorsTitle","contributors","programsTitle","programs","websiteTitle","website","siteAdressWeb","siteAdressGit","siteFigma","htmlEmailTitle","html","emailHtmlAdress","emailHtmlGit","emailHtmlFigma","img2","img3","overlay","font","UserContext","createContext","HomeButton","to","send","stroke","Contact","props","handleSubmit","e","data","fetch","method","headers","body","state","Object","keys","map","key","encodeURIComponent","join","then","alert","catch","error","preventDefault","handleChange","setState","name","value","email","message","this","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","required","check","row","Col","sm","Button","Component","itemAbout","download","stroke-width","RenderAbout","about","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","console","log","alt","info","split","first","second","About","aboutItems","useContext","abouts","index","SpinningButtons","cx","cy","rx","ry","Signature","dimsWidth","dimsHeight","class","clip-path","stroke-miterlimit","stroke-linecap","itemPort","RenderItems","children","items","React","Children","toArray","trail","useTrail","length","from","delay","i","Landing","itemList","landingLayout","list","color","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","position","SpinningButton","arrowRight","scale","enter","itemHeader","RenderItemPort","exampleItem","overlayColour","textColour","img","src","staggerItem","staggerChildren","Portfolio","example","AboutButton","NavLink","tag","Link","PortfolioButton","handleResize2","darkMode","DarkModeToggle","systemPrefersDark","useMediaQuery","query","undefined","prefersDark","setIsDark","JSON","parse","localStorage","getItem","isDark","document","documentElement","classList","add","setItem","stringify","remove","checked","event","hamburger","itemNav","Navigation","isOpen","setIsOpen","Navbar","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","globe","r","arrowLeft","figma","itemExample","RenderExample","removeIcon","listStyle","siteAddressWeb","ExampleOne","PortfolioPage","AboutPage","ExampleOnePage","match","filter","params","exampleId","Main","Provider","render","location","AnimatePresence","exitBeforeEnter","exact","path","component","pathname","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07714a26.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopyright } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { motion } from \"framer-motion\";\nconst copyright = <FontAwesomeIcon icon={faCopyright} />\nconst github = <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n\nconst linkedin = <svg width=\"32\" height=\"32\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path className=\"linkedIn\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24ZM16.9605 19.8778H11.5216V36.2196H16.9605V19.8778ZM17.3188 14.8227C17.2835 13.2204 16.1377 12 14.277 12C12.4164 12 11.2 13.2204 11.2 14.8227C11.2 16.3918 12.3805 17.6473 14.2064 17.6473H14.2412C16.1377 17.6473 17.3188 16.3918 17.3188 14.8227ZM36.5754 26.8497C36.5754 21.8303 33.8922 19.4941 30.3131 19.4941C27.4254 19.4941 26.1326 21.0802 25.4107 22.1929V19.8783H19.9711C20.0428 21.4117 19.9711 36.22 19.9711 36.22H25.4107V27.0934C25.4107 26.605 25.446 26.1178 25.5898 25.7681C25.9829 24.7924 26.8779 23.7822 28.3805 23.7822C30.3494 23.7822 31.1365 25.2807 31.1365 27.4767V36.2196H36.5752L36.5754 26.8497Z\" fill=\"green\"/>\n</svg>\n\nconst transition = { duration: 2, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst itemFooter = {\n\n    initial: {\n        opacity: 0,\n    },\n    in: {\n        opacity: 1,\n    },\n    out: {\n        opacity: 0,\n    },\n\n};\n\nfunction Footer() {\n    return (\n        <footer className=\"container-fluid text-center pt-5\">\n            <motion.div\n                variants={itemFooter}\n                transition={transition}\n                initial=\"initial\"\n                animate=\"in\"\n                exit=\"out\">\n                <div className=\"row h-100\">\n                    <div className=\"col-10 mx-auto my-auto\" style={{ maxWidth: '150px' }}>\n                        <div className=\"row\">\n                            <div className=\"col-6\"><a href=\"https://github.com/Alicia-M-M\" target=\"_blank\" rel=\"noopener noreferrer\">{github}</a>\n                            </div>\n                            <div className=\"col-6\"><a href=\"https://www.linkedin.com/in/alicia-morley-3ba99532/\" target=\"_blank\" rel=\"noopener noreferrer\">{linkedin}</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 mx-auto pt-3 px-0\">\n                                <h6>{copyright}{\" \"}{new Date().getFullYear()} ALICIA MORLEY</h6>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </motion.div>\n        </footer>\n    );\n}\n\nexport default Footer;","import { createContext } from 'react';\n\nexport const HERO = [\n    {\n        id: 0,\n        title: 'DIGITAL DESIGNER/DEVELOPER',\n        description: 'ADOBE CC FIGMA HTML CSS JS REACT BOOTSTRAP',\n        heroImage: '/assets/images/geoLandingImageV1.jpg'\n    },\n]\n\n\nexport const ABOUT = [\n\n    {\n        id: 0,\n        intro: 'I am a digital marketing designer/developer who is proficient with Photoshop, Illustrator, After Effects, Figma and Sketch. I have extensive experience using e-commerce platforms Mailchimp, Shopify and Amazon Store Fronts. I my skill set also includes HTML, CSS, SASS, JS, React, Redux, Reactstrap and Bootstrap for web development. When working on a project I am completely dedicated and enthusiastic! I’m a great communicator and I enjoy working in a team environment.',\n        titleFront: 'DEVELOPMENT',\n        frontend: ['HTML', 'CSS', 'JS', 'REACT', 'BOOTSTRAP', 'REACTSTRAP', 'GITHUB', 'MAILCHIMP', 'SHOPIFY', 'AMAZON STORE FRONTS'],\n        titleDesign: 'DESIGN',\n        design: ['FIGMA', 'SKETCH', 'ADOBE PHOTOSHOP', 'ADOBE ILLUSTRATOR', 'ADOBE AFTER EFFECTS','ADOBE INDESIGN', 'MAILCHIMP', 'SHOPIFY', 'AMAZON STORE FRONTS'],\n        experience: 'EDUCATION & EXPERIENCE',\n        experienceList: ['DIGITAL PRODUCTION DESIGNER ~- KATE SPADE NEW YORK, MARCH 2022 - PRESENT','DIGITAL DESIGNER ~- 90 DEGREE BY REFLEX, OCT 2021 - MARCH 2022','15 YEARS GRAPHIC DESIGN ~- VARIOUS COMPANIES GLOBALLY','WEB & MOBILE DEVELOPMENT BOOTCAMP 2020 ~- NUCAMP CALIFORNIA, USA', 'BA HONS TEXTILE DESIGN ~- CHELSEA COLLEGE OF ART, LONDON UK',],\n        linkedInGeneral: 'https://www.linkedin.com/in/alicia-morley-3ba99532/',\n        githubGeneral: 'https://github.com/Alicia-M-M'\n    }\n]\n\nexport const PORTFOLIOWORK = [\n    {\n        id: 0,\n        title: 'KATE SPADE',\n        description: 'FIGMA ADOBE PHOTOSHOP INDESIGN SKETCH AFTER EFFECTS',\n        img1: '/assets/images/kateSpadeWebFront.png',\n        titleExample: 'PORTFOLIO WEBSITE',\n        objectiveTitle: 'OVERVIEW',\n        objective: ' Below I have put togther a selection of my work from Kate Spade Surprise and Kate Spade New York Mainsite.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Social Media Graphics: Alicia Morley', 'Website Asset Graphics: Alicia Morley', 'TikTok: Alicia Morley', 'Email: Alicia Morley', 'Images: Kate Spade'],\n        programsTitle: 'DESIGN',\n        programs: 'Figma, Photoshop, Indesign, Sketch, After Effects',\n        websiteTitle: 'WEBSITE & SOCIAL MEDIA ASSETS',\n        website: \"Working at Kate Spade I create assets for various Mainsite and Surprise projects including desktop and mobile web banners, social media posts and MP4 animations. I work in a fast past environment where accuracy and consistency are really important when creating multple versions of assets across several online platforms. Excellent communication skills and time management are needed as I work directly with several teams across the organisation including marketing, sales and copywriters. Precise file organization, file naming and self management are key to ensure an efficient working environment within our design team. When designing assets I use mainly Figma, Photoshop and After Effects, including the utilisation and customisation of the Kate Spade Figma Component Design Library.\",\n        siteAdressWeb: 'https://www.figma.com/proto/ZU8fSjFEEwedK8je07J0I7/KateSpade_Work?page-id=0%3A1&node-id=1%3A2&viewport=1037%2C-605%2C0.31&scaling=scale-down-width&starting-point-node-id=1%3A2',\n        siteAdressGit: 'https://www.figma.com/proto/4usQSN0d7GIB7EZDvG3SFe/Kate_Spade_Without_Github?page-id=0%3A1&node-id=1%3A4&viewport=1340%2C629%2C0.94&scaling=scale-down-width',\n        siteFigma: 'https://www.figma.com/proto/ZU8fSjFEEwedK8je07J0I7/KateSpade_Work?page-id=0%3A1&node-id=1%3A2&viewport=1037%2C-605%2C0.31&scaling=scale-down-width&starting-point-node-id=1%3A2',\n        htmlEmailTitle: 'EMAIL',\n        html: 'I create and update email layouts and banners using information from the copy, sales and marketing teams for the Kate Spade Surprise Sale site products. The emails and some email banners use gif animations which I created in photoshop.',\n        emailHtmlAdress: 'https://www.figma.com/proto/0BG889Mc4FfWOm4A2Gn95v/email_Kate_Spade?page-id=0%3A1&node-id=1%3A4&viewport=1856%2C549%2C1.2&scaling=scale-down-width',\n        emailHtmlGit: 'https://www.figma.com/proto/4usQSN0d7GIB7EZDvG3SFe/Kate_Spade_Without_Github?page-id=0%3A1&node-id=1%3A4&viewport=1340%2C629%2C0.94&scaling=scale-down-width',\n        emailHtmlFigma: 'https://www.figma.com/proto/0BG889Mc4FfWOm4A2Gn95v/email_Kate_Spade?page-id=0%3A1&node-id=1%3A4&viewport=1856%2C549%2C1.2&scaling=scale-down-width',\n        img2: '/assets/images/workExamplesCoverKS.jpg',\n        img3: '/assets/images/Email_kateSpade.jpg',\n        overlay: 'yellow',\n        font: 'black',\n    },\n    {\n        id: 1,\n        title: 'STYLE & EDIT INTERIORS',\n        description: 'HTML CSS JS WORDPRESS AFTER EFFECTS FIGMA PHOTOSHOP',\n        img1: '/assets/images/interiorsFrontV1.jpg',\n        titleExample: 'PORTFOLIO WEBSITE',\n        objectiveTitle: 'OBJECTIVE',\n        objective: 'To design then develop an interior design and lifestyle retail website with a blog. Technologies used include CSS, HTML, JS, Wordpress, Bootstrap, Figma, Photoshop, After Effects.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: Unsplashed, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPEMENT',\n        programs: 'CSS, HTML, JS, Bootstrap, Figma, Photoshop, After Effects.',\n        websiteTitle: 'WEBSITE',\n        website: \"COMING SOON WIP! My main goal for this site is to create a modern, fresh and contemporary interior retail site with a blog that can be updated with industry knowledge, events and information. My concept is prototyped in Figma and the site itself will be CSS/HTML/JS custom built site with a wordpress blog. I'm choosing to adapt an exsisting theme rather than build from scratch. This will be a great example of adjusting an already existing sites functionality and layout. Aswell as the site I'll be creating social media marketing assets to compliment a ficitional online sale.\",\n        siteAdressWeb: 'https://www.figma.com/proto/sk1Mh2DPY9BSKVuElNqaaj/Interiors-LifeStyle-Website?page-id=0%3A1&node-id=2%3A2&viewport=21456%2C33153%2C0.77&scaling=scale-down-width&starting-point-node-id=35%3A1401',\n        siteAdressGit: 'https://github.com',\n        siteFigma: 'https://www.figma.com/proto/sk1Mh2DPY9BSKVuElNqaaj/Interiors-LifeStyle-Website?page-id=0%3A1&node-id=2%3A2&viewport=21456%2C33153%2C0.77&scaling=scale-down-width&starting-point-node-id=35%3A1401',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'The layout for the HTML will be designed in Figma and there will be several versions of the email to correspond with the paid social assets. They will contain gif animations and relate directly to the website styling and messaging.',\n        emailHtmlAdress: 'https://www.figma.com/proto/g0hdPcUMwzVt3qrjzQOQmC/Interior-LifeStyle-Email?page-id=0%3A1&node-id=2%3A2&viewport=870%2C462%2C1&scaling=scale-down-width',\n        emailHtmlGit: 'https://github.com/Alicia-M-M/massEffectsMyRatingsEmail',\n        emailHtmlFigma: 'https://www.figma.com/proto/g0hdPcUMwzVt3qrjzQOQmC/Interior-LifeStyle-Email?page-id=0%3A1&node-id=2%3A2&viewport=870%2C462%2C1&scaling=scale-down-width',\n        img2: '/assets/images/interiorsMain.jpg',\n        img3: '/assets/images/placeholderEmail.jpg',\n        overlay: 'yellow',\n        font: 'black',\n    },\n    {\n        id: 2,\n        title: '90 DEGREES BY REFLEX',\n        description: 'ADOBE PHOTOSHOP SHOPIFY MAILCHIMP HTML',\n        img1: '/assets/images/90DegreeFrontV1.jpg',\n        titleExample: '90 DEGREES BY REFLEX',\n        objectiveTitle: 'ROLE DESCRIPTION',\n        objective: 'During my role at 90 Degree by reflex website I created bi-weekly Shopify and Mailchimp graphics. I used photoshop for the graphics and photo editing and updated the platform adding assets and text for products and descriptions.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: 90 Degree Photography,Unsplash, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPMENT',\n        programs: 'Adobe Photoshop, Shopify, Mailchimp, HTML',\n        websiteTitle: 'WEBSITE',\n        website: \"For the bi-weekly design layouts for the banners I created a theme for each promotion. I used a consistant text in various weights of Poppins for the button and secondary information and then chose a dynamic header font to distinguish the separate campaigns. For the colour selection I used complimentary colours to the Lifestyle photography and considered WCAG standards for accessibility when placing text over backgrounds. For the overall placement I considered the UI, how the graphics flowed and the promotional information leading to the ‘shop now’ button for a user friendly experience. I also photo edited the images depending on the layout of the graphic by extending background scenery, adding a new relevant garment to a model in a lifestyle shot or colour change a garment in-line with stock availability.\",\n        siteAdressWeb: 'https://www.figma.com/proto/2vEQFhxIiWlTbRWSytoQHM/90DegreeWeb?page-id=0%3A1&node-id=0%3A1&viewport=241%2C48%2C0.13&scaling=scale-down-width&starting-point-node-id=2%3A2',\n        siteAdressGit: 'None',\n        siteFigma: 'https://www.figma.com/proto/2vEQFhxIiWlTbRWSytoQHM/90DegreeWeb?page-id=0%3A1&node-id=0%3A1&viewport=241%2C48%2C0.13&scaling=scale-down-width&starting-point-node-id=2%3A2',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'The bi-weekly email campaign always mirrored the online promotion. I scaled and exported the graphics for web optimization to improve loading speed. I chose the products displayed under the main banner images depending on the current price promotion whilst also checking stock availability on Shopify.',\n        emailHtmlAdress: 'https://www.figma.com/proto/Coi901RWg4vwnJywnTnqfJ/90Degree?page-id=0%3A1&node-id=3%3A14&viewport=241%2C48%2C0.57&scaling=scale-down-width',\n        emailHtmlGit: 'None',\n        emailHtmlFigma: 'https://www.figma.com/proto/Coi901RWg4vwnJywnTnqfJ/90Degree?page-id=0%3A1&node-id=3%3A14&viewport=241%2C48%2C0.57&scaling=scale-down-width',\n        img2: '/assets/images/90DegreeLayoutExampleV1.jpg',\n        img3: '/assets/images/90DegreeEmailV1.jpg',\n        overlay: 'darkGrey',\n        font: 'white',\n    },\n    {\n        id: 3,\n        title: 'YOGALICIOUS',\n        description: 'ADOBE PHOTOSHOP SHOPIFY MAILCHIMP HTML',\n        img1: '/assets/images/yogaliciousExampleFrontV2.jpg',\n        titleExample: 'YOGALICIOUS',\n        objectiveTitle: 'ROLE DESCRIPTION',\n        objective: 'I created Yogalicious bi-weekly Shopify and Mailchimp graphics and banners using photoshop. I updated the platform adding assets and text for products and descriptions. I also scheduled the email send outs and published the website.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images:Yogalicious Photography, Unsplash, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPMENT',\n        programs: 'Adobe Photoshop, Shopify, Mailchimp, HTML',\n        websiteTitle: 'WEBSITE',\n        website: 'For the bi-weekly design layouts for the banners I created a theme for each promotion. I used a consistant text in various weights of Poppins for the button and secondary information and then chose a dynamic header font to distinguish the separate campaigns. For the colour selection I used complimentary colours to the Lifestyle photography and consider WCAG standards for accessibility when placing text over backgrounds. For the overall placement I considered the UI, how the graphics flowed and the promotional information leading to the ‘shop now’ button for a user friendly experience. I also photo edited the images depending on the layout of the graphic by extending background scenery, adding a new revelvant garment to a model in a lifestyle shot or colour changed a garment in-line with stock availability.',\n        emailHtmlAdress: 'https://www.figma.com/proto/lZiNYwaMy0bVgDDTuwKPld/YogaliciousEmail?page-id=0%3A1&node-id=2%3A2&viewport=241%2C48%2C1.83&scaling=scale-down-width',\n        siteAdressWeb: 'https://www.figma.com/proto/WykRZDwi7HTBVdcSVNQ5sU/YogaliciousWeb?page-id=0%3A1&node-id=2%3A11&viewport=241%2C48%2C0.52&scaling=scale-down-width',\n        siteAdressGit: 'None',\n        siteFigma: 'https://www.figma.com/proto/WykRZDwi7HTBVdcSVNQ5sU/YogaliciousWeb?page-id=0%3A1&node-id=2%3A11&viewport=241%2C48%2C0.52&scaling=scale-down-width',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'The bi-weekly email campaign mirror the online promotion. I scaled and exported the graphics for web optimization to improve loading speed. I chose the products displayed under the main banner images depending on the current price promotion whilst also checking stock availability on Shopify.',\n        emailHtmlGit: 'None',\n        emailHtmlFigma: 'https://www.figma.com/proto/lZiNYwaMy0bVgDDTuwKPld/YogaliciousEmail?page-id=0%3A1&node-id=2%3A2&viewport=241%2C48%2C0.46&scaling=min-zoom',\n        img2: '/assets/images/yogaliciousExample.jpg',\n        img3: '/assets/images/yogaliciousEmail.jpg',\n        overlay: 'yellow',\n        font: 'black',\n    },\n    {\n        id: 4,\n        title: 'GHOST RIDER BIKES',\n        description: 'HTML CSS JS BOOTSTRAP SASS SHOPIFY FIGMA ADOBE PHOTOSHOP',\n        img1: '/assets/images/ghostRiderBikesFront.jpg',\n        titleExample: 'GHOSTRIDER',\n        objectiveTitle: 'OBJECTIVE',\n        objective: 'To create a marketing & sales website and HTML email for a new brand of bike brand: ‘GhostRider’. Technology used includes HTML, SASS, Bootstrap, Shopify, Figma, Photoshop, Illustrator.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Third-Party UI Designer', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: Unsplash, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPMENT',\n        programs: 'Figma, Photoshop, Illustrator, HTML, CSS, JS, SASS Pre-processor, Bootstrap, Shopify',\n        websiteTitle: 'WEBSITE',\n        website: \"For the GhostRider website my main goal was to take a figma document created by a Professional UX/UI designer and implement pixel-perfect replication using code. I heavily customized bootstrap components to re-create the UX/UI design and layout. I used sass pre-processor in order to best organize my styling utilizing variables and mixins to efficiently update mulitple areas of the site at the same time - for example the custom button and colour standards throughout. I used a gsap animation trigger on scroll to implement a rotating bike with parallax effect. For the in-site purchasing, I intergrated Shopify and edited the stylesheet to compliment the overall design of the site. Working with SASS gave me great insight into how to organise my stylesheet code in a different way to CSS. I had used SASS briefly before but this was the first time using it for so many styling elements; it was a great learning process. Collaborating with a professional designer's layout and idea really pushed me to find different ways of implementing specific design, animation and functionality, which in turn has given me a broader knowledge of the possibilities available.\",\n        siteAdressWeb: 'https://clever-heyrovsky-7f4df4.netlify.app',\n        siteAdressGit: 'https://github.com/Alicia-M-M/ghostRiderWebsite',\n        siteFigma: 'https://www.figma.com/proto/223dvFD5ATKItLVRRJHSYx/Ghost-Rider-Prototype-Doc?page-id=0%3A1&node-id=1%3A2&starting-point-node-id=1%3A2&scaling=scale-down-width',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'I designed and developed the GhostRider HTML email using the website style guide to keep the design on brand. I used Figma to design the layout and HTML for the email itself. I created buttons and graphics and added a dark mode to the email.The email is responsive, scailing where needed from a two column to a one column layout.',\n        emailHtmlAdress: 'https://tender-poitras-bcb6d3.netlify.app',\n        emailHtmlGit: 'https://github.com/Alicia-M-M/ghostRider-email',\n        emailHtmlFigma: 'https://www.figma.com/proto/Lpbm1cRCwV3ykY2spHBXKR/html-Email-Ghost-Rider-final-render?page-id=0%3A1&node-id=301%3A7&starting-point-node-id=20%3A2&scaling=scale-down-width',\n        img2: '/assets/images/ghostRiderWebsite.jpg',\n        img3: '/assets/images/emailGhostRiderSite.jpg',\n        overlay: 'pink',\n        font: 'black',\n    },\n    {\n        id: 5,\n        title: 'GEO PHONE PROMO SITE',\n        description: 'REACT CSS REACTSTRAP REDUX FIGMA ADOBE PHOTOSHOP',\n        img1: '/assets/images/geoPhoneFront.jpg',\n        titleExample: 'GEO PHONE',\n        objectiveTitle: 'OBJECTIVE',\n        objective: 'To design then develop a fictional promo site and HTML email for GEO PHONE. Technologies used includes React, Reactstrap, React-router, Redux, CSS Animations, Figma, Photoshop  and Illustrator.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: Unsplash, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPMENT',\n        programs: 'Figma, Photoshop, Illustrator, React, React-Redux, CSS, Reactstrap, React-Animate-on-Scroll',\n        websiteTitle: 'WEBSITE',\n        website: 'When considering the overall design and UI of the site I wanted to have a consistant feel using three different colours for button navigation and also a strong brand identity echoing colours from the cases in the overall site. Designing the site and using the Figma layout as a guideline really challenged me to get the sites end result exactly like the initial concept. I developed the site to have multiple re-useable com  ponents using react and also to use react hooks such as useState to add state to my functional components and useEffect to mange any ‘side-effects’ in my components. For navigation I used react-router and react-router-hash-link and for updating and managing state I used redux. I used conditional statements, ternary operators and CSS to implement different visual results depending on criteria.',\n        emailHtmlAdress: 'https://kind-stonebraker-b436ef.netlify.app',\n        siteAdressWeb: 'https://friendly-poincare-114884.netlify.app',\n        siteAdressGit: 'https://github.com/Alicia-M-M/geo-phone-website',\n        siteFigma: 'https://www.figma.com/proto/iCqR5r5kYcQrB8FxaaJI5P/Phone-Promo-React-app-render-final?page-id=0%3A1&node-id=1%3A2&starting-point-node-id=1%3A2&scaling=scale-down-width',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'I developed the ‘GEO PHONE’ html email adding an animated gif to the header which created in photoshop. I used Figma to design the layout and HTML for the email itself. I created png buttons and graphics in Photoshop and added a dark mode to the email.',\n        emailHtmlGit: 'https://github.com/Alicia-M-M/geo-phone-email',\n        emailHtmlFigma: 'https://www.figma.com/proto/1gVErmZbDUY9vX1Wwoklmw/phone-promo-html-email-final-render?page-id=0%3A1&node-id=1%3A2&starting-point-node-id=1%3A2&scaling=scale-down-width',\n        img2: '/assets/images/phonePromoWebsite.jpg',\n        img3: '/assets/images/emailGeoSiteV1.jpg',\n        overlay: 'darkGrey',\n        font: 'white',\n    },\n    {\n        id: 6,\n        title: 'PORTFOLIO WEBSITE',\n        description: 'REACT REACTSTRAP SKETCH ADOBE PHOTOSHOP ADOBE ILLUSTRATOR',\n        img1: '/assets/images/portfolioFront.jpg',\n        titleExample: 'PORTFOLIO WEBSITE',\n        objectiveTitle: 'OBJECTIVE',\n        objective: 'To design then develop my personal portfolio and HTML email. To build the site I used React, Reactstrap, userContext, react-router, Framer-Motion, react-spring, Sketch, photoshop and illustrator.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: Unsplash, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPMENT',\n        programs: 'Sketch, Photoshop, React, Redux, Reactstrap, CSS, JS, Framer-Motion, React-Spring, React-Transition-Group',\n        websiteTitle: 'WEBSITE',\n        website: 'For my portfolio site I really wanted to have a simple design with some elegant functionality, styling and animations. I picked  a handwritten header font to add a personalized feel and created circular buttons to add a customized UI navigation. I really enjoyed creating the intro ‘alicia morley’ signature using css animations and svg paths. I used userContext as a way to pass my data throughout my application without prop drilling. I implemented useMediaQuery from react-responsive with css variables for the dark mode functionality and stored the users preference in localStorage so on page change/navigating away from the page the preference is temporarily stored. For the on click navigation to view the portfolio items react-router params has been used.',\n        siteAdressWeb: 'https://www.aliciamorley.com/',\n        siteAdressGit: 'https://github.com/Alicia-M-M/alicia-morley-portfolio',\n        siteFigma: 'https://www.sketch.com/s/12b337fb-6fb4-4a43-9726-2fe54b94e452/a/dlWoW5n/play',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'I developed my Portfolio HTML email keeping everything simple and on brand with my website so when it is emailed to recruiters and companies all my information and experience is clear. I used Sketch to design the layout and HTML for the email itself. I created png buttons and graphics and added a dark mode.',\n        emailHtmlAdress: 'https://jovial-pike-edbf80.netlify.app',\n        emailHtmlGit: 'https://github.com/Alicia-M-M/portfolio-email',\n        emailHtmlFigma: 'https://www.sketch.com/s/80975f55-09a4-441c-a10a-2d3298cb8de3/a/OmW34e2/play',\n        img2: '/assets/images/portfolioWebsite.jpg',\n        img3: '/assets/images/portfolioEmail.jpg',\n        overlay: 'darkGrey',\n        font: 'white',\n    },\n    {\n        id: 7,\n        title: 'LUXURY PRODUCT SITE',\n        description: 'HTML CSS JAVASCRIPT SKETCH ADOBE PHOTOSHOP',\n        img1: '/assets/images/luxuryFront.jpg',\n        titleExample: 'PORTFOLIO WEBSITE',\n        objectiveTitle: 'OBJECTIVE',\n        objective: 'To design then develop an e-commerce page with search, sort and wishlist functionality. Technologies used include HTML, CSS, JS, flex-box, Figma and Photoshop.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: Unsplashed, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPEMENT',\n        programs: 'Figma, Photoshop, HTML, CSS, JS, Flexbox',\n        websiteTitle: 'WEBSITE',\n        website: \"For the Luxury site I wanted to create all the functional components with JavaScript. I built a product grid layout that on click would add an item to a wishList. I also added a fixed sidebar for the product filters and a keyword search bar for more specific filtering of products. I used flex-box for layout and scaleability at specific breakpoints. I wanted to keep the page styling very clean and simple using high impact images from Pexels and Unsplash for a luxury ecommerce feel. The project is still a 'WIP' as I would like to add futher funtional elements to the site aswell as some subtle on hover animations for the images and texts. I would also like to amend a problem I had with my build files. I am using an npm package called 'usemin' and it is not very compatable with ES6 so I had to change my 'let's to 'var's otherwise the run build would exit with a build error. After research I've found a replacement for uglify.js - Terser, and I will update my build at a later stage.\",\n        siteAdressWeb: 'https://vibrant-swanson-9fe6e9.netlify.app/',\n        siteAdressGit: 'https://github.com/Alicia-M-M/luxuryWebsite',\n        siteFigma: 'https://www.figma.com/proto/2VMu6pTsuhLT41mjZ293g5/luxuryWebsite---Final?page-id=0%3A1&node-id=101%3A77&starting-point-node-id=101%3A77&scaling=scale-down-width',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'I developed the Luxury HTML email making sure that the images when scaled to a small screen size would still look great as I wanted the imagery to be full page on all sizes/not break into smaller columns as on previous designs. When designing the layout I thought this would look really impactful and dynamic like alot of current retail emails. I kept all the styling on brand by designing the layout in Figma. I also create an animated header giff that continuously rotates',\n        emailHtmlAdress: 'https://clever-franklin-7b245e.netlify.app',\n        emailHtmlGit: 'https://github.com/Alicia-M-M/luxury-email/',\n        emailHtmlFigma: 'https://www.figma.com/proto/d3ivTf69hhOKpZNIWXjysq/luxuryHtmlEmail---Final?page-id=0%3A1&node-id=10%3A113&starting-point-node-id=10%3A113&scaling=scale-down-width',\n        img2: '/assets/images/luxuryImagePortfolio.jpg',\n        img3: '/assets/images/luxuryEmail.jpg',\n        overlay: 'yellow',\n        font: 'black',\n    },\n    {\n        id: 8,\n        title: 'MASS EFFECT SITE',\n        description: 'REACT MONGODB ATLAS AFTER EFFECTS FIGMA PHOTOSHOP',\n        img1: '/assets/images/massEffectWebFront.jpg',\n        titleExample: 'PORTFOLIO WEBSITE',\n        objectiveTitle: 'OBJECTIVE',\n        objective: 'To design then develop a game ratings promo site with sort, select and flip card functionality. Technologies used include Figma, Photoshop, After Effects, React, MongoDB Atlas, Express, Node JS.',\n        contributorsTitle: 'CONTRIBUTORS',\n        contributors: ['Website Development: Alicia Morley', 'Website Design: Alicia Morley', 'HTML Email Design: Alicia Morley', 'HTML Email Development: Alicia Morley', 'Images: Unsplashed, Pexels'],\n        programsTitle: 'DESIGN & DEVELOPEMENT',\n        programs: 'Figma, Photoshop, After Effects, React, MongoDB Atlas, Express, Node JS',\n        websiteTitle: 'WEBSITE',\n        website: \"COMING SOON WIP! Two of my main goals for the 'Mass Effects My Ratings' Website were to create sleek looking and informative flip card component and to have a database with crew member info stored within it. I took inspiration for my design from Mass Effect 1 & 2 and really wanted to have fun with the graphics as this is intended to be an eye-catching promo micro site. The mongoDB database provides data however currently does not store data inputed from the user. The user can select their top three crew members, search the crew by name and select the character class of each crew member.\",\n        siteAdressWeb: 'https://www.figma.com/proto/lFaPv3EigCDieK5kk2h7QB/massEffect?page-id=0%3A1&node-id=237%3A568&viewport=487%2C560%2C0.06&scaling=scale-down-width&starting-point-node-id=413%3A933',\n        siteAdressGit: 'https://github.com',\n        siteFigma: 'https://www.figma.com/proto/lFaPv3EigCDieK5kk2h7QB/massEffect?page-id=0%3A1&node-id=237%3A568&viewport=487%2C560%2C0.06&scaling=scale-down-width&starting-point-node-id=413%3A933',\n        htmlEmailTitle: 'HTML EMAIL',\n        html: 'I designed the HTML to compliment the webiste and with the same intention - to have an engaging and informative design. I added an MP4 rather than a gif for the header as I wanted to use After Effects for the animation and to experiment with adding an MP4 to an HTML email.',\n        emailHtmlAdress: 'https://celadon-palmier-6562ee.netlify.app',\n        emailHtmlGit: 'https://github.com/Alicia-M-M/massEffectsMyRatingsEmail',\n        emailHtmlFigma: 'https://www.figma.com/proto/5RjugCUzlJ6KlCiCbvybsx/massEffectsMyRatingsEmail?page-id=0%3A1&node-id=3%3A2&viewport=457%2C1471%2C0.24&scaling=scale-down-width',\n        img2: '/assets/images/massEffectWeb.jpg',\n        img3: '/assets/images/massEffectEmailLayout.jpg',\n        overlay: 'yellow',\n        font: 'black',\n    },\n   \n    \n]\n\n\n\nexport const UserContext = createContext([HERO, ABOUT, PORTFOLIOWORK])","import React from 'react'\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction HomeButton() {\n    return (\n        <Link to=\"/home\"><svg className=\"img-fluid cursor homeButton\" width=\"512\" height=\"138\" viewBox=\"0 0 512 138\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className=\"buttonDark\" d=\"M94.6096 46.008C95.7982 45.8886 96.547 45.7215 96.8679 45.4828C99.0311 44.6474 100.101 43.2869 100.101 41.4251C99.8631 39.7662 99.1618 38.9427 97.9733 38.9427C97.4146 38.9427 96.9273 39.0023 96.5113 39.1217C93.1952 39.8616 91.5312 41.1744 91.5312 43.0362C91.5431 44.5997 92.5653 45.5902 94.6096 46.008Z\" fill=\"black\" />\n            <path className=\"buttonDark\" d=\"M134.653 77.0976L135.449 76.7157H135.437C135.188 76.7515 134.926 76.7873 134.653 76.8232V77.0976Z\" fill=\"black\" />\n            <path className=\"buttonDark\" d=\"M165.995 46.008C167.183 45.8886 167.932 45.7215 168.253 45.4828C170.416 44.6474 171.486 43.2869 171.486 41.4251C171.248 39.7662 170.547 38.9427 169.359 38.9427C168.8 38.9427 168.313 39.0023 167.897 39.1217C164.58 39.8616 162.917 41.1744 162.917 43.0362C162.928 44.5997 163.951 45.5902 165.995 46.008Z\" fill=\"black\" />\n            <path className=\"buttonDark\" d=\"M234.207 55.6631C233.743 55.6631 233.018 55.7824 232.044 56.0092C226.957 60.9024 222.321 63.349 218.114 63.349C213.728 63.349 210.661 61.3081 208.926 57.2265C207.975 52.5839 207.357 49.9583 207.084 49.3258C205.99 46.9269 204.077 45.7096 201.343 45.6857L199.465 45.6141C195.376 45.6857 191.787 47.1895 188.709 50.1254C186.45 52.5243 184.858 54.9231 183.871 57.31C182.314 59.0525 180.828 60.5921 179.45 61.9049C178.237 62.5613 177.524 63.1699 177.286 63.7547C169.608 70.7007 163.63 74.1737 159.351 74.1737C157.794 74.1737 157.021 73.6724 157.021 72.6699C157.021 70.5455 157.758 68.1705 159.22 65.533C160.29 64.5544 161.419 62.2748 162.596 58.6825V57.7039C162.596 56.4865 161.859 55.7347 160.397 55.4363H160.147C159.125 55.484 158.614 55.5795 158.614 55.7108C158.602 55.7108 158.531 55.8182 158.412 56.045C158.008 56.2479 157.782 56.4985 157.782 56.7969C154.157 61.8333 150.163 65.9268 145.801 69.0656C140.417 71.7748 135.283 73.1234 130.409 73.1234C127.806 72.9325 125.822 72.5864 124.455 72.0732C119.32 69.6266 116.765 66.7742 116.765 63.5041C116.765 60.7949 117.763 57.9664 119.76 55.0067C123.456 51.653 126.392 49.9702 128.567 49.9702H129.958C130.184 49.9702 130.623 50.1135 131.241 50.388C132.977 52.2498 134.272 53.1807 135.104 53.1807C136.245 52.8584 136.816 52.1901 136.816 51.1876V50.6625C135.116 47.6311 132.977 46.1154 130.374 46.1154C128.009 46.1154 125.94 46.4615 124.181 47.1656C119.189 49.4929 115.802 52.393 113.948 55.8421H113.77C111.725 58.1932 109.823 60.2102 108.064 61.8929C106.852 62.5493 106.139 63.158 105.901 63.7428C98.2112 70.7245 92.2327 74.1975 87.9539 74.1975C86.3968 74.1975 85.6243 73.6963 85.6243 72.6938C85.6243 70.5694 86.3612 68.1944 87.8231 65.5569C88.8928 64.5782 90.022 62.2987 91.1986 58.7064V57.7277C91.1986 56.5104 90.4617 55.7585 88.9998 55.4602H88.7502C87.728 55.5079 87.2169 55.6034 87.2169 55.7347C87.2051 55.7347 87.1337 55.8421 87.0149 56.0569C86.278 56.2837 85.4579 56.952 84.5308 58.0858C82.8787 59.8521 80.0024 62.5971 75.8899 66.2968C71.2189 68.8627 67.6769 70.2114 65.2404 70.3546H63.4694C61.4013 70.3546 59.3926 69.4356 57.4434 67.5977C55.6368 64.7572 54.7216 62.6567 54.7216 61.3081V60.8904C54.7216 59.7686 55.3634 58.5632 56.6352 57.2504C63.3387 47.0463 67.879 39.0501 70.2561 33.2618C76.3535 18.5941 79.3962 8.77194 79.3962 3.80714V3.67586C79.3962 1.8618 78.6949 0.632535 77.3043 0H76.8527C74.9985 0 73.3107 0.871227 71.8012 2.62562C70.9693 4.21292 70.2799 5.34671 69.745 6.01505C69.5549 6.01505 68.0929 8.3423 65.3592 13.0087C61.6628 19.3221 58.2159 27.199 55.0187 36.6393C53.4855 39.8616 52.7248 41.9024 52.7248 42.7975C50.8825 47.2611 49.7771 51.653 49.4087 55.9972C49.3849 55.9972 49.373 56.0092 49.3492 56.0092C44.2622 60.9024 39.6268 63.349 35.4193 63.349C31.0334 63.349 27.9669 61.3081 26.2316 57.2265C25.2808 52.5839 24.6627 49.9583 24.3894 49.3258C23.2959 46.9269 21.3823 45.7096 18.6486 45.6857L16.7707 45.6141C12.682 45.6857 9.09253 47.1895 6.01414 50.1254C2.13942 54.2428 0.142628 58.3364 0 62.4061C0 63.1938 0.166399 64.1008 0.487312 65.1033C2.13942 68.6479 4.54032 70.4143 7.69002 70.4143H7.83265C11.9689 70.4143 15.7842 68.0512 19.2904 63.3132C20.8474 60.4966 21.5844 59.0883 21.5249 59.0883L21.7983 59.2673C24.5558 64.9363 29.0485 67.7648 35.2766 67.7648H35.8353C36.3939 67.7648 37.1783 67.717 38.2005 67.6216C42.8478 66.4281 46.6631 64.5305 49.6345 61.9526C49.6939 62.2629 49.7534 62.5732 49.8366 62.8954C52.1543 70.6052 56.8016 74.472 63.7665 74.472C68.9725 74.472 74.1546 72.5983 79.3368 68.8389C80.3827 67.9796 81.3335 67.168 82.225 66.3923C81.393 69.006 80.977 71.0587 80.977 72.5386C80.977 76.7635 83.2234 78.864 87.6924 78.864C93.5401 78.864 100.743 74.9375 109.277 67.0845C110.323 66.3565 111.238 65.6046 112.046 64.8408C112.474 67.8364 114.554 70.7484 118.286 73.5889C121.864 76.0355 125.845 77.2647 130.231 77.2647C131.016 77.2647 132.525 77.0738 134.76 76.7038H135.449C137.089 76.477 138.04 76.3338 138.278 76.2503C144.363 74.9494 148.856 72.825 151.756 69.8891C152.16 69.4953 152.541 69.1253 152.921 68.7553C152.541 70.283 152.338 71.548 152.338 72.5506C152.338 76.7754 154.585 78.8759 159.054 78.8759C164.902 78.8759 172.104 74.9494 180.638 67.0964C181.577 66.44 182.421 65.7717 183.17 65.0795C183.17 65.0914 183.17 65.0914 183.182 65.1033C184.834 68.6479 187.235 70.4143 190.384 70.4143H190.527C194.663 70.4143 198.479 68.0512 201.985 63.3132C203.542 60.4966 204.279 59.0883 204.219 59.0883L204.493 59.2673C207.25 64.9363 211.743 67.7648 217.971 67.7648H218.53C219.088 67.7648 219.873 67.717 220.895 67.6216C225.602 66.4042 229.464 64.4827 232.46 61.8571C234.706 60.246 235.835 58.8496 235.835 57.6561C235.847 56.8446 235.3 56.1763 234.207 55.6631ZM19.7777 50.6625C19.7777 51.4979 19.2904 53.1091 18.3158 55.484C14.9046 62.5971 11.5529 66.1536 8.24865 66.1536H7.55928C5.53872 65.5449 4.52843 64.065 4.52843 61.7139C4.52843 60.2698 5.07518 58.7541 6.16866 57.1668C8.92613 52.202 12.7533 49.7674 17.6264 49.8628C19.0646 49.9344 19.7896 49.9225 19.7896 49.827V50.6625H19.7777ZM73.9407 6.64758H73.8931C73.8931 6.44469 73.905 6.45663 73.9407 6.64758ZM56.3737 45.4948C60.3435 34.0017 63.9924 25.0985 67.3085 18.7851C70.6483 12.2807 72.8828 8.39004 74.0001 7.12497C74.012 7.20851 74.012 7.26818 74.0239 7.35173C74.0239 8.6526 73.1087 12.3285 71.2783 18.3674C67.1421 29.4427 63.4575 37.7731 60.2009 43.3704C57.3958 48.2875 55.5179 51.3785 54.5789 52.6555C54.567 52.4765 54.5433 52.3214 54.4957 52.2498C55.0068 50.0419 55.6368 47.7981 56.3737 45.4948ZM202.484 50.6625C202.484 51.4979 201.997 53.1091 201.022 55.484C197.611 62.5971 194.259 66.1536 190.955 66.1536H190.254C188.233 65.5449 187.223 64.065 187.223 61.7139C187.223 61.332 187.27 60.9501 187.342 60.5563C188.186 59.5179 188.613 58.7541 188.613 58.2887V58.0022C188.613 57.871 188.578 57.7755 188.554 57.6561C188.661 57.4891 188.744 57.3339 188.851 57.1668C191.609 52.202 195.436 49.7674 200.309 49.8628C201.747 49.9344 202.472 49.9225 202.472 49.827V50.6625H202.484Z\" fill=\"black\" />\n            <path className=\"buttonDark\" d=\"M509.265 56.2598C508.825 56.2598 508.266 56.3195 507.589 56.4388C504.082 58.5393 498.77 63.8025 491.638 72.2402C489.546 74.7107 488.203 76.1906 487.597 76.7277C487.514 76.489 487.466 76.1787 487.466 75.7371V73.3621C487.466 71.5003 487.882 68.1586 488.714 63.3609V63.1461C488.714 61.9049 488.025 61.2007 486.658 61.0098H486.313C485.196 61.0098 484.019 62.1794 482.76 64.5066C479.42 69.7698 477.031 72.5625 475.581 72.8608C475.486 72.7892 475.319 72.7534 475.058 72.7534C474.036 72.3119 473.524 71.2019 473.524 69.4356C473.596 69.2327 473.703 68.2183 473.857 66.4042C474.606 63.8263 475.2 61.702 475.664 60.0311C476.579 58.8973 477.15 57.9068 477.364 57.0594C477.173 56.5701 476.948 56.2001 476.698 55.8898C476.722 55.7466 476.734 55.6273 476.734 55.5556C476.318 54.5293 475.652 54.0161 474.749 54.0161C474.119 54.207 473.548 54.4935 473.037 54.8873C472.704 55.6989 472.395 56.4866 472.11 57.2504C471.932 57.5249 471.753 57.8113 471.575 58.1455C463.778 66.0223 455.28 69.9607 446.08 69.9607H444.832C442.004 69.9607 439.543 69.3879 437.451 68.2421C435.383 67.0487 433.862 64.8408 432.887 61.5946V61.4633C432.887 61.3439 432.959 61.2365 433.101 61.153C439.163 59.2912 442.752 58.0619 443.893 57.4771C448.767 54.3025 451.465 51.2353 451.976 48.2517C451.976 46.1273 450.264 44.8384 446.853 44.3729H446.223C444.785 44.3729 443.204 44.8026 441.493 45.6618C439.104 46.175 435.906 48.3233 431.913 52.0946C430.534 54.1951 429.524 55.9734 428.858 57.4413C428.668 57.6442 428.478 57.8352 428.288 58.0739C426.636 59.8402 423.759 62.5851 419.647 66.2849C414.976 68.8508 411.434 70.1994 408.997 70.3426H407.226C405.158 70.3426 403.149 69.4237 401.2 67.5857C399.394 64.7453 398.478 62.6448 398.478 61.2962V60.8785C398.478 59.7566 399.12 58.5512 400.392 57.2384C407.096 47.0343 411.636 39.0381 414.013 33.2498C420.098 18.5822 423.141 8.77194 423.141 3.80714V3.67586C423.141 1.8618 422.44 0.632535 421.049 0H420.598C418.743 0 417.056 0.871227 415.546 2.62562C414.714 4.21292 414.025 5.34671 413.49 6.01505C413.3 6.01505 411.838 8.3423 409.104 13.0087C405.408 19.3221 401.961 27.199 398.764 36.6393C397.23 39.8616 396.47 41.9024 396.47 42.7975C394.544 47.4759 393.427 52.0827 393.094 56.6178C392.108 57.322 391.145 58.7303 390.194 60.8666C386.391 66.9055 383.098 71.2974 380.341 74.0424C376.561 77.0738 373.507 78.5895 371.177 78.5895H370.618C370.345 78.5895 370.012 78.482 369.644 78.2792C367.481 77.2767 366.292 74.7704 366.054 70.7604C366.054 67.2396 367.599 61.9407 370.69 54.8515C372.758 51.7962 373.994 49.8032 374.41 48.8723C374.41 47.5714 373.721 46.7956 372.354 46.5689H371.106C365.21 49.3616 360.73 51.2473 357.663 52.202C355.5 53.0852 354.181 53.8132 353.693 54.3741L352.41 56.4746C352.421 56.5104 352.433 56.5224 352.445 56.5582C352.41 56.582 352.374 56.594 352.338 56.6178C343.59 63.3251 335.58 66.6907 328.317 66.6907H326.226C325.786 66.6907 325.56 66.5474 325.56 66.2729C325.928 64.7095 326.119 63.2773 326.119 61.9765C326.119 60.9262 325.905 59.876 325.489 58.8257C324.324 56.0569 321.875 54.6606 318.143 54.6606C316.753 54.6606 315.041 55.0067 313.021 55.7108C312.878 55.8063 312.747 55.9018 312.605 56.0092C311.63 56.0688 310.608 56.8804 309.526 58.4796C307.422 60.4488 305.913 62.5851 304.998 64.9005C304.118 65.8075 303.108 66.7265 301.967 67.6693C298.461 71.1661 294.764 72.9086 290.854 72.9086H290.438C289.047 72.9086 286.848 71.8464 283.853 69.722C282.581 68.6241 281.5 67.2754 280.62 65.6643C278.79 62.3823 276.436 60.7353 273.584 60.7353C271.516 60.7353 269.388 61.6662 267.213 63.528C266.405 64.8169 265.823 65.7001 265.454 66.1775C264.349 62.4658 262.328 60.5801 259.381 60.5801H257.99C256.742 60.5801 255.03 61.2962 252.867 62.7164C251.869 63.6115 251.168 64.2799 250.787 64.7214C251.049 63.9457 251.477 62.8 252.107 61.2485C253.913 57.7039 254.828 55.7227 254.828 55.305V54.8992C254.828 54.219 254.198 53.7416 252.95 53.4671C251.631 53.4671 250.443 54.6128 249.397 56.8923C245.89 63.9338 242.943 70.9632 240.554 77.9808C240.554 79.401 241.291 80.2126 242.753 80.3916H242.966C243.644 80.3916 244.607 79.7233 245.855 78.3985C252.142 69.2805 256.385 64.7214 258.56 64.7214H258.703C258.774 64.7214 258.81 64.8169 258.81 64.9959C259.737 64.9959 260.438 66.8219 260.902 70.4859C261.116 75.3074 262.126 77.7182 263.933 77.7182L264.634 77.575C265.312 77.575 266.429 75.761 268.01 72.1209C269.709 67.3709 271.528 64.984 273.477 64.984H273.75C274.452 64.984 275.937 66.7861 278.207 70.4023C282.546 74.9017 286.729 77.1454 290.747 77.1454H292.696C295.929 77.1454 299.685 75.4149 303.976 71.9896C303.999 72.5028 304.047 73.0041 304.118 73.4695C305.331 77.0857 307.506 78.8878 310.667 78.8878H311.915C315.54 78.8878 318.833 77.0976 321.804 73.5053C322.921 71.7748 323.706 70.9155 324.169 70.9155C324.514 70.9155 325.001 70.9632 325.631 71.0587C334.641 71.0587 343.139 68.3973 351.126 63.0864C354.894 60.6398 356.891 58.8377 357.176 57.6681C358.281 56.8446 359.256 56.2479 360.112 55.9256C362.774 54.7799 364.652 54.1593 365.757 54.0638V54.1474L364.854 57.0475C362.584 62.06 361.443 66.7742 361.443 71.2139C361.443 73.565 361.704 75.3313 362.239 76.489C364.509 80.9167 367.421 83.1366 370.939 83.1366H371.153C374.362 82.7427 376.847 82.0386 378.641 81.0361C383.776 77.5392 387.437 73.9588 389.647 70.3068C391.406 67.729 392.821 65.5807 393.926 63.8263C396.339 70.9155 400.867 74.4601 407.547 74.4601C412.753 74.4601 417.935 72.5863 423.117 68.8269C425.292 67.0248 427.123 65.4375 428.609 64.0531C428.834 64.8527 429.084 65.2585 429.345 65.2585C430.76 67.6335 432.733 69.8414 435.264 71.8703C439.484 73.4337 442.61 74.2095 444.63 74.2095C446.675 74.0185 447.911 73.935 448.351 73.935C452.392 73.935 458.109 72.2641 465.514 68.9344C466.964 67.8722 468.271 66.8697 469.448 65.9149C469.174 67.2158 469.032 68.3496 469.032 69.2805V71.0587C469.887 74.9255 471.67 76.8589 474.356 76.8589C475.937 76.8589 477.459 76.4293 478.921 75.57C481.357 73.2786 482.653 72.0732 482.855 71.9299C482.831 71.9896 482.819 72.1686 482.819 72.467C482.724 73.2786 482.676 73.7559 482.676 73.8992C482.676 75.0687 482.771 77.8376 482.95 82.2176L482.605 83.9004C478.398 90.4525 474.547 97.1955 471.04 104.141C466.678 113.88 464.313 120.874 463.933 125.123C463.945 125.123 463.945 125.111 463.956 125.111C463.802 126.03 463.671 127.307 463.588 128.965C463.588 134.981 465.644 137.988 469.757 137.988H470.589C471.932 137.988 473.501 137.535 475.295 136.628C477.613 135.434 479.741 133.334 481.666 130.302C483.401 127.068 485.006 122.771 486.468 117.437C487.977 108.211 488.726 101.516 488.726 97.3626C488.263 91.5624 488.025 87.4688 488.025 85.0938C488.025 83.5304 490.973 79.3772 496.868 72.646C500.885 67.8722 504.546 64.1366 507.874 61.4514C509.966 60.1266 511.012 58.957 511.012 57.9545C511 57.1072 510.417 56.5343 509.265 56.2598ZM318.619 69.9965C316.277 73.2786 313.936 74.9255 311.618 74.9255C311.107 74.9255 310.727 74.8539 310.465 74.7107C308.932 74.0543 308.171 72.7176 308.171 70.6888C308.361 69.1492 308.445 68.3496 308.445 68.278C308.552 68.0035 308.647 67.7648 308.742 67.5141C309.966 66.0939 311.012 64.7692 311.915 63.516C312.712 65.4017 313.888 66.8816 315.517 67.896C317.632 68.9463 318.69 69.5072 318.69 69.5788L318.619 69.9965ZM320.806 65.7001H320.663C320.342 65.7001 319.831 65.4972 319.13 65.1033C317.204 64.0292 316.242 62.9312 316.242 61.8213C316.242 60.1624 317.169 59.2434 319.023 59.0644C320.651 59.0644 321.459 60.1027 321.459 62.1794C321.103 64.5185 320.877 65.7001 320.806 65.7001ZM417.698 6.64758H417.65C417.65 6.44469 417.662 6.45663 417.698 6.64758ZM400.131 45.4948C404.1 34.0017 407.749 25.0985 411.065 18.7851C414.405 12.2807 416.64 8.39004 417.757 7.12497C417.769 7.20851 417.769 7.26818 417.781 7.35173C417.781 8.6526 416.866 12.3285 415.035 18.3674C410.899 29.4427 407.214 37.7731 403.958 43.3704C401.153 48.2875 399.275 51.3785 398.336 52.6555C398.324 52.4765 398.3 52.3214 398.253 52.2498C398.764 50.0419 399.394 47.7981 400.131 45.4948ZM446.057 48.3591H446.366C446.615 48.3591 446.746 48.4426 446.746 48.6097C446.746 49.4451 444.987 51.1995 441.457 53.849C438.093 55.4244 435.716 56.2598 434.314 56.3791C434.385 56.0569 434.849 55.3886 435.752 54.3383C438.058 51.4859 441.493 49.4929 446.057 48.3591ZM483.211 106.815C483.294 106.815 483.354 106.755 483.39 106.66L482.367 113.522C482.415 113.522 482.451 113.51 482.486 113.474C479.693 127.068 475.806 133.871 470.838 133.871H470.137C469.21 133.871 468.616 132.236 468.366 128.977C468.366 125.158 469.269 120.743 471.088 115.766C473.964 108.092 477.577 100.716 481.916 93.639C483.057 91.5147 483.675 90.4525 483.794 90.4525C483.96 90.4525 484.043 92.911 484.043 97.8281C484.055 99.7018 483.77 102.685 483.211 106.815Z\" fill=\"black\" />\n        </svg>\n        </Link>\n    )\n}\n\nexport default HomeButton;","import React, { Component } from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst send = <svg width=\"17\" height=\"19\" viewBox=\"0 0 17 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M16.0909 1L2 9.72727L14.7273 15.5455L16.0909 1Z\" stroke=\"white\" />\n    <path d=\"M9.72727 13.1212L13.3636 5.36365L7 11.6667\" stroke=\"white\" />\n    <path d=\"M7 12.1515V17L10.1818 13.6061\" stroke=\"white\" />\n</svg>\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\");\n}\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { name: \"\", email: \"\", message: \"\" };\n    }\n\n    handleSubmit = e => {\n        fetch(\"/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: encode({ \"form-name\": \"contact\", ...this.state })\n        })\n            .then(() => alert(\"Thank-You for your Email!\"))\n            .catch(error => alert(error));\n\n        e.preventDefault();\n    };\n\n    handleChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { name, email, message } = this.state;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"contactFormStyling\">\n                <FormGroup>\n                    <Label for=\"exampleName\">NAME</Label>\n                    <Input id=\"exampleName\" type=\"text\" name=\"name\" value={name} onChange={this.handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"exampleEmail\">EMAIL</Label>\n                    <Input id=\"exampleEmail\" type=\"email\" name=\"email\" value={email} onChange={this.handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"exampleText\">MESSAGE</Label>\n                    <Input id=\"exampleText\" type=\"textarea\" name=\"message\" value={message} onChange={this.handleChange} required />\n                </FormGroup>\n                <FormGroup check row className=\"pl-0\">\n                    <Col sm={{ size: 10 }} className=\"mx-auto text-center\">\n                        <Button className=\"mainButton contactFormButton\">{send}</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        );\n    }\n}\n\n\nexport default Contact;","import React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../UserContext';\nimport HomeButton from './HomeButton'\nimport { motion } from \"framer-motion\";\nimport Contact from \"./ContactComponent\"\n\nconst transition = { duration: 2, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst itemAbout = {\n\n    initial: {\n        opacity: 0,\n    },\n    in: {\n        opacity: 1,\n    },\n    out: {\n        opacity: 0,\n    },\n\n};\n\nconst download = <svg width=\"13\" height=\"17\" viewBox=\"0 0 13 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M9.75 11L6.5 14M3 11L6.5 14M6.5 14L6.5 8\" stroke=\"white\" stroke-width=\"1.2\" />\n    <path d=\"M8.16667 4.78125V5.28125H8.66667H12.5V16.5H0.5V0.5H8.16667V4.78125Z\" stroke=\"white\" />\n</svg>\n\nfunction RenderAbout({ about }) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const splitList = 768;\n\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    console.log(window.innerWidth)\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-10 col-md-8 text-center pb-2 mx-auto textOverlayContainer\">\n                    <div className=\"pb-2\">\n                        <HomeButton />\n                    </div>\n                    <div className=\"textOnTop\">\n                        <h1>ABOUT</h1>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8 col-lg-6 mx-auto pb-2 text-center\"><p>{about.intro}</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-8 mx-auto pb-5 text-center\"><a className=\"btn mainButton downloadButton\" href={\"/assets/images/aliciaMorleyResume2023.pdf\"} alt='resume' title=\"download my resume\">{download}</a>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-6 text-right pl-0\">\n                    <h1>{about.titleFront}</h1>\n                </div>\n                <div className=\"col-6 text-left\">\n                    <h1>{about.titleDesign}</h1>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-6 mx-auto text-right\">\n                    {about.frontend.map(info =>\n                        <ul>\n                            <li>{info}</li>\n                        </ul>\n                    )}\n                </div>\n                <div className=\"col-6 mx-auto text-left\">\n                    {about.design.map(info =>\n                        <ul>\n                            <li>{info}</li>\n                        </ul>\n                    )}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 mx-auto text-center pt-5 px-0\">\n                    <h1>{about.experience}</h1>\n                    <>\n                        {about.experienceList.map(info => {\n                            const split = info.split(\"~\")\n                            const first = split[0];\n                            const second = split[1];\n                            return <ul>\n                                {windowWidth < splitList ?\n                                    <>\n                                        <li>{first}</li>\n                                        <li className=\"smallerFont\">{second}</li>\n                                    </>\n                                    :\n                                    <li className=\"sm\">{first}<span className=\"smallerFont\">{second}</span></li>\n                                }\n                            </ul>\n                        })}\n                    </>\n                </div>\n            </div>\n            <div className=\"row text-center\">\n                <div className=\"col-lg-6 col-md-8 col-12 mx-auto pt-5\" >\n                    <h1>CONTACT</h1>\n                    <p className=\"col-12 col-md-8 mx-auto\">IT WOULD BE GREAT TO HEAR FROM YOU! <br></br>PLEASE CONTACT ME USING THE FORM BELOW.</p>\n                    <Contact />\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction About() {\n    const {about} = useContext(UserContext)\n    const aboutItems = about.map((abouts, index) => {\n        return (\n            <RenderAbout key={abouts.id} index={index} about={abouts} />\n        )\n    });\n\n    return (\n        <div className=\"container-fluid pagePbBg maxWidthContainer aboutContainer px-5 mx-auto\">\n            <motion.div\n                variants={itemAbout}\n                transition={transition}\n                initial=\"initial\"\n                animate=\"in\"\n                exit=\"out\">\n                {aboutItems}\n            </motion.div>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction SpinningButtons() {\n    return (\n        <Link to=\"/portfolio\" className=\"cursor\">\n            <svg width=\"99\" height=\"98\" viewBox=\"0 0 99 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"circleButton3\">\n                    <g id=\"spin3\" className=\"atagLanding\">\n                        <ellipse className=\"hoverColour3\" cx=\"49\" cy=\"49.0074\" rx=\"25\" ry=\"25.0038\" fill=\"currentColor\" />\n                        <path d=\"M53.942 6.91356L53.9069 7.49239C53.8894 7.77303 53.8192 8.05367 53.6964 8.29924C53.5561 8.5448 53.3807 8.77282 53.1877 8.96577C52.9772 9.15871 52.7492 9.29903 52.4861 9.40427C52.223 9.50951 51.9423 9.54459 51.6442 9.52705C51.381 9.50951 51.1355 9.45689 50.8724 9.36919C50.6092 9.28149 50.3812 9.14117 50.1883 8.94823C49.9953 8.75528 49.8375 8.52726 49.7147 8.24662C49.5919 7.96597 49.5568 7.59763 49.5743 7.17666L49.9076 2.03737C49.9252 1.73919 49.9953 1.45855 50.1181 1.19544C50.2409 0.932338 50.3988 0.721855 50.6093 0.546453C50.8197 0.371051 51.0478 0.230729 51.3284 0.143028C51.6091 0.0553265 51.8897 -0.0148345 52.223 0.00270578C52.8545 0.0377862 53.3456 0.28335 53.714 0.721855C53.8894 0.932338 54.0297 1.1779 54.1174 1.45855C54.2051 1.75673 54.2402 2.05491 54.2226 2.38818L54.1876 2.91438L52.8545 2.82668L52.8895 2.38818C52.9071 2.12507 52.8545 1.89705 52.7141 1.68657C52.5738 1.47609 52.3809 1.37084 52.1353 1.3533C51.802 1.33576 51.574 1.42346 51.4512 1.61641C51.3284 1.80935 51.2583 2.07245 51.2407 2.38818L50.9425 7.15912C50.925 7.42222 50.9776 7.66779 51.0829 7.86073C51.1881 8.05367 51.3986 8.15891 51.6968 8.17646C51.7845 8.17646 51.8722 8.17646 51.9774 8.14137C52.0827 8.12383 52.1704 8.07121 52.2756 8.00105C52.3633 7.93089 52.4335 7.84319 52.4861 7.72041C52.5387 7.59763 52.5738 7.45731 52.5914 7.26436L52.6264 6.80832L53.942 6.91356Z\" fill=\"white\" />\n                        <path d=\"M55.8715 9.91281L57.9062 0.774348L59.2217 1.07253L57.4852 8.91302L60.0812 9.49185L59.783 10.8074L55.8715 9.91281Z\" fill=\"white\" />\n                        <path d=\"M61.6775 11.421L64.8348 2.59826L66.0977 3.05431L62.9404 11.877L61.6775 11.421Z\" fill=\"white\" />\n                        <path d=\"M70.2022 12.3152L69.9391 12.8239C69.7988 13.087 69.6409 13.2975 69.4129 13.4729C69.2024 13.6483 68.9569 13.7886 68.6937 13.8763C68.4306 13.9815 68.1675 14.0341 67.8693 14.0166C67.5887 13.9991 67.308 13.9289 67.0449 13.7886C66.8169 13.6658 66.6064 13.5255 66.3959 13.3325C66.1854 13.1396 66.0451 12.9291 65.9398 12.6835C65.8346 12.438 65.782 12.1573 65.782 11.8416C65.782 11.5259 65.8872 11.1926 66.0802 10.8067L68.4306 6.2112C68.571 5.93055 68.7464 5.70253 68.9569 5.52713C69.1673 5.33419 69.4129 5.21141 69.676 5.1237C69.9391 5.036 70.2022 5.01846 70.5004 5.036C70.7811 5.05354 71.0793 5.14124 71.3599 5.29911C71.9212 5.57975 72.2896 6.00072 72.4475 6.54446C72.5176 6.80757 72.5527 7.08821 72.5176 7.38639C72.4825 7.68458 72.3948 7.98276 72.2545 8.26341L72.0089 8.73699L70.8162 8.12308L71.0267 7.71966C71.1494 7.49164 71.1845 7.24607 71.1319 7.00051C71.0793 6.75495 70.9565 6.57954 70.7285 6.4743C70.4303 6.31644 70.1847 6.31644 69.9918 6.43922C69.7988 6.562 69.6409 6.77249 69.4831 7.05313L67.308 11.3154C67.1852 11.561 67.1326 11.789 67.1502 11.9995C67.1677 12.21 67.3256 12.4029 67.5887 12.5432C67.6588 12.5783 67.7641 12.6134 67.8693 12.6309C67.9746 12.6485 68.0798 12.6485 68.1851 12.6309C68.2903 12.5958 68.3956 12.5432 68.4833 12.4555C68.5885 12.3678 68.6762 12.245 68.7639 12.0872L68.9744 11.6838L70.2022 12.3152Z\" fill=\"white\" />\n                        <path d=\"M70.7986 15.824L76.3766 8.29923L77.4641 9.10608L74.9032 12.5264L74.9207 12.544L79.0428 10.2813L80.1128 11.0881L76.4117 13.0176L74.8155 18.8234L73.6753 17.9639L74.9207 13.7192L73.535 14.3857L71.8686 16.6308L70.7986 15.824Z\" fill=\"white\" />\n                        <path d=\"M79.0779 23.2084L85.3224 18.0341L84.3401 16.8413L85.3048 16.0345L88.1464 19.4548L87.1817 20.2617L86.1994 19.0689L79.9549 24.2433L79.0779 23.2084Z\" fill=\"white\" />\n                        <path d=\"M87.8833 22.9102C88.199 22.7173 88.5323 22.5945 88.848 22.5594C89.1638 22.5244 89.462 22.5419 89.7426 22.6296C90.0057 22.7173 90.2513 22.8401 90.4793 23.033C90.7074 23.226 90.8828 23.4189 91.0231 23.6469C91.1634 23.875 91.2687 24.1381 91.3213 24.4187C91.3739 24.6994 91.3914 24.98 91.3388 25.2606C91.2862 25.5413 91.1634 25.8044 90.988 26.0675C90.8126 26.3306 90.5495 26.5586 90.2338 26.7516L85.9889 29.3124C85.6556 29.5229 85.3224 29.6282 85.0242 29.6632C84.7084 29.6983 84.4278 29.6632 84.1647 29.5931C83.884 29.5054 83.6384 29.3651 83.4104 29.1897C83.1824 29.0143 83.007 28.8038 82.8667 28.5757C82.7263 28.3477 82.6211 28.0846 82.5685 27.804C82.5158 27.5233 82.5158 27.2427 82.5685 26.962C82.6211 26.6814 82.7263 26.4008 82.9017 26.1552C83.0771 25.8921 83.3227 25.6641 83.6735 25.4711L87.8833 22.9102ZM84.3401 26.6112C84.0594 26.7866 83.9016 26.9796 83.8665 27.2076C83.8314 27.4356 83.8665 27.6637 84.0068 27.8741C84.1296 28.0846 84.305 28.2249 84.533 28.2951C84.761 28.3653 85.0066 28.3302 85.2873 28.1548L89.5146 25.5939C89.7952 25.4185 89.9531 25.2256 89.9882 24.9975C90.0233 24.7695 89.9882 24.5415 89.8479 24.331C89.7251 24.1205 89.5497 23.9802 89.3216 23.91C89.0936 23.8399 88.848 23.875 88.5674 24.0504L84.3401 26.6112Z\" fill=\"white\" />\n                        <path d=\"M86.4099 35.8195L95.3732 33.1187L96.5309 36.9419L95.3205 37.3101L94.5488 34.7672L91.9176 35.5564L92.5842 37.7661L91.3739 38.1344L90.7073 35.9247L88.0762 36.7139L88.848 39.2568L87.5675 39.6426L86.4099 35.8195Z\" fill=\"white\" />\n                        <path d=\"M87.9535 41.4852L97.2325 40.2751L97.3904 41.5554L92.058 44.2912V44.3088L97.6535 43.5722L97.8289 44.905L88.5499 46.1151L88.392 44.87L93.7068 42.1166V42.0815L88.1289 42.8181L87.9535 41.4852Z\" fill=\"white\" />\n                        <path d=\"M88.6025 49.2555L96.7063 49.4484L96.7414 47.9051L98.0043 47.9402L97.899 52.3772L96.6361 52.3421L96.6712 50.7988L88.5674 50.6059L88.6025 49.2555Z\" fill=\"white\" />\n                        <path d=\"M88.3569 53.7811L97.6008 55.3244L96.9343 59.2703L95.6889 59.0599L96.1274 56.4468L93.4086 55.9908L93.0227 58.2707L91.7773 58.0602L92.1632 55.7803L89.462 55.3244L89.0234 57.9375L87.7079 57.7095L88.3569 53.7811Z\" fill=\"white\" />\n                        <path d=\"M87.2343 59.5693L96.1099 62.5512L95.4258 64.6034C94.9171 66.0943 93.7945 66.5503 92.058 65.9715C91.5318 65.7961 91.1108 65.5681 90.8126 65.2874C90.4969 65.0068 90.3039 64.6209 90.2162 64.1298H85.7083L86.1643 62.7792L90.3565 62.8669L90.6197 62.1127L86.8309 60.8322L87.2343 59.5693ZM94.4786 63.4282L91.7072 62.4985L91.4616 63.2177C91.3914 63.4457 91.3564 63.6387 91.3739 63.779C91.3914 63.9368 91.4441 64.0596 91.5318 64.1824C91.6195 64.2876 91.7598 64.3753 91.9177 64.4631C92.0755 64.5508 92.2685 64.6209 92.4965 64.6911C92.7245 64.7612 92.9175 64.8139 93.0929 64.8489C93.2683 64.884 93.4437 64.884 93.584 64.8489C93.8647 64.7612 94.0927 64.5157 94.233 64.0772L94.4786 63.4282Z\" fill=\"white\" />\n                        <path d=\"M83.1122 74.04L82.6211 73.7243C82.3755 73.5664 82.1826 73.3735 82.0247 73.1279C81.8668 72.8824 81.7616 72.6368 81.6914 72.3737C81.6213 72.0931 81.6213 71.83 81.6563 71.5493C81.6914 71.2687 81.7967 71.0056 81.9721 70.76C82.1124 70.5495 82.2878 70.3566 82.4808 70.1637C82.6912 69.9882 82.9193 69.8479 83.1824 69.7778C83.4455 69.6901 83.7262 69.6725 84.0419 69.7076C84.3576 69.7427 84.6733 69.883 85.0417 70.111L89.3567 72.9525C89.6198 73.1279 89.8303 73.3209 89.9882 73.5489C90.1461 73.7769 90.2513 74.0225 90.3215 74.3031C90.3741 74.5662 90.3741 74.8469 90.3215 75.1275C90.2688 75.4082 90.1461 75.6888 89.9706 75.9519C89.6198 76.4781 89.1638 76.7939 88.6025 76.8991C88.3218 76.9517 88.0412 76.9517 87.7605 76.8816C87.4623 76.8289 87.1817 76.7062 86.9186 76.5308L86.48 76.2326L87.2168 75.11L87.5851 75.3556C87.7956 75.4959 88.0412 75.566 88.2867 75.5485C88.5323 75.531 88.7253 75.4082 88.8656 75.1977C89.041 74.917 89.0761 74.6715 88.9708 74.4785C88.8656 74.2856 88.6726 74.0927 88.4095 73.9173L84.4102 71.2862C84.1822 71.1284 83.9542 71.0582 83.7437 71.0582C83.5332 71.0582 83.3227 71.181 83.1648 71.4441C83.1122 71.5142 83.0771 71.602 83.0421 71.7072C83.007 71.8124 83.007 71.9177 83.007 72.0229C83.0245 72.1282 83.0596 72.2334 83.1473 72.3386C83.235 72.4439 83.3403 72.5491 83.4806 72.6544L83.8665 72.8999L83.1122 74.04Z\" fill=\"white\" />\n                        <path d=\"M79.5514 74.233L86.4976 80.53L85.603 81.5297L79.6391 76.1274L77.85 78.0919L76.8502 77.1973L79.5514 74.233Z\" fill=\"white\" />\n                        <path d=\"M75.3768 78.5303L81.4985 85.6166L80.4812 86.4936L74.3594 79.4073L75.3768 78.5303Z\" fill=\"white\" />\n                        <path d=\"M70.3952 85.5114L70.0794 85.0203C69.9216 84.7747 69.8163 84.5116 69.7637 84.2485C69.7111 83.9678 69.7111 83.7047 69.7637 83.4241C69.8163 83.1435 69.9216 82.8979 70.0619 82.6523C70.2022 82.4068 70.4127 82.2138 70.6583 82.0384C70.8688 81.8981 71.0968 81.7928 71.3599 81.7051C71.623 81.6174 71.8861 81.5824 72.1492 81.6174C72.4299 81.6525 72.693 81.7402 72.9561 81.8981C73.2192 82.0559 73.4648 82.3191 73.7104 82.6699L76.552 86.9672C76.7274 87.2303 76.8326 87.4934 76.8852 87.7741C76.9379 88.0547 76.9379 88.3178 76.8852 88.5985C76.8326 88.8791 76.7274 89.1247 76.552 89.3527C76.3766 89.5807 76.1661 89.8087 75.903 89.9841C75.3767 90.3349 74.833 90.4402 74.2717 90.3174C73.991 90.2473 73.7455 90.142 73.4999 89.9666C73.2543 89.7912 73.0438 89.5807 72.8684 89.3001L72.5702 88.8616L73.6928 88.1249L73.9384 88.4932C74.0787 88.7212 74.2717 88.8616 74.4997 88.9493C74.7277 89.0194 74.9558 89.0019 75.1662 88.8616C75.4469 88.6862 75.5697 88.4757 75.5521 88.2301C75.5346 88.0021 75.4294 87.7565 75.254 87.4934L72.6228 83.4942C72.4825 83.2662 72.3071 83.1084 72.0966 83.0207C71.9037 82.933 71.6756 82.968 71.4125 83.1434C71.3424 83.1961 71.2722 83.2487 71.202 83.3364C71.1319 83.4241 71.0793 83.5118 71.0442 83.617C71.0091 83.7223 71.0091 83.8275 71.0442 83.9678C71.0617 84.1082 71.1319 84.2485 71.2371 84.3888L71.4827 84.7747L70.3952 85.5114Z\" fill=\"white\" />\n                        <path d=\"M67.0449 84.3011L70.8513 92.8607L69.6234 93.4045L67.8869 89.493L67.8693 89.5105L67.8167 94.2113L66.5889 94.7551L66.7292 90.5805L62.4668 86.3358L63.7648 85.7569L66.852 88.9317L66.9572 87.4057L65.8171 84.8448L67.0449 84.3011Z\" fill=\"white\" />\n                        <path d=\"M56.5205 87.8793L57.9238 95.8601L59.4498 95.597L59.6603 96.8423L55.2751 97.6141L55.0646 96.3687L56.5907 96.1056L55.1874 88.1248L56.5205 87.8793Z\" fill=\"white\" />\n                        <path d=\"M52.4335 95.6672C52.451 96.0355 52.3809 96.3863 52.2581 96.667C52.1353 96.9652 51.9599 97.2107 51.7494 97.4037C51.5389 97.5966 51.3109 97.7369 51.0478 97.8422C50.7847 97.9474 50.5216 98 50.2409 98C49.9778 98 49.6972 97.9649 49.434 97.8772C49.1709 97.7895 48.9254 97.6492 48.6973 97.4738C48.4868 97.2809 48.3114 97.0529 48.1711 96.7722C48.0308 96.4916 47.9606 96.1583 47.9431 95.7724L47.8203 90.8261C47.8028 90.4402 47.8729 90.0894 47.9957 89.8087C48.1185 89.5281 48.2939 89.2825 48.4868 89.1071C48.6973 88.9142 48.9429 88.7563 49.206 88.6511C49.4691 88.5458 49.7322 88.4932 50.0129 88.4932C50.276 88.4932 50.5566 88.5283 50.8198 88.616C51.0829 88.7037 51.3284 88.844 51.5565 89.037C51.7845 89.2124 51.9599 89.4404 52.1002 89.721C52.2406 90.0017 52.3107 90.3349 52.3283 90.7208L52.4335 95.6672ZM50.9601 90.7559C50.9601 90.4226 50.8548 90.1946 50.6794 90.0543C50.504 89.914 50.276 89.8263 50.0304 89.8438C49.7849 89.8438 49.5744 89.9315 49.399 90.0894C49.2235 90.2472 49.1358 90.4928 49.1534 90.8085L49.2762 95.7549C49.2762 96.0881 49.3814 96.3162 49.5568 96.4565C49.7322 96.5968 49.9603 96.6845 50.2058 96.667C50.4514 96.667 50.6619 96.5793 50.8373 96.4214C51.0127 96.2635 51.1004 96.018 51.0829 95.7023L50.9601 90.7559Z\" fill=\"white\" />\n                        <path d=\"M41.9266 88.002L39.8568 97.1405L35.9628 96.2635L36.2434 95.0357L38.8394 95.6145L39.4534 92.9309L37.1906 92.4222L37.4713 91.1944L39.734 91.703L40.3479 89.0194L37.7519 88.4406L38.0501 87.125L41.9266 88.002Z\" fill=\"white\" />\n                        <path d=\"M36.2785 86.5813L32.7704 95.2637L31.5776 94.7726L31.8232 88.7738L31.8056 88.7563L29.6832 93.9833L28.4378 93.4746L31.9459 84.7922L33.1212 85.2658L32.9107 91.247L32.9282 91.2645L35.0507 86.0376L36.2785 86.5813Z\" fill=\"white\" />\n                        <path d=\"M29.192 83.3013L25.0173 90.2472L26.3504 91.0541L25.7014 92.1416L21.8951 89.8438L22.5441 88.7563L23.8772 89.5631L28.0519 82.6172L29.192 83.3013Z\" fill=\"white\" />\n                        <path d=\"M25.3506 80.8281L19.4394 88.0898L16.3347 85.5639L17.1416 84.5817L19.1939 86.2656L20.9304 84.1432L19.1412 82.6874L19.9481 81.7051L21.7373 83.1609L23.4738 81.0386L21.4215 79.3547L22.2635 78.3198L25.3506 80.8281Z\" fill=\"white\" />\n                        <path d=\"M20.8777 76.9868L13.8965 83.2311L12.4582 81.6174C11.4057 80.4422 11.5636 79.2495 12.9318 78.0217C13.3352 77.6533 13.7562 77.4077 14.1596 77.2674C14.5631 77.1446 15.0016 77.1622 15.4576 77.32L17.6853 73.391L18.6325 74.4434L16.4575 78.0567L17.0012 78.6531L19.9831 75.987L20.8777 76.9868ZM13.9316 81.3894L16.1066 79.4424L15.598 78.8811C15.4401 78.7057 15.2998 78.5829 15.1419 78.5303C15.0016 78.4777 14.8612 78.4426 14.7034 78.4777C14.5631 78.5128 14.4227 78.5654 14.2649 78.6706C14.107 78.7759 13.9491 78.8987 13.7737 79.0565C13.5983 79.2144 13.458 79.3547 13.3352 79.495C13.2124 79.6353 13.1423 79.7757 13.0896 79.916C13.0195 80.1966 13.1423 80.5124 13.4404 80.8632L13.9316 81.3894Z\" fill=\"white\" />\n                        <path d=\"M10.3358 66.3048L10.8444 66.0417C11.1075 65.9014 11.3707 65.8312 11.6513 65.8137C11.932 65.7961 12.2126 65.8137 12.4757 65.9014C12.7388 65.9891 12.9844 66.1118 13.2124 66.2872C13.4405 66.4626 13.6159 66.6907 13.7562 66.9538C13.879 67.1818 13.9667 67.4273 14.0193 67.6905C14.0719 67.9536 14.0719 68.2167 14.0193 68.4973C13.9667 68.7604 13.8439 69.0235 13.651 69.2691C13.4755 69.5146 13.1774 69.7427 12.809 69.9356L8.23087 72.286C7.95022 72.4263 7.68711 72.514 7.40646 72.5315C7.12581 72.5666 6.84515 72.5315 6.59958 72.4438C6.33647 72.3561 6.0909 72.2334 5.88041 72.0404C5.66993 71.8475 5.47698 71.6195 5.33665 71.3213C5.03846 70.76 5.00338 70.2162 5.17879 69.6725C5.26649 69.4094 5.40682 69.1638 5.6173 68.9358C5.81025 68.7078 6.05582 68.5324 6.33647 68.3745L6.81007 68.129L7.424 69.3217L7.02056 69.5322C6.79253 69.655 6.61712 69.8304 6.51188 70.0408C6.40664 70.2689 6.42418 70.4794 6.52942 70.7074C6.68729 71.0056 6.88024 71.1459 7.10827 71.1634C7.33629 71.1634 7.5994 71.0933 7.88006 70.9529L12.1425 68.7604C12.388 68.6376 12.5634 68.4798 12.6687 68.2868C12.7739 68.0939 12.7564 67.8659 12.6161 67.5852C12.581 67.5151 12.5108 67.4274 12.4406 67.3572C12.3705 67.287 12.2828 67.2169 12.1775 67.1818C12.0723 67.1467 11.967 67.1292 11.8267 67.1467C11.6864 67.1642 11.5461 67.1993 11.3882 67.287L10.9848 67.4975L10.3358 66.3048Z\" fill=\"white\" />\n                        <path d=\"M11.8969 63.0949L3.0038 66.0241L2.58282 64.7437L10.1955 62.2355L9.37108 59.7097L10.6516 59.2887L11.8969 63.0949Z\" fill=\"white\" />\n                        <path d=\"M10.2305 57.3065L1.03917 59.1128L0.776062 57.7975L9.9674 55.9911L10.2305 57.3065Z\" fill=\"white\" />\n                        <path d=\"M6.63466 49.5363L7.21351 49.5012C7.5117 49.4837 7.77481 49.5188 8.03792 49.6065C8.30103 49.6941 8.5466 49.8344 8.75709 50.0098C8.96758 50.1852 9.14299 50.4132 9.28331 50.6587C9.42364 50.9042 9.4938 51.1848 9.51134 51.483C9.52888 51.746 9.51134 51.9916 9.45872 52.2722C9.4061 52.5352 9.30085 52.7808 9.14299 53.0087C8.98512 53.2367 8.77463 53.4121 8.49398 53.5699C8.21333 53.7278 7.88006 53.8155 7.45908 53.833L2.31965 54.1662C2.02146 54.1838 1.72326 54.1487 1.46015 54.061C1.19704 53.9733 0.951472 53.833 0.740983 53.6576C0.530495 53.4823 0.372628 53.2543 0.249843 52.9912C0.109518 52.7457 0.0393547 52.4475 0.00427331 52.1319C-0.0308081 51.5005 0.144599 50.9744 0.512954 50.5535C0.705902 50.343 0.933931 50.1852 1.19704 50.0624C1.46015 49.9397 1.75835 49.8695 2.09162 49.8344L2.61784 49.7994L2.70554 51.1322L2.26703 51.1673C2.00392 51.1848 1.77589 51.2725 1.60048 51.4304C1.42507 51.5882 1.33737 51.7987 1.35491 52.0442C1.37245 52.3774 1.49523 52.5878 1.70572 52.6931C1.91621 52.7808 2.17932 52.8334 2.49506 52.7983L7.26613 52.4826C7.54678 52.4651 7.75727 52.3949 7.93268 52.2546C8.10808 52.1143 8.17825 51.9039 8.16071 51.6057C8.16071 51.518 8.12563 51.4304 8.09054 51.3251C8.05546 51.2199 8.00284 51.1322 7.91514 51.0445C7.84497 50.9744 7.73973 50.9042 7.61695 50.8692C7.49416 50.8165 7.33629 50.8165 7.16089 50.8165L6.70483 50.8516L6.63466 49.5363Z\" fill=\"white\" />\n                        <path d=\"M9.33594 47.2728L0.00427246 46.3609L0.127058 45.028L4.38945 45.4314V45.4138L0.320005 43.0463L0.44279 41.7134L4.00356 43.8881L9.80954 42.2746L9.66921 43.6952L5.38927 44.8176L6.66975 45.6594L9.45872 45.9224L9.33594 47.2728Z\" fill=\"white\" />\n                        <path d=\"M11.4057 36.3276L3.77551 33.6093L3.24929 35.0649L2.05652 34.644L3.54748 30.4525L4.74025 30.8734L4.21403 32.3291L11.8442 35.0474L11.4057 36.3276Z\" fill=\"white\" />\n                        <path d=\"M6.65224 28.909C6.31896 28.7336 6.05585 28.5231 5.86291 28.26C5.66996 28.0145 5.54717 27.7338 5.47701 27.4532C5.40685 27.1725 5.40685 26.9094 5.44193 26.6288C5.47701 26.3481 5.56471 26.085 5.70504 25.8395C5.84536 25.5939 6.00323 25.3834 6.21372 25.1905C6.42421 24.9975 6.66978 24.8572 6.93289 24.752C7.196 24.6643 7.49419 24.6292 7.80992 24.6467C8.12566 24.6643 8.44139 24.752 8.77466 24.9274L13.1423 27.2602C13.4931 27.4532 13.7562 27.6636 13.9492 27.9092C14.1421 28.1548 14.2649 28.4179 14.3175 28.6985C14.3877 28.9792 14.3877 29.2598 14.3526 29.5405C14.3175 29.8211 14.2298 30.0842 14.107 30.3298C13.9843 30.5753 13.8089 30.7858 13.5984 30.9788C13.3879 31.1717 13.1423 31.312 12.8792 31.3997C12.6161 31.505 12.3179 31.5576 12.0197 31.54C11.704 31.5225 11.3882 31.4173 11.0374 31.2419L6.65224 28.909ZM11.6513 30.0491C11.932 30.207 12.1951 30.2421 12.4056 30.1544C12.6161 30.0667 12.7915 29.9088 12.9143 29.6983C13.0371 29.4878 13.0546 29.2598 13.0195 29.0318C12.9669 28.8038 12.809 28.6108 12.5108 28.453L8.1432 26.1201C7.86255 25.9622 7.59944 25.9272 7.38895 26.0149C7.16092 26.1026 7.00305 26.2604 6.88027 26.4709C6.75748 26.6814 6.73994 26.9094 6.77502 27.1374C6.82764 27.3655 6.98551 27.5584 7.2837 27.7163L11.6513 30.0491Z\" fill=\"white\" />\n                        <path d=\"M18.5097 23.5768L11.1602 16.8063L14.0368 13.6666L15.0367 14.5786L13.1072 16.6659L15.2647 18.648L16.9486 16.8413L17.9484 17.7534L16.282 19.5776L18.4396 21.5597L20.3515 19.4724L21.4039 20.4371L18.5097 23.5768Z\" fill=\"white\" />\n                        <path d=\"M22.8598 19.0689L16.7732 11.1407L17.8607 10.2988L23.2457 13.7542L23.2633 13.7367L19.5972 8.96576L20.7374 8.08875L26.824 16.0169L25.754 16.8413L20.3515 13.421L20.334 13.4385L24 18.1919L22.8598 19.0689Z\" fill=\"white\" />\n                        <path d=\"M29.7183 14.3325L25.6488 6.70247L24.1929 7.47424L23.5615 6.2815L27.7537 4.05389L28.3852 5.24663L26.9293 6.0184L30.9987 13.6484L29.7183 14.3325Z\" fill=\"white\" />\n                        <path d=\"M34.0508 12.2105L30.7532 2.77386L34.77 1.37065L35.2085 2.63354L32.5248 3.56318L33.4895 6.33453L35.8225 5.51014L36.261 6.79058L33.9281 7.61497L34.8928 10.3863L37.5765 9.45669L38.0501 10.8073L34.0508 12.2105Z\" fill=\"white\" />\n                        <path d=\"M40.0498 10.2988L38.3834 0.441213L40.6461 0.0553275C42.3125 -0.225316 43.2948 0.599075 43.6281 2.5285C43.7333 3.10733 43.7158 3.616 43.6105 4.0545C43.5053 4.49301 43.2422 4.87889 42.8212 5.19462L45.1015 9.43935L43.6105 9.68492L41.5933 5.70328L40.7514 5.84361L41.4706 10.0533L40.0498 10.2988ZM40.0147 1.52871L40.5409 4.59825L41.3478 4.45793C41.5933 4.42285 41.7863 4.35269 41.9266 4.24744C42.0669 4.15974 42.1546 4.03696 42.2248 3.89664C42.2774 3.75632 42.295 3.58092 42.295 3.38797C42.295 3.19503 42.2599 2.96701 42.2248 2.72144C42.1897 2.47588 42.1371 2.24786 42.0669 2.07245C41.9968 1.89705 41.9266 1.75673 41.8214 1.61641C41.6109 1.38839 41.2425 1.31822 40.7514 1.40593L40.0147 1.52871Z\" fill=\"white\" />\n                    </g>\n                    <path d=\"M49.15 43L55 48.6842M49.15 55L55 48.6842M55 48.6842H42\" stroke=\"white\" stroke-width=\"1.2\" />\n                </g>\n            </svg>\n        </Link>\n    );\n}\n\nexport default SpinningButtons;","import React, { useState, useEffect } from 'react';\n\nfunction Signature() {\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const breakpoint1 = 550;\n    const breakpoint2 = 825;\n    const breakpoint3 = 1100;\n\n\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    const dimsWidth = (windowWidth < breakpoint1) ? '284.5' :\n        (windowWidth < breakpoint2) ? '569' :\n            (windowWidth < breakpoint3) ? '850.5' :\n            1138;\n\n    const dimsHeight = (windowWidth < breakpoint1) ? '88' :\n        (windowWidth < breakpoint2) ? '176' :\n            (windowWidth < breakpoint3) ? '264' :\n            352;\n\n\n    return (\n        <>\n            <svg width={dimsWidth} height={dimsHeight} viewBox=\"0 0 569 176\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <defs>\n                    <clipPath id=\"myClip\">\n                        <path d=\"M125.3 74.4C126.5 74.3 128 73.9 128.3 73.6C130.5 72.8 131.4 71.9 131.4 70.2C131.2 68.6 130.5 67.8 129.3 67.8C128.7 67.8 128.3 67.9 127.8 68C124.5 68.7 122.8 69.9 122.8 71.7C122.8 73.2 123.2 74 125.3 74.4ZM165.9 105.6L166.7 105.2C166.5 105.2 166.2 105.3 165.9 105.3V105.6ZM197.3 74.6C198.5 74.5 199.2 73.7 199.5 73.5C200.6 71.4 202.8 71.9 202.8 70C202.6 68.3 201.9 67.5 200.7 67.5C200.1 67.5 199.7 67.6 199.2 67.7C195.9 68.4 194.2 69.8 194.2 71.6C194.2 73.1 195.2 74.1 197.3 74.6ZM265.5 84.2C265 84.2 264.3 84.3 263.3 84.5C258.2 89.4 253.6 91.8 249.4 91.8C245 91.8 241.9 89.8 240.2 85.7C239.2 81.1 238.6 78.4 238.4 77.8C237.3 75.4 235.4 74.2 232.7 74.2L230.8 74.1C226.7 74.2 223.1 75.7 220 78.6C217.7 81 216.1 83.4 215.2 85.8C213.6 87.5 212.2 89.1 210.8 90.4C209.6 91.1 208.9 91.7 208.6 92.3C200.9 99.2 194.9 102.7 190.7 102.7C189.1 102.7 188.4 102.2 188.4 101.2C188.4 99.1 189.1 96.7 190.6 94.1C191.7 93.1 192.8 90.8 194 87.2V86.2C194 85 193.3 84.2 191.8 83.9H191.6C190.6 83.9 190.1 84 190.1 84.2C190.1 84.2 190 84.3 189.9 84.5C189.5 84.7 189.3 85 189.3 85.3C185.7 90.3 181.7 94.4 177.3 97.6C171.9 100.3 166.8 101.7 161.9 101.7C159.3 101.5 157.3 101.2 155.9 100.6C150.8 98.2 148.2 95.3 148.2 92C148.2 89.3 149.2 86.5 151.2 83.5C154.9 80.1 157.8 78.5 160 78.5H161.4C161.6 78.5 162.1 78.6 162.7 78.9C164.4 80.8 165.7 81.7 166.6 81.7C167.7 81.4 168.3 80.7 168.3 79.7V79.2C166.6 76.2 164.5 74.7 161.9 74.7C159.5 74.7 157.5 75 155.7 75.8C150.7 78.1 147.3 81 145.5 84.5H145.3C143.3 86.9 141.4 88.9 139.6 90.5C138.4 91.2 137.7 91.8 137.4 92.3C129.7 99.3 123.7 102.8 119.5 102.8C117.9 102.8 117.2 102.3 117.2 101.3C117.2 99.2 117.9 96.8 119.4 94.2C120.5 93.2 121.6 90.9 122.8 87.3V86.3C122.8 85.1 122.1 84.3 120.6 84H120C119 84 118.5 84.1 118.5 84.3C118.5 84.3 118.4 84.4 118.3 84.6C117.6 84.8 116.7 85.5 115.8 86.6C114.1 88.4 111.3 91.1 107.2 94.8C102.5 97.4 99.0002 98.7 96.6002 98.9H94.8002C92.7002 98.9 90.7002 98 88.8002 96.1C87.0002 93.3 86.1002 91.2 86.1002 89.8V89.4C86.1002 88.3 86.7002 87.1 88.0002 85.8C94.7002 75.6 99.2002 67.6 101.6 61.8C107.7 47.1 110.7 37.3 110.7 32.3V32.2C110.7 30.4 110 29.2 108.6 28.5H108.1C106.2 28.5 104.6 29.4 103 31.1C102.2 32.7 101.5 33.8 100.9 34.5C100.7 34.5 99.2002 36.8 96.5002 41.5C92.8002 47.8 89.4002 55.7 86.2002 65.1C84.7002 68.3 83.9002 70.4 83.9002 71.3C82.1002 75.8 81.0002 80.2 80.6002 84.5C80.6002 84.5 80.6002 84.5 80.5002 84.5C75.4002 89.4 70.8002 91.8 66.6002 91.8C62.2002 91.8 59.1002 89.8 57.4002 85.7C56.4002 81.1 55.8002 78.4 55.6002 77.8C54.5002 75.4 52.6002 74.2 49.9002 74.2L48.0002 74.1C43.9002 74.2 40.3002 75.7 37.2002 78.6C33.3002 82.7 31.3002 86.8 31.2002 90.9C31.2002 91.7 31.4002 92.6 31.7002 93.6C33.4002 97.1 35.8002 98.9 38.9002 98.9H39.0002C43.1002 98.9 47.0002 96.5 50.5002 91.8C52.1002 89 52.8002 87.6 52.7002 87.6L53.0002 87.8C55.8002 93.5 60.3002 96.3 66.5002 96.3H67.1002C67.7002 96.3 68.4002 96.3 69.5002 96.2C74.1002 95 78.0002 93.1 80.9002 90.5C81.0002 90.8 81.0002 91.1 81.1002 91.4C83.4002 99.1 88.1002 103 95.0002 103C100.2 103 105.4 101.1 110.6 97.4C111.6 96.5 112.6 95.7 113.5 95C112.7 97.6 112.3 99.7 112.3 101.1C112.3 105.3 114.5 107.4 119 107.4C124.8 107.4 132 103.5 140.6 95.6C141.6 94.9 142.6 94.1 143.4 93.4C143.8 96.4 145.9 99.3 149.6 102.1C153.2 104.5 157.2 105.8 161.5 105.8C162.3 105.8 163.8 105.6 166 105.2H166.7C168.3 105 169.3 104.8 169.5 104.7C175.6 103.4 180.1 101.3 183 98.3C183.4 97.9 183.8 97.5 184.2 97.2C183.8 98.7 183.6 100 183.6 101C183.6 105.2 185.8 107.3 190.3 107.3C196.1 107.3 203.3 103.4 211.9 95.5C212.8 94.8 213.7 94.2 214.4 93.5C216.1 97 218.5 98.8 221.6 98.8H221.7C225.8 98.8 229.7 96.4 233.2 91.7C234.8 88.9 235.5 87.5 235.4 87.5L235.7 87.7C238.5 93.4 242.9 96.2 249.2 96.2H249.8C250.4 96.2 251.1 96.2 252.2 96.1C256.9 94.9 260.8 93 263.8 90.3C266 88.7 267.2 87.3 267.2 86.1C267.1 85.4 266.6 84.7 265.5 84.2ZM51.1002 79.2C51.1002 80 50.6002 81.6 49.6002 84C46.2002 91.1 42.8002 94.7 39.5002 94.7H38.8002C36.8002 94.1 35.8002 92.6 35.8002 90.3C35.8002 88.9 36.3002 87.3 37.4002 85.8C40.2002 80.8 44.0002 78.4 48.9002 78.5C50.3002 78.6 51.1002 78.6 51.1002 78.5V79.2ZM105.2 35.2C105.2 35 105.2 35 105.2 35.2V35.2ZM87.7002 74C91.7002 62.5 95.3002 53.6 98.6002 47.3C101.9 40.8 104.2 36.9 105.3 35.6C105.3 35.7 105.3 35.7 105.3 35.8C105.3 37.1 104.4 40.8 102.6 46.8C98.5002 57.9 94.8002 66.2 91.5002 71.8C88.7002 76.7 86.8002 79.8 85.9002 81.1C85.9002 80.9 85.9002 80.8 85.8002 80.7C86.3002 78.6 86.9002 76.3 87.7002 74ZM233.8 79.2C233.8 80 233.3 81.6 232.3 84C228.9 91.1 225.5 94.7 222.2 94.7H221.5C219.5 94.1 218.5 92.6 218.5 90.3C218.5 89.9 218.5 89.5 218.6 89.1C219.4 88.1 219.9 87.3 219.9 86.8V86.5C219.9 86.4 219.9 86.3 219.8 86.2C219.9 86 220 85.9 220.1 85.7C222.9 80.7 226.7 78.3 231.6 78.4C233 78.5 233.8 78.5 233.8 78.4V79.2ZM540.6 84.8C540.2 84.8 539.6 84.9 538.9 85C535.4 87.1 530.1 92.4 522.9 100.8C520.8 103.3 519.5 104.8 518.9 105.3C518.8 105.1 518.8 104.8 518.8 104.3V101.9C518.8 100 519.2 96.7 520 91.9V91.7C520 90.5 519.3 89.8 517.9 89.6H517.6C516.5 89.6 515.3 90.8 514 93.1C510.7 98.4 508.3 101.2 506.8 101.5C506.7 101.4 506.5 101.4 506.3 101.4C505.3 101 504.8 99.8 504.8 98.1C504.9 97.9 505 96.9 505.1 95.1C505.8 92.5 506.4 90.4 506.9 88.7C507.8 87.6 508.4 86.6 508.6 85.7C508.4 85.2 508.2 84.8 507.9 84.5C507.9 84.4 507.9 84.2 507.9 84.2C507.5 83.2 506.8 82.7 505.9 82.7C505.3 82.9 504.7 83.2 504.2 83.6C503.9 84.4 503.6 85.2 503.3 86C503.1 86.3 502.9 86.6 502.8 86.9C495 94.8 486.5 98.7 477.3 98.7H476.1C473.3 98.7 470.8 98.1 468.7 97C466.6 95.8 465.1 93.6 464.1 90.4V90C464.1 89.9 464.2 89.8 464.3 89.7C470.4 87.8 474 86.6 475.1 86C480 82.8 482.7 79.8 483.2 76.8C483.2 74.7 481.5 73.4 478.1 72.9H477.5C476.1 72.9 474.5 73.3 472.8 74.2C470.4 74.7 467.2 76.9 463.2 80.6C461.8 82.7 460.8 84.5 460.1 85.9C459.9 86.1 459.7 86.3 459.5 86.5C457.8 88.3 455 91 450.9 94.7C446.2 97.3 442.7 98.6 440.3 98.8H438.5C436.4 98.8 434.4 97.9 432.5 96C430.7 93.2 429.8 91.1 429.8 89.7V89.3C429.8 88.2 430.4 87 431.7 85.7C438.4 75.5 442.9 67.5 445.3 61.7C451.4 47 454.4 37.2 454.4 32.3V32.2C454.4 30.4 453.7 29.2 452.3 28.5H451.8C449.9 28.5 448.3 29.4 446.7 31.1C445.9 32.7 445.2 33.8 444.6 34.5C444.4 34.5 442.9 36.8 440.2 41.5C436.5 47.8 433.1 55.7 429.9 65.1C428.4 68.3 427.6 70.4 427.6 71.3C425.7 76 424.6 80.6 424.2 85.1C423.2 85.8 422.3 87.2 421.3 89.3C417.5 95.3 414.2 99.7 411.4 102.5C407.6 105.5 404.6 107 402.2 107H401.6C401.3 107 401 106.9 400.6 106.7C398.4 105.7 397.2 103.2 397 99.2C397 95.7 398.5 90.4 401.6 83.3C403.7 80.2 404.9 78.3 405.3 77.3C405.3 76 404.6 75.2 403.2 75H402C396.1 77.8 391.6 79.7 388.6 80.6C386.4 81.5 385.1 82.2 384.6 82.8L383.3 84.9C383.3 84.9 383.3 84.9 383.3 85C383.3 85 383.2 85 383.2 85.1C374.5 91.8 366.4 95.2 359.2 95.2H357.1C356.7 95.2 356.4 95.1 356.4 94.8C356.8 93.2 357 91.8 357 90.5C357 89.5 356.8 88.4 356.4 87.3C355.2 84.5 352.8 83.1 349.1 83.1C347.7 83.1 346 83.4 344 84.1C343.9 84.2 343.7 84.3 343.6 84.4C342.6 84.5 341.6 85.3 340.5 86.9C338.4 88.9 336.9 91 336 93.3C335.1 94.2 334.1 95.1 333 96.1C329.5 99.6 325.8 101.3 321.9 101.3H321.5C320.1 101.3 317.9 100.2 314.9 98.1C313.6 97 312.5 95.7 311.7 94C309.9 90.7 307.5 89.1 304.7 89.1C302.6 89.1 300.5 90 298.3 91.9C297.5 93.2 296.9 94.1 296.5 94.5C295.4 90.8 293.4 88.9 290.4 88.9H289C287.8 88.9 286 89.6 283.9 91C282.9 91.9 282.2 92.6 281.8 93C282.1 92.2 282.5 91.1 283.1 89.5C284.9 86 285.8 84 285.8 83.6V83.2C285.8 82.5 285.2 82 283.9 81.8C282.6 81.8 281.4 82.9 280.3 85.2C276.8 92.2 273.8 99.3 271.5 106.3C271.5 107.7 272.2 108.5 273.7 108.7H273.9C274.6 108.7 275.5 108 276.8 106.7C283.1 97.6 287.3 93 289.5 93H289.6C289.7 93 289.7 93.1 289.7 93.3C290.6 93.3 291.3 95.1 291.8 98.8C292 103.6 293 106 294.8 106L295.5 105.9C296.2 105.9 297.3 104.1 298.9 100.4C300.6 95.6 302.4 93.3 304.4 93.3H304.7C305.4 93.3 306.9 95.1 309.2 98.7C313.5 103.2 317.7 105.4 321.7 105.4H323.6C326.8 105.4 330.6 103.7 334.9 100.2C334.9 100.7 335 101.2 335 101.7C336.2 105.3 338.4 107.1 341.5 107.1H342.7C346.3 107.1 349.6 105.3 352.6 101.7C353.7 100 354.5 99.1 355 99.1C355.3 99.1 355.8 99.1 356.5 99.2C365.5 99.2 374 96.5 382 91.2C385.8 88.8 387.8 87 388 85.8C389.1 85 390.1 84.4 390.9 84.1C393.6 83 395.4 82.3 396.5 82.2V82.3L395.6 85.2C393.3 90.2 392.2 94.9 392.2 99.4C392.2 101.8 392.5 103.5 393 104.7C395.3 109.1 398.2 111.3 401.7 111.3H401.9C405.1 110.9 407.6 110.2 409.4 109.2C414.5 105.7 418.2 102.1 420.4 98.5C422.2 95.9 423.6 93.8 424.7 92C427.1 99.1 431.6 102.6 438.3 102.6C443.5 102.6 448.7 100.7 453.9 97C456.1 95.2 457.9 93.6 459.4 92.2C459.6 93 459.9 93.4 460.1 93.4C461.5 95.8 463.5 98 466 100C470.2 101.6 473.3 102.3 475.4 102.3C477.4 102.1 478.7 102 479.1 102C483.1 102 488.9 100.3 496.3 97C497.8 95.9 499.1 94.9 500.2 94C499.9 95.3 499.8 96.4 499.8 97.4V99.2C500.7 103.1 502.4 105 505.1 105C506.7 105 508.2 104.6 509.7 103.7C512.1 101.4 513.4 100.2 513.6 100.1C513.6 100.2 513.6 100.3 513.6 100.6C513.5 101.4 513.5 101.9 513.5 102C513.5 103.2 513.6 105.9 513.8 110.3L513.5 112C509.3 118.6 505.4 125.3 501.9 132.2C497.5 141.9 495.2 148.9 494.8 153.2C494.6 154.1 494.5 155.4 494.4 157.1C494.4 163.1 496.5 166.1 500.6 166.1H501.4C502.7 166.1 504.3 165.6 506.1 164.7C508.4 163.5 510.5 161.4 512.5 158.4C514 155.7 515.7 151.2 517.3 145.5C518.8 136.3 519.6 129.6 519.6 125.4C519.1 119.6 518.9 115.5 518.9 113.1C518.9 111.5 521.8 107.4 527.7 100.7C531.7 95.9 535.4 92.2 538.7 89.5C540.8 88.2 541.8 87 541.8 86C542.3 85.7 541.7 85.1 540.6 84.8ZM349.9 98.5C347.6 101.8 345.2 103.4 342.9 103.4C342.4 103.4 342 103.3 341.7 103.2C340.2 102.5 339.4 101.2 339.4 99.2C339.6 97.7 339.7 96.9 339.7 96.8C339.8 96.5 339.9 96.3 340 96C341.2 94.6 342.3 93.3 343.2 92C344 93.9 345.2 95.4 346.8 96.4C348.9 97.5 350 98 350 98.1L349.9 98.5ZM352.1 94.2H352C351.7 94.2 351.2 94 350.5 93.6C348.6 92.5 347.6 91.4 347.6 90.3C347.6 88.6 348.5 87.7 350.4 87.5C352 87.5 352.8 88.5 352.8 90.6C352.4 93.1 352.2 94.2 352.1 94.2ZM449 35.2C448.9 35 448.9 35 449 35.2V35.2ZM431.4 74C435.4 62.5 439 53.6 442.3 47.3C445.6 40.8 447.9 36.9 449 35.6C449 35.7 449 35.7 449 35.8C449 37.1 448.1 40.8 446.3 46.8C442.2 57.9 438.5 66.2 435.2 71.8C432.4 76.7 430.5 79.8 429.6 81.1C429.6 80.9 429.6 80.8 429.5 80.7C430.1 78.6 430.7 76.3 431.4 74ZM477.3 76.9H477.6C477.8 76.9 478 77 478 77.1C478 77.9 476.2 79.7 472.7 82.3C469.3 83.9 467 84.7 465.6 84.8C465.7 84.5 466.1 83.8 467 82.8C469.3 80 472.8 78 477.3 76.9ZM514.5 135.4C514.6 135.4 514.6 135.3 514.7 135.2L513.7 142.1H513.8C511 155.7 507.1 162.5 502.2 162.5H501.5C500.6 162.5 500 160.9 499.7 157.6C499.7 153.8 500.6 149.4 502.4 144.4C505.3 136.7 508.9 129.4 513.2 122.3C514.3 120.2 515 119.1 515.1 119.1C515.3 119.1 515.3 121.6 515.3 126.5C515.3 128.2 515.1 131.2 514.5 135.4Z\" fill=\"white\" />\n                    </clipPath>\n                </defs>\n\n\n                <path class=\"path2\" clip-path=\"url(#myClip)\" d=\"M284.8 81.2999C282.9 85.1999 280 91.9999 278.2 95.8999C276.8 99.1999 275.4 102.5 274 105.8C273.6 106.7 272 109.7 271.9 110.6C272.8 110.4 274.7 107.2 275.3 106.5C276.2 105.4 277.1 104.3 277.9 103.1C279.4 101 280.7 98.7999 282.3 96.8999C298.1 78.4999 293.4 110.8 296 103.2C297 100.2 298.1 97.0999 299.6 94.2999C300.4 92.8999 301.5 91.1999 303.2 90.7999C304.8 90.4999 306.4 91.5999 307.5 92.5999C309.2 94.0999 310.5 95.9999 311.9 97.7999C313.9 100.4 317.1 102.5 320.2 103.6C323.5 104.8 326.8 103.3 329.6 101.6C331.1 100.7 332.2 99.8999 333.2 98.4999C334.3 96.8999 335.2 95.1999 336.5 93.5999C338 91.6999 339.5 89.6999 341.3 87.9999C343 86.2999 344.7 84.9999 347 84.0999C345.5 85.4999 343.7 86.4999 342.4 88.0999C340.1 90.6999 338.4 93.6999 337.1 96.8999C336.7 97.8999 336.4 98.8999 336.3 99.8999C336.2 100.9 336.3 102 336.8 103C337.5 104.2 338.7 105 340.1 105.4C342.1 106 344.3 105.6 346.2 104.7C348.1 103.8 349.7 102.4 351 100.8C353.2 98.2999 354.8 95.1999 355 91.8999C355.1 90.1999 354.9 88.3999 353.9 87.0999C352.2 84.7999 348.9 84.7999 346.9 86.6999C344.8 88.5999 345 91.3999 346.4 93.5999C348.2 96.1999 351.4 97.0999 354.4 97.1999C358.1 97.3999 362 96.8999 365.7 96.1999C369.6 95.4999 373.3 94.1999 376.9 92.5999C378.9 91.6999 380.8 90.5999 382.5 89.1999C384.4 87.5999 386.1 85.5999 387.9 83.9999C389 83.0999 390.2 82.2999 391.5 81.7999C392.8 81.2999 394.2 81.0999 395.5 80.5999C401.6 78.0999 402.9 76.7999 403.4 77.4999C403.7 77.8999 402.7 79.2999 402.5 79.5999C401.7 80.8999 400.9 82.0999 400.1 83.2999C399 84.8999 398 86.6999 397.2 88.4999C395.6 92.2999 394.7 96.3999 394.7 100.5C394.7 102.9 396.3 106.6 398.5 108.1C400.6 109.4 402.3 110.2 404.5 109.4C413.7 106.3 422.3 91.9999 425 88.2999C426 86.9999 427.7 86.7999 428.9 85.8999C430.7 84.3999 431.6 81.8999 432.8 79.9999C433.7 78.5999 434.2 76.9999 435.2 75.6999C437.9 71.6999 439.5 67.5999 441.7 63.0999C447 52.4999 450.9 41.0999 452.5 29.2999C452.5 29.0999 452.5 28.7999 452.4 28.6999C450.8 27.3999 441.4 44.5999 440.4 46.3999C440.3 46.5999 440.2 46.7999 440.1 46.8999C436.7 52.5999 434.1 58.8999 432 65.1999C431 68.1999 430 71.1999 429.1 74.1999C428.2 77.0999 426.9 79.8999 426.9 82.8999C426.9 87.1999 427.2 92.0999 429.7 95.7999C431.7 98.7999 435.1 101.3 438.9 101.3C448.4 101.3 455.5 91.0999 462.4 87.6999C466.4 85.6999 480.6 85.1999 480.4 75.3999C480.3 69.6999 463.4 82.5999 462.4 85.6999C459.6 94.0999 466.3 99.9999 473.1 99.9999C482 99.9999 489.6 98.3999 496.1 93.9999C499.4 91.7999 509.4 79.9999 505.1 87.9999C502.9 91.9999 502.5 96.8999 503.1 101.4C503.2 101.9 503.3 102.5 503.7 102.9C504.7 104 507.3 103.5 508.6 103.1C510.4 102.5 511 101.3 512.1 99.6999C513.4 97.7999 518.2 90.5999 518 91.3999C516.8 96.0999 516.6 100.2 516.4 104.2C515.9 112.7 517.3 115.1 517.3 119.4C517.3 130.5 517.5 135.1 514.8 147C513.4 153 511.7 159.6 507.3 164.1C506.3 165.2 504.3 166.2 502.8 166.4C499.5 166.9 496 164 495.6 160.7C495.2 156.9 496.6 152.8 497.9 149.3C499.3 145.3 501.1 141.4 502.7 137.5C507.2 126.9 510.8 120 516 112.2C521.8 103.5 531.1 93.5999 538.3 87.7999L540 86.4999L543 83.7999\" stroke=\"white\" stroke-width=\"6\" stroke-miterlimit=\"3\" stroke-linecap=\"square\" />\n                <path class=\"path1\" clip-path=\"url(#myClip)\" d=\"M52.6002 77.6C52.0002 76.9 51.6002 76.2 50.6002 75.9C50.0002 75.7 49.3002 75.8 48.7002 75.9C46.3002 76.2 43.9002 77.1 41.7002 78.3C37.1002 81 33.0002 84.8 31.6002 90.2C31.2002 91.8 31.3002 93.7 32.4002 94.9C33.6002 96.2 35.8002 96.7 37.5002 96.6C39.2002 96.5 40.9002 96.2 42.4002 95.5C45.3002 94.2 47.6002 91.8 49.3002 89.1C51.7002 85.6 53.0002 81.9 52.6002 77.6ZM52.6002 77.6C53.1002 79.3 54.6002 84.3 55.2002 86C56.1002 88.4 57.5002 90.9 59.7002 92.4C59.9002 92.5 60.1002 92.7 60.4002 92.8C66.7002 95.5 73.8002 93.6 77.8002 90.2C78.7002 89.4 79.7002 88.6 80.6002 87.8C81.3002 87.2 82.0002 86.6 82.9002 86.3C83.7002 86 84.7002 86.2 85.4002 85.7C86.0002 85.3 86.3002 84.5 86.6002 83.8C87.4002 81.9 88.6002 80.3 89.8002 78.6C91.0002 76.8 91.8002 74.8 93.0002 73.1C95.1002 70.2 97.9002 65.1 99.2002 61.9C100.6 58.3 102.5 55.3 103.5 51.8C105.2 45.8 108 39.9 108.3 33.5C108.4 32.3 109.1 30.4 108.9 29.2C108.5 27.6 107.4 28.7 106.6 29.8C103.6 34 100.3 38.3 97.9002 42.8C93.2002 51.7 87.8002 65.1 84.9002 73.8C83.0002 79.4 82.2002 90 85.2002 94.5C86.8002 96.9 88.9002 99.3 91.8002 100.2C94.3002 101 96.9002 100.6 99.4002 100C101.6 99.4 103.8 98.8 105.7 97.8C107.7 96.7 109.6 95.4 111.3 93.8C113 92.2 114.3 90.2 116 88.6C116.6 88 118.8 85.3 119.7 85.9C120.4 86.4 119.6 88.1 119.5 88.7C118.7 91.7 117.2 94.5 115.9 97.3C115 99.3 112.8 102.9 114.8 104.9C116.7 106.9 120.7 106.2 122.9 105.3C125.7 104.1 128.1 102.1 130.6 100.4C135.6 97.1 139.9 93.5 143.7 89C146.8 85.2 149.7 81.1 153.7 78.1C159.5 73.8 172.2 80.8 164.7 78.7C161.2 77.7 161.7 77.6 156.5 78.4C149.9 79.5 145.7 88.2 146.5 94.5C146.8 96.8 148.7 98.3 150.1 99.6C156.8 106.3 166.9 103.1 173.4 100.9C175.5 100.2 178.3 99.3 181 97.1C186.8 92.4 194.7 81.5 193.1 85.8C191.9 89.1 188.8 93.1 187.5 95.8C183.8 103.1 185.3 109.3 193.1 107.2C199 105.6 213.3 93.3 216.4 87.2C218 84.1 222.8 78.5 227 77C234.2 74.5 236.2 74.8 232.2 76.5C229.2 77.8 225.9 77.9 223.4 80.3C221.7 82 220.2 83.9 218.9 86C216.9 89.4 214.9 95.2 220.2 96.5C228.7 98.6 233.9 88.9 233.9 82.8C233.9 82.5 234 75.6 234 75.4C234.2 74.8 235.1 76.3 235.2 76.5C236.4 78.5 237.3 80.2 237.7 82.5C238.1 84.6 238.2 86.8 239.3 88.7C240.8 91.3 243.7 92.8 246.6 93.3C249.9 93.9 254.1 94 257.1 92.4C259.1 91.4 260.6 89.7 262.3 88.3C264 86.8 265.8 85.3 267.4 83.7\" stroke=\"white\" stroke-width=\"6\" stroke-miterlimit=\"3\" stroke-linecap=\"square\" />\n                <path class=\"path3\" clip-path=\"url(#myClip)\" d=\"M124.6 75.3999C124.6 75.3999 119.9 71.1999 125.9 68.2999C131.9 65.3999 134.9 71.5999 124.9 75.8999\" stroke=\"white\" stroke-width=\"6\" stroke-miterlimit=\"3\" stroke-linecap=\"square\" />\n                <path class=\"path4\" clip-path=\"url(#myClip)\" d=\"M196.1 74.9999C196.1 74.9999 190.1 72.1999 196.1 68.5999C202.1 64.9999 202.7 67.9999 202.7 70.1999C202.8 72.3999 203.1 75.2999 196.1 74.9999Z\" stroke=\"white\" stroke-width=\"6\" stroke-miterlimit=\"3\" stroke-linecap=\"square\" />\n            </svg>\n\n        </>\n    )\n}\n\nexport default Signature;","import React, { useContext } from 'react';\nimport { UserContext } from '../UserContext';\nimport SpinningButton from './SpinningButton';\nimport { useTrail, animated } from 'react-spring'\nimport { motion } from \"framer-motion\";\nimport Signature from './Signature'\n\nconst transition = { duration: 2, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst itemPort = {\n\n    initial: {\n        opacity: 0,\n    },\n    in: {\n        opacity: 1,\n    },\n    out: {\n        opacity: 0,\n    },\n\n};\n\nfunction RenderItems({ children }) {\n\n    const items = React.Children.toArray(children)\n    const trail = useTrail(items.length, { opacity: 1, from: { opacity: 0 }, delay: 4000, },);\n    return (\n\n        <div className=\"col-12 text-center container\">\n            {trail.map((props, i) => (\n                <animated.div style={props} key={i}>\n                    {items[i]}\n                </animated.div>\n            ))}\n        </div>\n\n    );\n}\n\nfunction Landing() {\n    const {itemList} = useContext(UserContext)\n    const landingLayout = itemList.map(list => {\n        return (\n            <div key={itemList.id} className=\"container-fluid\" style={{ color: 'white' }} >\n                <div className='row'>\n                    <div className=\"col-12 text-center mx-0 px-0\">\n                        <div style={{ backgroundImage: `url(${list.heroImage})`, backgroundPosition: 'center', backgroundSize: 'cover', color: 'white', height: '100vh', width: '100%', backgroundRepeat: 'no-repeat', position: 'relative' }}></div>\n                        <div className=\"textOnImage\">\n                            <Signature />\n                            <div className=\"textBelowSignature col-12 text-center px-0 pt-4\">\n                                <RenderItems>\n                                    <h1>{list.title}</h1>\n                                    <h5 className=\"pb-4\">{list.description}</h5>\n                                    <SpinningButton />\n                                </RenderItems>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <motion.div\n            variants={itemPort}\n            transition={transition}\n            initial=\"initial\"\n            animate=\"in\"\n            exit=\"out\">\n            {landingLayout}\n        </motion.div>\n    )\n\n}\n\nexport default Landing;","import React, { useContext } from 'react';\nimport { UserContext } from '../UserContext';\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport HomeButton from './HomeButton'\n\nconst download = <svg width=\"13\" height=\"17\" viewBox=\"0 0 13 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M9.75 11L6.5 14M3 11L6.5 14M6.5 14L6.5 8\" stroke=\"white\" stroke-width=\"1.2\" />\n    <path d=\"M8.16667 4.78125V5.28125H8.66667H12.5V16.5H0.5V0.5H8.16667V4.78125Z\" stroke=\"white\" />\n</svg>\nconst arrowRight = <svg width=\"12\" height=\"11\" viewBox=\"0 0 12 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M6 1L10.5 5.5M6 10.5L10.5 5.5M10.5 5.5H0.5\" stroke=\"white\" stroke-width=\"1.2\" />\n</svg>\n\nconst transition = { duration: 2, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst itemPort = {\n    initial: { scale: 0.9, opacity: 0 },\n    enter: { scale: 1, opacity: 1, transition },\n    exit: {\n        scale: 0.5,\n        opacity: 0,\n        transition: { duration: 2, ...transition }\n    }\n};\n\n\nconst itemHeader = {\n\n    initial: {\n        opacity: 0,\n    },\n    in: {\n        opacity: 1,\n    },\n    out: {\n        opacity: 0,\n    },\n\n};\n\nfunction RenderItemPort({ exampleItem, index }) {\n\n    const overlayColour = exampleItem.overlay === 'darkGrey' ? 'overlayGrey' :\n        exampleItem.overlay === 'yellow' ? 'overlayYellow' :\n            exampleItem.overlay === 'pink' ? 'overlayPink' :\n                'overlayLightGrey';\n\n\n    const backgroundColour = exampleItem.overlay === 'darkGrey' ? 'backgroundGrey' :\n        exampleItem.overlay === 'yellow' ? 'backgroundYellow' :\n            exampleItem.overlay === 'pink' ? 'backgroundPink' :\n                'backgroundLightGrey';\n\n    const textColour = exampleItem.font === 'white' ? 'textWhite' :\n        exampleItem.font === 'black' ? 'textWhite' : null;\n\n    return (\n        <>\n            <motion.div variants={itemPort} >\n                <div className=\"imageColourOverlay\">\n                    <Link className=\"cursor\" to={`/image/${index}`}>\n                        <div className={`${overlayColour}`}>\n                            <motion.img\n                                className=\"img-fluid\"\n                                src={exampleItem.img1}\n                                alt={exampleItem.description}\n                                transition={transition}\n                            />\n                        </div>\n                        <div className=\"overlayPostion col-12 text-center py-3\">\n                            <h3 className={`${textColour} col-12 col-lg-8 mx-auto`}>{exampleItem.title}</h3>\n                            <h6 style={{ width: '300px' }} className={`${textColour} text-center mx-auto col-10 col-xl-8`}>{exampleItem.description}</h6>\n                            <div className=\"btn mainButton arrowButton cursor\">{arrowRight}</div>\n                        </div>\n                    </Link>\n                </div>\n            </motion.div>\n        </>\n    )\n}\n\nconst staggerItem = {\n    exit: { transition: { staggerChildren: 0.2 } }\n}\n\nfunction Portfolio() {\n    const {example} = useContext(UserContext)\n    return (\n        <>\n            <div className=\"pagePbBg container-fluid test\">\n                <motion.div\n                    variants={itemHeader}\n                    transition={transition}\n                    initial=\"initial\"\n                    animate=\"in\"\n                    exit=\"out\">\n                    <div className=\"row\">\n                        <div className=\"col-10 col-md-8 text-center pb-2 mx-auto textOverlayContainer\">\n                            <div className=\"pb-2\">\n                                <HomeButton />\n                            </div>\n                            <div className=\"textOnTop\">\n                                <h1>PORTFOLIO</h1>\n                            </div>\n\n                        </div>\n                        <div className=\"col-12 pb-5 text-center\">\n                            <a className=\"btn mainButton downloadButton\" href={\"/assets/images/aliciaMorleyResume2023.pdf\"} alt='resume' title=\"download my resume\">{download}</a>\n                        </div>\n                    </div>\n                </motion.div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <motion.div\n                            initial=\"initial\"\n                            animate=\"enter\"\n                            exit=\"exit\"\n                            variants={staggerItem}\n                        >\n                            {example.map((exampleItem, index) => (\n                                <div className=\"px-0 d-inline-block col-md-6 p-4\">\n                                    <RenderItemPort key={exampleItem.id} index={index} exampleItem={exampleItem} />\n                                </div>\n                            ))}\n                        </motion.div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Portfolio;","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from 'reactstrap';\n\nfunction AboutButton() {\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const breakpoint = 550;\n\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return (\n        <NavLink tag={Link} to=\"/about\" className=\"cursor\"><svg width={windowWidth < breakpoint ? \"80\" : \"99\"} height={windowWidth < breakpoint ? \"80\" : \"99\"} viewBox=\"0 0 98 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"circleButton\">\n                <g id=\"spin\" className=\"atagAbout\">\n                    <ellipse className=\"hoverColour\" cx=\"49.0001\" cy=\"49.0074\" rx=\"25\" ry=\"25.0038\" fill=\"currentColor\" />\n                    <path className=\"buttonDark\" d=\"M48.9124 9.21713L51.5956 0L52.718 0.0702257L54.2087 9.56825L52.8583 9.48047L52.5952 7.44393L50.7713 7.32103L50.2452 9.30491L48.9124 9.21713ZM52.4199 6.16231L51.9814 2.72125H51.9639L51.087 6.07453L52.4199 6.16231Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M55.8572 9.84919L57.9792 0.719849L59.8908 1.15876C60.3117 1.2641 60.6449 1.40455 60.908 1.59767C61.1886 1.79079 61.3815 2.01902 61.5218 2.28237C61.6621 2.54572 61.7323 2.80906 61.7498 3.10752C61.7673 3.40598 61.7323 3.70444 61.6797 4.0029L61.6095 4.33647C61.5569 4.58226 61.4867 4.79294 61.3991 4.95095C61.3289 5.10896 61.2237 5.24941 61.1185 5.35475C60.9255 5.56542 60.6449 5.70587 60.3117 5.81121C60.5923 6.02189 60.7677 6.30279 60.8379 6.61881C60.908 6.93483 60.908 7.33862 60.7852 7.8302L60.68 8.33934C60.4871 9.14694 60.1539 9.70874 59.6628 10.0599C59.1718 10.3934 58.5054 10.4637 57.646 10.2705L55.8572 9.84919ZM58.1546 5.91655L57.4706 8.84848L58.0318 8.97137C58.2949 9.0416 58.5054 9.0416 58.6807 9.00648C58.8561 8.97137 58.9789 8.88359 59.1016 8.76069C59.2069 8.6378 59.2945 8.49735 59.3472 8.30423C59.4173 8.12866 59.4699 7.91799 59.5225 7.68975C59.5751 7.46152 59.6102 7.25084 59.6278 7.07528C59.6453 6.89971 59.6278 6.7417 59.5751 6.60125C59.5225 6.4608 59.4173 6.33791 59.2945 6.25012C59.1718 6.16234 58.9789 6.09212 58.7333 6.03945L58.1546 5.91655ZM59.0139 2.24726L58.4352 4.75783L59.0315 4.89828C59.4699 5.00362 59.7856 4.95095 59.9785 4.77538C60.1714 4.59982 60.3293 4.2838 60.417 3.88001C60.5046 3.47621 60.5046 3.14264 60.3819 2.89685C60.2591 2.65106 59.9785 2.47549 59.5576 2.38771L59.0139 2.24726Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M64.9767 4.89822C65.117 4.54709 65.3099 4.26619 65.5379 4.05551C65.7659 3.84484 66.029 3.68683 66.3096 3.59905C66.5727 3.51126 66.8532 3.47615 67.1339 3.49371C67.4145 3.51126 67.6775 3.56393 67.9406 3.66927C68.2036 3.77461 68.4141 3.91506 68.6245 4.10818C68.835 4.3013 69.0104 4.52954 69.1331 4.77533C69.2559 5.03867 69.3085 5.31958 69.326 5.63559C69.326 5.95161 69.2734 6.28518 69.1156 6.63631L67.204 11.201C67.0462 11.5697 66.8533 11.8506 66.6253 12.0612C66.3973 12.2719 66.1517 12.4124 65.8887 12.5002C65.6081 12.5879 65.3275 12.6406 65.0469 12.6231C64.7663 12.6055 64.5032 12.5528 64.2402 12.4475C63.9946 12.3422 63.7666 12.2017 63.5562 12.0086C63.3457 11.8155 63.1879 11.5872 63.0651 11.3239C62.9248 11.0605 62.8547 10.7796 62.8547 10.4812C62.8371 10.1652 62.9073 9.83158 63.0651 9.46289L64.9767 4.89822ZM64.2928 9.98959C64.17 10.288 64.17 10.5338 64.2752 10.7445C64.3805 10.9552 64.5558 11.1132 64.7838 11.201C65.0118 11.2888 65.2398 11.3063 65.4678 11.2361C65.6958 11.1659 65.8711 10.9727 65.9939 10.6743L67.9055 6.10962C68.0283 5.81116 68.0458 5.54781 67.9406 5.33713C67.8354 5.12646 67.66 4.96845 67.432 4.88067C67.204 4.79288 66.976 4.77533 66.748 4.84555C66.52 4.91578 66.3447 5.1089 66.2219 5.40736L64.2928 9.98959Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M77.0251 8.70803L73.1318 14.8528C72.9739 15.1161 72.7635 15.3268 72.5355 15.4848C72.3075 15.6428 72.062 15.7482 71.7814 15.8008C71.5008 15.8711 71.2202 15.8711 70.9396 15.8184C70.659 15.7657 70.3959 15.6779 70.1328 15.5199C69.8698 15.3619 69.6769 15.1688 69.519 14.923C69.3612 14.6772 69.256 14.4314 69.1858 14.1505C69.1157 13.8696 69.1156 13.5887 69.1507 13.3078C69.1858 13.0269 69.291 12.7636 69.4664 12.5002L73.3597 6.35547L74.4997 7.07528L70.6765 13.1323C70.5011 13.4132 70.431 13.6589 70.4836 13.8872C70.5362 14.0979 70.659 14.2734 70.8519 14.3963C71.0448 14.5192 71.2552 14.5543 71.4832 14.5192C71.7112 14.4841 71.9041 14.3085 72.0795 14.0276L75.9027 8.00577L77.0251 8.70803Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M74.5347 18.6625L79.8661 12.5529L78.6911 11.5346L79.5153 10.5865L82.865 13.5185L82.0408 14.4665L80.8657 13.4482L75.5343 19.5579L74.5347 18.6625Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M79.9012 24.0348L88.7753 20.3655L89.4241 21.2784L82.9528 28.3712L82.1811 27.2652L83.6017 25.7904L82.5494 24.2981L80.6729 25.1233L79.9012 24.0348ZM84.4785 24.8599L86.8812 22.3669L86.8637 22.3494L83.7069 23.7539L84.4785 24.8599Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M83.7771 29.8635L92.2127 25.808L93.0545 27.5812C93.2474 27.9674 93.3351 28.3361 93.3526 28.6521C93.3702 28.9681 93.3175 29.2842 93.1948 29.5475C93.072 29.8109 92.9142 30.0566 92.6862 30.2498C92.4582 30.4429 92.2127 30.6184 91.9496 30.7413L91.6339 30.8818C91.4059 30.9871 91.1955 31.0749 91.0201 31.11C90.8447 31.1451 90.6869 31.1627 90.5291 31.1451C90.2485 31.11 89.9503 31.0047 89.6697 30.794C89.6697 31.1451 89.582 31.4436 89.3716 31.7069C89.1787 31.9703 88.8455 32.1985 88.407 32.4268L87.9335 32.655C87.1969 33.0061 86.5305 33.1115 85.9693 32.9359C85.4081 32.7603 84.9346 32.2863 84.5488 31.4963L83.7771 29.8635ZM88.2667 29.1964L85.5659 30.4956L85.8115 31.0222C85.9342 31.268 86.057 31.4436 86.1973 31.5489C86.3376 31.6543 86.4779 31.7069 86.6533 31.7245C86.8111 31.7421 86.9865 31.7069 87.1619 31.6367C87.3372 31.5665 87.5301 31.4787 87.7406 31.3909C87.951 31.2856 88.1264 31.1803 88.2843 31.0925C88.4246 30.9871 88.5473 30.8818 88.6175 30.7589C88.6876 30.6184 88.7227 30.478 88.7052 30.32C88.6876 30.162 88.635 29.9689 88.5298 29.7406L88.2667 29.1964ZM91.6515 27.5636L89.319 28.6872L89.582 29.2315C89.775 29.6353 90.0029 29.8635 90.2835 29.8986C90.5466 29.9337 90.8798 29.8635 91.2656 29.688C91.6515 29.5124 91.897 29.2842 92.0022 29.0384C92.125 28.7926 92.0724 28.4766 91.8795 28.0728L91.6515 27.5636Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M93.335 33.919C93.7033 33.8137 94.0365 33.7786 94.3522 33.8313C94.6678 33.8839 94.9484 33.9717 95.194 34.1297C95.4219 34.2877 95.6324 34.4809 95.7902 34.7091C95.9481 34.9373 96.0708 35.1831 96.1585 35.4465C96.2287 35.7098 96.2638 35.9731 96.2462 36.2716C96.2287 36.5701 96.1585 36.8334 96.0358 37.0968C95.913 37.3601 95.7201 37.5883 95.4746 37.7815C95.229 37.9921 94.9309 38.1501 94.5626 38.2379L89.8099 39.5898C89.4241 39.6951 89.0909 39.7302 88.7752 39.6776C88.4771 39.6249 88.1965 39.5196 87.9685 39.3791C87.723 39.2211 87.5125 39.028 87.3547 38.7997C87.1968 38.5715 87.0741 38.3257 86.9864 38.0624C86.8987 37.799 86.8812 37.5357 86.8987 37.2372C86.9162 36.9563 86.9864 36.6754 87.1091 36.4296C87.2319 36.1663 87.4073 35.938 87.6353 35.7274C87.8633 35.5167 88.1789 35.3587 88.5472 35.2533L93.335 33.919ZM88.9506 36.5701C88.6349 36.6579 88.442 36.8159 88.3368 37.0265C88.2315 37.2372 88.2315 37.4654 88.2842 37.7112C88.3543 37.9395 88.4771 38.1326 88.6875 38.2555C88.8804 38.3784 89.1435 38.4135 89.4592 38.3257L94.2119 36.9739C94.5275 36.8861 94.7204 36.7281 94.8257 36.5174C94.9309 36.3067 94.9484 36.0785 94.8783 35.8327C94.8081 35.6045 94.6854 35.4113 94.4749 35.2884C94.2645 35.1656 94.0189 35.1304 93.7033 35.2182L88.9506 36.5701Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M97.8948 45.7345L90.6693 46.5246C90.3712 46.5597 90.0731 46.5421 89.81 46.4543C89.5469 46.3666 89.3014 46.2437 89.0734 46.0681C88.8454 45.8925 88.6701 45.6819 88.5298 45.4185C88.3894 45.1552 88.3018 44.8918 88.2667 44.5934C88.2316 44.2949 88.2667 44.014 88.3368 43.7507C88.4245 43.4873 88.5473 43.2415 88.7402 43.0133C88.9156 42.7851 89.126 42.6095 89.3716 42.469C89.6171 42.3286 89.8977 42.2408 90.1958 42.2057L97.4213 41.4156L97.5616 42.7499L90.4764 43.5224C90.1432 43.5575 89.9152 43.6629 89.7749 43.8384C89.6346 44.014 89.582 44.2247 89.5995 44.4529C89.6171 44.6811 89.7223 44.8743 89.8977 45.0147C90.0731 45.1552 90.3186 45.2078 90.6518 45.1727L97.737 44.4002L97.8948 45.7345Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M88.5823 49.9481L96.6847 50.2817L96.7548 48.7367L98.0175 48.7894L97.8421 53.2311L96.5794 53.1785L96.6496 51.6335L88.5472 51.2999L88.5823 49.9481Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M87.7581 57.5149L96.1586 62.1498L95.8604 63.2032L86.2849 62.5887L86.6532 61.3071L88.7051 61.4827L89.2137 59.727L87.3898 58.779L87.7581 57.5149ZM89.9853 61.6055L93.4227 61.9216V61.904L90.3536 60.3239L89.9853 61.6055Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M85.6185 64.2039L94.0541 68.2769L93.1948 70.0502C93.0018 70.4364 92.7914 70.7348 92.5459 70.9631C92.3003 71.1738 92.0373 71.3318 91.7567 71.402C91.4761 71.4722 91.1955 71.4898 90.8973 71.4547C90.5992 71.402 90.3186 71.3142 90.038 71.1738L89.7223 71.0333C89.4943 70.928 89.3014 70.8051 89.1611 70.6997C89.0208 70.5944 88.9156 70.4715 88.8279 70.3311C88.6701 70.0853 88.5824 69.7868 88.5648 69.4357C88.2842 69.6464 87.9861 69.7692 87.6704 69.7868C87.3372 69.7868 86.9514 69.699 86.5129 69.4708L86.0394 69.2426C85.3028 68.8914 84.8118 68.435 84.5838 67.8732C84.3558 67.3289 84.4435 66.6442 84.8293 65.8542L85.6185 64.2039ZM88.9507 67.2938L86.2499 65.9946L86.0044 66.5213C85.8816 66.7671 85.829 66.9778 85.829 67.1533C85.829 67.3289 85.8816 67.4869 85.9693 67.6098C86.057 67.7327 86.1973 67.8556 86.3551 67.9609C86.5129 68.0663 86.7059 68.1541 86.9163 68.2594C87.1268 68.3647 87.3197 68.435 87.495 68.4876C87.6704 68.5403 87.8283 68.5579 87.9686 68.5403C88.1089 68.5227 88.2492 68.4525 88.3719 68.3296C88.4947 68.2067 88.5999 68.0487 88.7051 67.838L88.9507 67.2938ZM92.3354 68.9265L90.0205 67.8029L89.7574 68.3472C89.5645 68.751 89.5294 69.067 89.6697 69.3128C89.81 69.541 90.0731 69.7517 90.4589 69.9448C90.8447 70.1204 91.1604 70.1906 91.4235 70.1204C91.6865 70.0501 91.9145 69.8219 92.1074 69.4181L92.3354 68.9265Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M88.4596 74.1759C88.7577 74.3866 89.0032 74.6324 89.1611 74.9133C89.3189 75.1942 89.4241 75.4751 89.4417 75.756C89.4768 76.0369 89.4417 76.3178 89.3715 76.5812C89.3014 76.8621 89.1786 77.1079 89.0208 77.3185C88.8629 77.5468 88.67 77.7399 88.442 77.8979C88.214 78.0559 87.951 78.1788 87.6704 78.249C87.3898 78.3017 87.0916 78.3017 86.776 78.249C86.4603 78.1964 86.1622 78.0559 85.8465 77.8277L81.8128 74.966C81.4972 74.7377 81.2516 74.492 81.0938 74.2111C80.936 73.9302 80.8483 73.6668 80.8132 73.3859C80.7781 73.0874 80.8132 72.8065 80.8833 72.5432C80.9535 72.2798 81.0763 72.0165 81.2341 71.8058C81.3919 71.5776 81.5849 71.3845 81.8128 71.2265C82.0408 71.0685 82.3039 70.9456 82.5845 70.8929C82.8651 70.8227 83.1457 70.8051 83.4614 70.8753C83.7595 70.928 84.0752 71.0685 84.4084 71.2967L88.4596 74.1759ZM83.6367 72.4203C83.3737 72.2272 83.1282 72.1745 82.9002 72.2272C82.6722 72.2798 82.4793 72.4203 82.339 72.6134C82.1987 72.8065 82.1285 73.0348 82.1636 73.263C82.1811 73.4912 82.3214 73.7019 82.5845 73.895L86.6181 76.7567C86.8812 76.9499 87.1267 77.0025 87.3547 76.9499C87.5827 76.8972 87.7756 76.7567 87.9159 76.5636C88.0562 76.3705 88.1264 76.1423 88.0913 75.914C88.0562 75.6858 87.9334 75.4751 87.6704 75.282L83.6367 72.4203Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M82.1285 85.1312L76.99 80.0047C76.7795 79.794 76.6041 79.5482 76.4989 79.2849C76.3937 79.0215 76.3411 78.7582 76.3411 78.4597C76.3411 78.1788 76.3937 77.8979 76.4989 77.6346C76.6041 77.3712 76.762 77.1254 76.9724 76.9147C77.1829 76.7041 77.4284 76.5461 77.6915 76.4407C77.9545 76.3354 78.2351 76.2827 78.5157 76.2827C78.7963 76.2827 79.0769 76.3354 79.34 76.4407C79.6031 76.5461 79.8486 76.7041 80.059 76.9147L85.1975 82.0412L84.2505 82.9893L79.1997 77.9506C78.9717 77.7223 78.7262 77.5994 78.5157 77.5994C78.2877 77.5994 78.0948 77.6872 77.937 77.8452C77.7791 78.0208 77.6915 78.2139 77.6915 78.4246C77.6915 78.6528 77.8142 78.8811 78.0422 79.1093L83.093 84.148L82.1285 85.1312Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M72.9738 80.5314L77.7791 87.0624L79.0243 86.1494L79.7784 87.1677L76.2008 89.8012L75.4466 88.7829L76.6918 87.87L71.9041 81.3214L72.9738 80.5314Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M66.5727 84.6044L68.2212 94.0674L67.1865 94.4887L61.6797 86.6234L62.9249 86.1143L64.0648 87.8173L65.7484 87.115L65.345 85.096L66.5727 84.6044ZM64.7488 88.9058L66.6604 91.785L66.6779 91.7675L65.9939 88.3791L64.7488 88.9058Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M60.0311 87.115L62.1357 96.2443L60.2241 96.6832C59.8032 96.771 59.4349 96.8061 59.1192 96.7359C58.786 96.6832 58.5054 96.5604 58.2774 96.3848C58.0319 96.2092 57.8565 95.9985 57.6987 95.7352C57.5408 95.4718 57.4531 95.1909 57.383 94.8925L57.3128 94.5589C57.2602 94.3131 57.2251 94.1025 57.2251 93.9093C57.2251 93.7338 57.2427 93.5582 57.2953 93.4177C57.383 93.1368 57.5584 92.8911 57.8214 92.6453C57.4882 92.575 57.2076 92.417 56.9971 92.1537C56.7867 91.8903 56.6289 91.5392 56.5061 91.0476L56.3833 90.5385C56.1904 89.7309 56.243 89.0813 56.5412 88.5546C56.8393 88.0455 57.4005 87.6768 58.2599 87.4837L60.0311 87.115ZM59.6979 91.6621L59.0315 88.7302L58.4703 88.8531C58.2072 88.9057 58.0143 88.9935 57.874 89.1164C57.7337 89.2393 57.646 89.3622 57.611 89.5202C57.5583 89.6782 57.5584 89.8538 57.5759 90.0469C57.611 90.24 57.646 90.4507 57.6987 90.6614C57.7513 90.8896 57.8039 91.0827 57.874 91.2583C57.9442 91.4163 58.0143 91.5568 58.1196 91.6621C58.2248 91.7674 58.3651 91.8201 58.5229 91.8377C58.6808 91.8552 58.8737 91.8377 59.1192 91.785L59.6979 91.6621ZM60.5573 95.3314L59.9785 92.8208L59.3823 92.9613C58.9438 93.0666 58.6808 93.2422 58.5755 93.488C58.4703 93.7338 58.4703 94.0849 58.5755 94.4887C58.6632 94.8925 58.8211 95.191 59.0315 95.349C59.242 95.507 59.5752 95.5421 60.0136 95.4543L60.5573 95.3314Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M53.9982 95.5772C54.0157 95.9459 53.9807 96.297 53.8579 96.5955C53.7351 96.894 53.5773 97.1398 53.3669 97.3504C53.1739 97.5435 52.9284 97.7016 52.6829 97.8069C52.4198 97.9122 52.1568 97.9825 51.8762 98C51.5956 98.0176 51.3325 97.9825 51.0519 97.8947C50.7713 97.8069 50.5258 97.684 50.2978 97.5084C50.0698 97.3329 49.8944 97.1046 49.7366 96.8237C49.5963 96.5428 49.5086 96.2093 49.4735 95.8406L49.1754 90.8897C49.1578 90.5034 49.1929 90.1523 49.3157 89.8714C49.4384 89.5905 49.5963 89.3447 49.7892 89.1516C49.9996 88.9409 50.2276 88.7829 50.4907 88.6775C50.7538 88.5722 51.0168 88.502 51.2974 88.4844C51.578 88.4669 51.8411 88.502 52.1217 88.5898C52.4023 88.6775 52.6478 88.8004 52.8583 88.976C53.0863 89.1516 53.2792 89.3623 53.4195 89.6432C53.5598 89.9241 53.6475 90.2576 53.6825 90.6439L53.9982 95.5772ZM52.3672 90.7141C52.3497 90.3981 52.2445 90.1523 52.0515 90.0118C51.8586 89.8714 51.6482 89.8012 51.4026 89.8187C51.1571 89.8363 50.9467 89.9241 50.7713 90.0821C50.5959 90.2401 50.5258 90.4859 50.5433 90.8194L50.8414 95.7528C50.859 96.0688 50.9642 96.3146 51.1571 96.455C51.35 96.5955 51.5605 96.6657 51.806 96.6482C52.0515 96.6306 52.262 96.5428 52.4374 96.3848C52.6127 96.2268 52.6829 95.981 52.6654 95.6475L52.3672 90.7141Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M41.5115 97.4733L42.2831 90.24C42.3182 89.9416 42.4059 89.6607 42.5287 89.4149C42.669 89.1691 42.8443 88.9584 43.0723 88.7829C43.3003 88.6073 43.5458 88.4668 43.8089 88.3791C44.072 88.2913 44.3701 88.2737 44.6682 88.2913C44.9664 88.3264 45.2294 88.4142 45.475 88.5546C45.7205 88.6951 45.9309 88.8706 46.1063 89.0989C46.2817 89.3271 46.422 89.5729 46.5097 89.8362C46.5974 90.0996 46.6149 90.398 46.5798 90.6965L45.8082 97.9298L44.4753 97.7893L45.247 90.6965C45.282 90.3629 45.2294 90.1171 45.0891 89.9416C44.9488 89.766 44.7559 89.6607 44.5279 89.6431C44.2999 89.6256 44.0895 89.6782 43.9141 89.8187C43.7387 89.9591 43.6335 90.1874 43.5984 90.5209L42.8268 97.6137L41.5115 97.4733Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M39.3719 87.4486L37.2849 95.2787L38.7931 95.6825L38.4599 96.9115L34.1632 95.7703L34.4964 94.5414L35.9871 94.9452L38.0741 87.115L39.3719 87.4486Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M32.199 85.0082L25.8504 92.2064L24.8683 91.6621L27.5515 82.445L28.7266 83.0946L28.0952 85.0434L29.6911 85.9212L31.0064 84.3411L32.199 85.0082ZM27.7269 86.2723L26.6571 89.5729L26.6747 89.5905L28.8844 86.9395L27.7269 86.2723Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M26.131 81.4443L20.3261 88.8004L18.7828 87.589C18.4495 87.3257 18.204 87.0448 18.0462 86.7463C17.8883 86.4479 17.8006 86.167 17.7831 85.8685C17.7656 85.5701 17.8182 85.2892 17.9234 85.0258C18.0286 84.7625 18.1865 84.4991 18.3794 84.2533L18.5898 83.99C18.7477 83.7969 18.888 83.6388 19.0283 83.516C19.1686 83.4106 19.3089 83.3228 19.4492 83.2702C19.7122 83.1648 20.0279 83.1473 20.3787 83.1999C20.2208 82.8839 20.1682 82.5679 20.2384 82.2519C20.3085 81.9359 20.4839 81.5847 20.7996 81.1809L21.1328 80.7596C21.6414 80.11 22.185 79.7413 22.7813 79.636C23.3601 79.5306 24.0089 79.7589 24.6929 80.3031L26.131 81.4443ZM20.0455 86.9746L21.6414 84.9556L21.1679 84.5869C20.8171 84.306 20.519 84.2182 20.2559 84.2884C19.9928 84.3762 19.7298 84.5693 19.4667 84.9205C19.2037 85.254 19.0809 85.5525 19.0809 85.8158C19.0809 86.0792 19.2563 86.3601 19.607 86.641L20.0455 86.9746ZM22.378 84.0075L24.2369 81.655L23.781 81.3038C23.5705 81.1283 23.3776 81.0405 23.2022 81.0054C23.0268 80.9703 22.869 80.9878 22.7287 81.0405C22.5884 81.0932 22.4306 81.1985 22.3078 81.339C22.1675 81.4794 22.0447 81.6374 21.9044 81.813C21.7641 82.0061 21.6414 82.1641 21.5537 82.3221C21.466 82.4801 21.4134 82.6206 21.3958 82.7786C21.3958 82.9366 21.4309 83.077 21.5011 83.2175C21.5888 83.3579 21.7115 83.4984 21.9044 83.6564L22.378 84.0075Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M15.8013 82.0412C15.5207 82.287 15.2226 82.4625 14.9245 82.5679C14.6263 82.6557 14.3282 82.6908 14.03 82.6557C13.7494 82.6206 13.4864 82.5328 13.2409 82.4099C12.9953 82.2694 12.7673 82.1114 12.592 81.9007C12.4166 81.7076 12.2588 81.4618 12.1535 81.1985C12.0483 80.9351 11.9957 80.6542 11.9781 80.3733C11.9781 80.0924 12.0483 79.794 12.1711 79.5131C12.2938 79.2146 12.5043 78.9513 12.7849 78.6879L16.4502 75.3697C16.7484 75.1064 17.029 74.9308 17.3271 74.8431C17.6253 74.7553 17.9059 74.7202 18.1865 74.7553C18.4846 74.7904 18.7477 74.8782 18.9932 75.0011C19.2387 75.1415 19.4667 75.2995 19.6421 75.5102C19.8174 75.7209 19.9753 75.9491 20.0805 76.2125C20.1857 76.4758 20.2383 76.7567 20.2383 77.0376C20.2559 77.3185 20.1857 77.617 20.0805 77.8979C19.9577 78.1788 19.7473 78.4597 19.4667 78.723L15.8013 82.0412ZM18.5547 77.7223C18.8003 77.5116 18.9055 77.2834 18.9055 77.0376C18.9055 76.7918 18.8178 76.5987 18.6424 76.4056C18.4846 76.23 18.2741 76.1247 18.0462 76.0896C17.8182 76.0545 17.5726 76.1598 17.3271 76.3705L13.6793 79.6886C13.4338 79.8993 13.3285 80.1275 13.3285 80.3733C13.3285 80.6016 13.4162 80.8122 13.5916 81.0054C13.7494 81.1809 13.9599 81.2863 14.1879 81.3214C14.4159 81.3565 14.6614 81.2512 14.9069 81.0405L18.5547 77.7223Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M6.50647 73.5088L12.6271 69.5937C12.8901 69.4357 13.1532 69.3303 13.4338 69.2776C13.7144 69.225 13.995 69.2425 14.2756 69.2952C14.5562 69.3479 14.8193 69.4708 15.0473 69.6288C15.2928 69.7868 15.4857 69.9975 15.6435 70.2433C15.8014 70.489 15.9066 70.7524 15.9417 71.0333C15.9943 71.3142 15.9768 71.5951 15.9242 71.876C15.854 72.1569 15.7488 72.4203 15.5909 72.6485C15.4331 72.8767 15.2226 73.0874 14.9596 73.2454L8.83897 77.1605L8.11993 76.0369L14.1353 72.192C14.4159 72.0165 14.5738 71.8058 14.6264 71.5951C14.679 71.3844 14.6264 71.1737 14.5036 70.9631C14.3808 70.7699 14.2055 70.6471 13.9775 70.5944C13.767 70.5417 13.504 70.6119 13.2234 70.7875L7.22551 74.6324L6.50647 73.5088Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M12.9777 65.5732L5.55935 68.8387L6.1907 70.2608L5.03322 70.77L3.24438 66.6969L4.40186 66.1877L5.03322 67.6098L12.4516 64.3443L12.9777 65.5732Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M10.3998 58.4103L0.824261 57.9538L0.631348 56.8478L9.50536 53.1785L9.73335 54.4952L7.82176 55.2326L8.13743 57.0409L10.1893 57.076L10.3998 58.4103ZM6.61166 55.7066L3.38475 56.9355V56.9707L6.83965 57.0409L6.61166 55.7066Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M9.40014 51.4579L0.0350752 51.6159L0 49.6496C0 49.2282 0.0526127 48.8595 0.175376 48.5435C0.298139 48.2275 0.473515 47.9817 0.683966 47.7886C0.894417 47.5955 1.15748 47.455 1.43808 47.3673C1.71868 47.2795 2.01682 47.2268 2.3325 47.2268H2.66571C2.92878 47.2268 3.13923 47.2444 3.3146 47.2795C3.48998 47.3146 3.64782 47.3673 3.77058 47.455C4.01611 47.5955 4.22656 47.8237 4.41947 48.1222C4.55977 47.8062 4.77022 47.5604 5.06836 47.4199C5.34896 47.2619 5.75233 47.1917 6.24338 47.1741H6.76951C7.59377 47.1566 8.22512 47.3497 8.6811 47.7359C9.11954 48.1222 9.34753 48.7542 9.36507 49.632L9.40014 51.4579ZM1.28024 50.2465L3.85827 50.2114L3.84073 49.6145C3.84073 49.1756 3.71797 48.8595 3.48998 48.7191C3.26199 48.5786 2.92878 48.4909 2.50787 48.5084C2.08697 48.5084 1.7713 48.6138 1.56084 48.7718C1.35039 48.9473 1.26271 49.2633 1.26271 49.7023L1.28024 50.2465ZM5.03329 50.1938L8.03221 50.1412V49.5618C8.03221 49.2985 7.9796 49.0702 7.90945 48.9298C7.82176 48.7718 7.71654 48.6664 7.57623 48.5786C7.43593 48.5084 7.26056 48.4558 7.06765 48.4382C6.87473 48.4206 6.66428 48.4206 6.43629 48.4206C6.2083 48.4206 5.99785 48.4382 5.82248 48.4733C5.6471 48.5084 5.5068 48.5611 5.38404 48.6313C5.26127 48.7191 5.17359 48.842 5.12097 49C5.06836 49.158 5.03329 49.3511 5.05082 49.5969L5.03329 50.1938Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M2.43775 43.7857C2.06946 43.7331 1.75378 43.6102 1.47318 43.4346C1.21012 43.259 0.999669 43.0484 0.841831 42.8026C0.70153 42.5568 0.596305 42.311 0.543692 42.0301C0.491079 41.7492 0.491079 41.4683 0.526154 41.2049C0.561229 40.9416 0.666455 40.6782 0.789218 40.4325C0.929519 40.1867 1.10489 39.9584 1.31535 39.7829C1.54333 39.6073 1.8064 39.4668 2.10454 39.3966C2.40268 39.3088 2.75343 39.2913 3.12172 39.3615L7.99716 40.134C8.38299 40.2042 8.7162 40.3096 8.96173 40.4851C9.22479 40.6607 9.41771 40.8714 9.57555 41.0996C9.73338 41.3454 9.83861 41.6087 9.89122 41.8896C9.94383 42.1705 9.94384 42.4514 9.90876 42.7148C9.87368 42.9781 9.76846 43.2415 9.6457 43.4873C9.52293 43.7331 9.33002 43.9437 9.10203 44.1193C8.89158 44.3124 8.62852 44.4353 8.33038 44.5231C8.03224 44.6109 7.68149 44.6284 7.29566 44.5582L2.43775 43.7857ZM7.52365 43.2239C7.83933 43.2766 8.10239 43.2239 8.27776 43.0659C8.45314 42.9079 8.55837 42.7148 8.61098 42.469C8.66359 42.2232 8.61098 42.0125 8.48822 41.8019C8.36545 41.6087 8.13746 41.4683 7.82179 41.4156L2.9288 40.6431C2.61313 40.5905 2.35006 40.6431 2.17469 40.8011C1.99931 40.9591 1.89409 41.1523 1.84147 41.3981C1.8064 41.6438 1.84147 41.8545 1.96424 42.0652C2.087 42.2583 2.31499 42.3988 2.63066 42.4514L7.52365 43.2239Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M3.29705 31.11L10.1718 33.445C10.4699 33.5503 10.7154 33.6908 10.9259 33.8663C11.1363 34.0595 11.2942 34.2701 11.4345 34.5335C11.5572 34.7968 11.6274 35.0602 11.6625 35.3411C11.68 35.622 11.6449 35.9204 11.5573 36.2013C11.4696 36.4823 11.3117 36.728 11.1188 36.9387C10.9259 37.1494 10.6979 37.3074 10.4524 37.4479C10.1893 37.5707 9.92625 37.641 9.64565 37.6761C9.34751 37.7112 9.06691 37.6585 8.76877 37.5707L1.89404 35.2357L2.33248 33.9717L9.08445 36.2716C9.40013 36.3769 9.66319 36.3769 9.8561 36.2891C10.049 36.2013 10.1893 36.0258 10.277 35.7975C10.3472 35.5693 10.3472 35.3586 10.2419 35.1655C10.1367 34.9724 9.94379 34.8144 9.62812 34.7091L2.87615 32.4092L3.29705 31.11Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M13.5215 31.2329L6.33107 27.4758L5.61203 28.8628L4.48962 28.2834L6.54152 24.3332L7.66393 24.9126L6.94489 26.282L14.1353 30.039L13.5215 31.2329Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M17.5026 24.737L11.8555 16.9595L12.592 16.1168L20.9925 20.7517L20.0981 21.7524L18.3268 20.7166L17.1167 22.086L18.3619 23.7188L17.5026 24.737ZM17.2395 20.0846L14.2581 18.3289L14.2406 18.3465L16.3451 21.0853L17.2395 20.0846Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M22.2727 19.593L16.3625 12.3246L17.8883 11.0781C18.2215 10.8147 18.5547 10.6216 18.8704 10.5338C19.1861 10.4461 19.4842 10.4285 19.7824 10.4636C20.0805 10.4987 20.3436 10.6216 20.5891 10.7972C20.8346 10.9727 21.0451 11.1659 21.2555 11.4117L21.466 11.675C21.6238 11.8681 21.7466 12.0437 21.8343 12.2193C21.922 12.3773 21.9746 12.5353 21.9921 12.6933C22.0272 12.9742 21.9921 13.2902 21.8518 13.6238C22.185 13.536 22.5182 13.5711 22.7988 13.694C23.0794 13.8169 23.4127 14.0802 23.7283 14.4665L24.0615 14.8703C24.5877 15.5023 24.8332 16.1343 24.7981 16.7137C24.7631 17.3106 24.4123 17.8724 23.7283 18.4342L22.2727 19.593ZM18.204 12.4475L19.835 14.4489L20.3085 14.0627C20.6593 13.7818 20.8171 13.5009 20.7996 13.2375C20.782 12.9742 20.6242 12.6582 20.3611 12.3246C20.0981 11.991 19.835 11.8155 19.5544 11.7452C19.2913 11.6926 18.9756 11.7979 18.6424 12.0788L18.204 12.4475ZM20.5716 15.3794L22.4656 17.7144L22.9216 17.3457C23.1321 17.1702 23.2724 17.0122 23.3425 16.8542C23.4127 16.6961 23.4302 16.5381 23.4127 16.3801C23.3951 16.2221 23.325 16.0641 23.2022 15.9061C23.0794 15.7481 22.9742 15.5725 22.8164 15.397C22.6761 15.2214 22.5182 15.0634 22.3955 14.9405C22.2727 14.8176 22.1324 14.7298 21.9921 14.6947C21.8518 14.6596 21.694 14.6596 21.5537 14.7123C21.3958 14.7474 21.2205 14.8352 21.0275 14.9932L20.5716 15.3794Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M23.9212 9.35758C23.7283 9.02401 23.6231 8.70799 23.6056 8.39198C23.5705 8.07596 23.6056 7.7775 23.7108 7.4966C23.7985 7.23325 23.9388 6.98746 24.1317 6.77679C24.3246 6.56611 24.5351 6.39054 24.763 6.25009C24.991 6.10964 25.2541 6.02186 25.5347 5.96919C25.8153 5.91652 26.0959 5.91652 26.3765 5.96919C26.6571 6.03942 26.9202 6.16231 27.1832 6.33787C27.4463 6.53099 27.6567 6.77679 27.8497 7.11036L30.2874 11.4117C30.4803 11.7628 30.5855 12.0788 30.6206 12.3948C30.6381 12.7109 30.6206 12.9918 30.5154 13.2551C30.4277 13.536 30.2874 13.7818 30.0945 13.9925C29.9016 14.2032 29.6911 14.3787 29.4631 14.5192C29.2351 14.6596 28.9721 14.7474 28.6915 14.8001C28.4109 14.8527 28.1303 14.8352 27.8497 14.7825C27.5691 14.7298 27.306 14.607 27.0429 14.4314C26.7799 14.2558 26.5694 13.9925 26.3765 13.6414L23.9212 9.35758ZM27.534 12.9918C27.6918 13.2727 27.8847 13.4307 28.1303 13.4833C28.3582 13.536 28.5862 13.4833 28.7967 13.3604C29.0071 13.2376 29.165 13.062 29.2351 12.8513C29.3228 12.6231 29.2702 12.3773 29.1124 12.0964L26.6571 7.79506C26.4993 7.51416 26.3063 7.35615 26.0608 7.30348C25.8328 7.25081 25.6048 7.30348 25.3944 7.42637C25.1839 7.54927 25.0261 7.72483 24.956 7.93551C24.8683 8.16374 24.9209 8.40953 25.0787 8.69044L27.534 12.9918Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M34.321 2.12433L36.7938 8.95378C36.899 9.23468 36.9341 9.53314 36.9341 9.81405C36.9166 10.0949 36.8464 10.3583 36.7236 10.6216C36.6009 10.885 36.443 11.1132 36.2326 11.3063C36.0221 11.4995 35.7766 11.6575 35.496 11.7628C35.2154 11.8681 34.9348 11.9033 34.6542 11.8857C34.3736 11.8681 34.1105 11.7979 33.8475 11.675C33.5844 11.5521 33.3564 11.3941 33.1635 11.1834C32.9706 10.9728 32.8128 10.727 32.7075 10.4461L30.2347 3.61663L31.4974 3.16016L33.9352 9.86671C34.0404 10.1827 34.1982 10.3759 34.4087 10.4812C34.6191 10.5865 34.8296 10.5865 35.04 10.4987C35.268 10.411 35.4259 10.2705 35.5136 10.0774C35.6012 9.88427 35.6012 9.62093 35.4785 9.30491L33.0408 2.59835L34.321 2.12433Z\" fill=\"black\" />\n                    <path className=\"buttonDark\" d=\"M40.6346 10.1828L39.0738 2.2297L37.548 2.52816L37.3025 1.28165L41.6693 0.421387L41.9149 1.66789L40.3891 1.96635L41.9499 9.91942L40.6346 10.1828Z\" fill=\"black\" />\n                </g>\n                <g className=\"arrowColorAbout\">\n                    <path id=\"arrowHover\" d=\"M49.1501 43L55.0001 48.6842M49.1501 55L55.0001 48.6842M55.0001 48.6842H42.0001\" stroke=\"color\" stroke=\"currentColor\" stroke-width=\"1.2\" />\n                </g>\n            </g>\n        </svg>\n        </NavLink>\n    )\n}\n\nexport default AboutButton;","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from 'reactstrap';\n\nfunction PortfolioButton() {\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const breakpoint = 550;\n\n    useEffect(() => {\n        const handleResize2 = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize2);\n        return () => window.removeEventListener('resize', handleResize2);\n    }, []);\n\n    return (\n        <NavLink tag={Link} to=\"/portfolio\" className=\"cursor\">\n            <svg width={windowWidth < breakpoint ? \"80\" : \"99\"} height={windowWidth < breakpoint ? \"80\" : \"99\"} viewBox=\"0 0 98 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"above\">\n                <g id=\"circleButton2\">\n                    <g id=\"spin2\" className=\"atagPortfolio\">\n                        <ellipse className=\"hoverColour2\" cx=\"49.0001\" cy=\"49.0074\" rx=\"25\" ry=\"25.0038\" fill=\"currentColor\" />\n                        <path className=\"buttonDark\" d=\"M49.5703 9.3492L50.1669 0L52.1848 0.122785C52.5533 0.140326 52.8691 0.210489 53.1499 0.333274C53.4307 0.456059 53.6588 0.631466 53.8869 0.894577C54.0974 1.15769 54.2378 1.45588 54.308 1.78915C54.3782 2.12243 54.3957 2.57849 54.3606 3.12225C54.3431 3.54323 54.2905 3.89404 54.2203 4.17469C54.1501 4.45534 54.0273 4.71845 53.8518 4.96402C53.6412 5.26222 53.3956 5.4727 53.0622 5.63057C52.7463 5.78844 52.3427 5.84106 51.8339 5.80598L51.1495 5.78844L50.9214 9.43691L49.5703 9.3492ZM51.4303 1.35064L51.2373 4.52551L51.8865 4.56059C52.1673 4.57813 52.3778 4.56059 52.5182 4.49042C52.6761 4.42026 52.7814 4.31502 52.8691 4.19223C52.9393 4.06945 53.0095 3.91158 53.0271 3.71863C53.0446 3.52568 53.0797 3.3152 53.0973 3.06963C53.1148 2.85914 53.1148 2.64865 53.1324 2.43816C53.1324 2.24521 53.1148 2.06981 53.0446 1.91194C52.9744 1.75407 52.8867 1.63129 52.7463 1.54358C52.6059 1.45588 52.4129 1.40326 52.1497 1.38572L51.4303 1.35064Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M58.1859 3.0872C58.2736 2.71885 58.414 2.42065 58.6246 2.15754C58.8176 1.91197 59.0457 1.71903 59.3089 1.5787C59.5545 1.45591 59.8178 1.36821 60.116 1.35067C60.3968 1.31559 60.6776 1.33313 60.9408 1.40329C61.204 1.47346 61.4496 1.5787 61.6953 1.73657C61.9409 1.89443 62.134 2.08738 62.3094 2.31541C62.4673 2.56098 62.5726 2.82409 62.6253 3.13982C62.6779 3.45556 62.6604 3.78883 62.5726 4.15719L61.3794 8.96334C61.2917 9.34924 61.1338 9.66497 60.9408 9.893C60.7477 10.121 60.5196 10.314 60.274 10.4368C60.0108 10.5771 59.7476 10.6473 59.4668 10.6823C59.1861 10.7174 58.9053 10.6999 58.6421 10.6297C58.3789 10.5595 58.1332 10.4543 57.8876 10.2964C57.6595 10.1386 57.4489 9.94562 57.291 9.70005C57.1155 9.47202 57.0102 9.19137 56.9576 8.89318C56.9049 8.59499 56.9225 8.24417 57.0102 7.85828L58.1859 3.0872ZM58.2912 8.20909C58.221 8.52483 58.2561 8.7704 58.3964 8.96334C58.5368 9.15629 58.7123 9.27908 58.9579 9.34924C59.2036 9.40186 59.4142 9.38432 59.6247 9.27908C59.8353 9.17383 59.9757 8.96334 60.0634 8.64761L61.2566 3.84145C61.3268 3.52572 61.3093 3.28015 61.1689 3.0872C61.0285 2.89425 60.8355 2.77147 60.6074 2.70131C60.3793 2.63114 60.1511 2.66622 59.9406 2.77147C59.73 2.87671 59.5896 3.0872 59.5019 3.40294L58.2912 8.20909Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M63.485 12.0505L67.3629 3.5257L69.3281 4.42027C70.767 5.06928 71.1004 6.24451 70.3459 7.91088C70.1177 8.41956 69.837 8.80545 69.5211 9.0861C69.2053 9.36676 68.8017 9.52462 68.3104 9.5597L67.8542 14.0501L66.5557 13.4537L67.0821 9.29659L66.3451 8.96332L64.6782 12.5942L63.485 12.0505ZM68.0648 5.22715L66.854 7.89334L67.5559 8.20907C67.7665 8.31431 67.9595 8.34939 68.1174 8.34939C68.2753 8.34939 68.4157 8.31431 68.5385 8.22661C68.6613 8.13891 68.7666 8.03366 68.8544 7.87579C68.9596 7.71793 69.0474 7.54252 69.1527 7.33203C69.2579 7.12154 69.3281 6.9286 69.3808 6.75319C69.4334 6.57778 69.451 6.41991 69.4334 6.26205C69.3808 5.96386 69.1527 5.71829 68.7315 5.52534L68.0648 5.22715Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M70.5389 15.7165L75.0661 8.98091L73.7851 8.12141L74.487 7.06897L78.1894 9.54221L77.4875 10.5947L76.1891 9.73516L71.6795 16.4708L70.5389 15.7165Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M74.7152 18.7861L81.1023 11.9277L84.0327 14.6465L83.1729 15.5761L81.2251 13.7694L79.295 15.8568L80.997 17.4355L80.1372 18.3651L78.4352 16.7865L75.7154 19.7158L74.7152 18.7861Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M85.0152 19.0141C85.3135 18.786 85.6294 18.6457 85.9277 18.5756C86.226 18.5054 86.5418 18.5054 86.8226 18.558C87.1033 18.6106 87.349 18.7159 87.5946 18.8738C87.8403 19.0316 88.0333 19.207 88.1912 19.4351C88.3492 19.6455 88.472 19.8911 88.5597 20.1718C88.6475 20.4349 88.6825 20.7155 88.665 21.0137C88.6299 21.2944 88.5422 21.575 88.4018 21.8557C88.2439 22.1363 88.0333 22.3819 87.7175 22.6099L83.7694 25.5918C83.4535 25.8374 83.1377 25.9777 82.8394 26.0479C82.5411 26.1181 82.2428 26.1181 81.9796 26.0654C81.6988 26.0128 81.4356 25.9076 81.19 25.7497C80.9443 25.5918 80.7513 25.4164 80.5934 25.1884C80.4355 24.9604 80.2951 24.7323 80.2249 24.4517C80.1547 24.171 80.1196 23.9079 80.1372 23.6097C80.1547 23.3291 80.2249 23.0484 80.3828 22.7678C80.5232 22.4871 80.7513 22.2416 81.0672 21.996L85.0152 19.0141ZM81.8743 23.066C81.6111 23.2589 81.4883 23.4694 81.4707 23.715C81.4532 23.943 81.5234 24.171 81.6638 24.364C81.8041 24.5569 81.9971 24.6797 82.2253 24.7324C82.4534 24.785 82.699 24.7148 82.9622 24.5219L86.9103 21.5399C87.1735 21.347 87.3139 21.1365 87.3139 20.8909C87.3314 20.6629 87.2612 20.4349 87.1033 20.2419C86.9629 20.049 86.7699 19.9262 86.5418 19.8736C86.3137 19.8209 86.0681 19.8911 85.8048 20.0841L81.8743 23.066Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M83.4886 29.3282L91.8235 25.0482L92.4376 26.241L85.296 29.907L86.5067 32.275L85.3135 32.8889L83.4886 29.3282Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M86.2786 35.3971L95.1223 32.3275L95.5609 33.5904L86.7172 36.6601L86.2786 35.3971Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M94.6134 38.0985C94.9819 38.0283 95.3328 38.0283 95.6311 38.0985C95.947 38.1686 96.2102 38.309 96.4383 38.4844C96.6664 38.6598 96.8419 38.8703 96.9823 39.1158C97.1226 39.3614 97.2279 39.6245 97.2805 39.8876C97.3332 40.1507 97.3332 40.4314 97.2805 40.712C97.2279 40.9927 97.1402 41.2558 96.9998 41.5014C96.8419 41.7469 96.6489 41.9574 96.3857 42.1328C96.1225 42.3082 95.8066 42.4486 95.4381 42.5187L90.5776 43.4308C90.1916 43.501 89.8406 43.501 89.5423 43.4308C89.244 43.3607 88.9808 43.2204 88.7703 43.0625C88.5421 42.8871 88.3491 42.6766 88.2088 42.431C88.0684 42.1855 87.9631 41.9223 87.9105 41.6592C87.8578 41.3961 87.8578 41.1155 87.9105 40.8348C87.9631 40.5542 88.0508 40.2911 88.2088 40.0455C88.3491 39.7999 88.5421 39.5719 88.7878 39.3965C89.0335 39.2211 89.3669 39.0807 89.7529 39.0106L94.6134 38.0985ZM89.9985 40.3437C89.6827 40.3963 89.4546 40.5366 89.3493 40.7471C89.2265 40.9576 89.1914 41.1681 89.244 41.4137C89.2967 41.6592 89.402 41.8522 89.595 41.9925C89.788 42.1328 90.0336 42.1855 90.3495 42.1328L95.21 41.2207C95.5258 41.1681 95.754 41.0278 95.8592 40.8173C95.9821 40.6068 96.0172 40.3963 95.9645 40.1507C95.9119 39.9052 95.8066 39.7122 95.6136 39.5719C95.4206 39.4316 95.1749 39.3789 94.8591 39.4316L89.9985 40.3437Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M88.6826 50.9733L98 51.903L97.807 53.9026C97.7719 54.271 97.6842 54.5867 97.5614 54.8498C97.4385 55.1129 97.2455 55.3585 96.9823 55.5515C96.7191 55.7619 96.4208 55.8847 96.0699 55.9374C95.7365 55.99 95.2803 55.99 94.7188 55.9374C94.2976 55.9023 93.9467 55.8321 93.6659 55.7619C93.3852 55.6918 93.122 55.5515 92.8939 55.376C92.6131 55.1656 92.385 54.9025 92.2446 54.5692C92.1042 54.2534 92.0516 53.8325 92.1043 53.3413L92.1744 52.6572L88.5247 52.2889L88.6826 50.9733ZM96.6138 53.1133L93.4378 52.7976L93.3676 53.4466C93.3325 53.7097 93.3676 53.9377 93.4203 54.078C93.4729 54.2184 93.5782 54.3587 93.7186 54.4464C93.8414 54.5341 93.9993 54.5867 94.1923 54.6218C94.3854 54.6569 94.5959 54.6744 94.824 54.7095C95.0346 54.727 95.2452 54.7446 95.4557 54.7621C95.6663 54.7797 95.8242 54.7446 95.9821 54.692C96.1401 54.6393 96.2629 54.5516 96.3506 54.4113C96.4384 54.271 96.5085 54.078 96.5261 53.8149L96.6138 53.1133Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M94.6309 59.7963C94.9994 59.9016 95.2977 60.0595 95.5434 60.2699C95.789 60.4804 95.9645 60.7085 96.0873 60.9716C96.2102 61.2171 96.2804 61.4978 96.2979 61.7784C96.3154 62.0591 96.2979 62.3397 96.2102 62.6029C96.1224 62.866 96.0171 63.1115 95.8417 63.3396C95.6838 63.5676 95.4732 63.7605 95.2275 63.9184C94.9819 64.0587 94.7011 64.164 94.3853 64.2166C94.0694 64.2692 93.736 64.2341 93.3676 64.1289L88.6123 62.7607C88.2263 62.6555 87.928 62.4976 87.6999 62.2871C87.4718 62.0766 87.2963 61.8486 87.1735 61.603C87.0506 61.3399 86.9804 61.0593 86.9629 60.7786C86.9454 60.498 86.9629 60.2173 87.0506 59.9542C87.1384 59.6911 87.2437 59.4455 87.4191 59.2175C87.577 58.9895 87.7876 58.7965 88.0333 58.6562C88.2614 58.4983 88.5421 58.3931 88.8404 58.3405C89.1387 58.2878 89.4897 58.3229 89.8757 58.4282L94.6309 59.7963ZM89.5072 59.7262C89.1914 59.6385 88.9457 59.656 88.7351 59.7963C88.5246 59.9367 88.4018 60.1121 88.3316 60.3401C88.2614 60.5681 88.2789 60.7962 88.3842 61.0242C88.4895 61.2522 88.6825 61.3925 88.9984 61.4802L93.7536 62.8484C94.0694 62.9361 94.3151 62.9186 94.5257 62.7783C94.7362 62.6379 94.859 62.4625 94.9292 62.2345C94.9994 62.0065 94.9819 61.7784 94.8766 61.5504C94.7713 61.3224 94.5783 61.1821 94.2625 61.0944L89.5072 59.7262Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M85.4714 64.7954L93.8413 68.9876L92.8762 70.9171C92.1743 72.3204 90.9987 72.6186 89.3492 71.7942C88.8579 71.5486 88.4719 71.2679 88.2087 70.9347C87.9455 70.6014 87.8051 70.198 87.77 69.7068L83.2955 69.0929L83.9272 67.83L88.0683 68.4965L88.4368 67.7773L84.8572 65.9882L85.4714 64.7954ZM92.1217 69.6191L89.5072 68.3036L89.1562 68.9876C89.0509 69.1981 88.9983 69.3911 88.9983 69.5314C88.9983 69.6717 89.0334 69.8296 89.1036 69.9524C89.1738 70.0752 89.2966 70.1804 89.437 70.2857C89.5774 70.3909 89.7704 70.4961 89.9809 70.6014C90.1915 70.7066 90.3845 70.7943 90.56 70.847C90.7355 70.8996 90.8934 70.9347 91.0513 70.9171C91.3496 70.882 91.5953 70.654 91.8058 70.233L92.1217 69.6191Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M81.9797 71.1276L89.5073 76.7056L87.1209 79.9155L86.1032 79.1613L87.6824 77.0213L85.4013 75.3374L84.0151 77.1967L82.9974 76.4425L84.3836 74.5832L81.1725 72.1976L81.9797 71.1276Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M82.9096 81.3714C83.1728 81.6521 83.3483 81.9327 83.4535 82.2309C83.5588 82.5291 83.5939 82.8273 83.5764 83.1255C83.5588 83.4061 83.4711 83.6692 83.3483 83.9323C83.2254 84.1955 83.05 84.4059 82.8569 84.5989C82.6639 84.7918 82.4358 84.9322 82.1726 85.055C81.9094 85.1602 81.6462 85.2304 81.3479 85.2479C81.0671 85.2479 80.7688 85.1953 80.4705 85.0725C80.1722 84.9497 79.8915 84.7568 79.6458 84.4761L76.2417 80.8978C75.9785 80.6172 75.7855 80.319 75.6802 80.0208C75.5749 79.7226 75.5398 79.4419 75.5749 79.1613C75.5925 78.8631 75.6802 78.6 75.803 78.3369C75.9259 78.0913 76.1013 77.8633 76.2944 77.6703C76.4874 77.4774 76.7155 77.337 76.9787 77.2143C77.2419 77.0915 77.5051 77.0388 77.8034 77.0388C78.0841 77.0213 78.3825 77.0739 78.6632 77.1792C78.9615 77.2844 79.2247 77.4949 79.5055 77.7756L82.9096 81.3714ZM78.5228 78.7228C78.2947 78.4947 78.0666 78.3719 77.8385 78.3895C77.6104 78.407 77.3998 78.4947 77.2243 78.6701C77.0489 78.8455 76.9436 79.0385 76.926 79.2841C76.9085 79.5121 76.9962 79.7577 77.2243 79.9857L80.6285 83.564C80.8566 83.792 81.0847 83.9148 81.3128 83.8973C81.5409 83.8797 81.7515 83.792 81.9269 83.6166C82.1024 83.4412 82.2077 83.2483 82.2252 83.0027C82.2428 82.7747 82.1551 82.5291 81.9269 82.3011L78.5228 78.7228Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M72.4516 81.0381L77.6456 88.8438L76.5225 89.5805L72.0832 82.8975L69.8722 84.3709L69.1353 83.2483L72.4516 81.0381Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M66.7839 84.4761L70.8372 92.9132L69.6265 93.492L65.5731 85.0549L66.7839 84.4761Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M64.959 93.0711C65.0643 93.4394 65.0994 93.7727 65.0643 94.0884C65.0292 94.4042 64.9239 94.6848 64.766 94.9304C64.6256 95.176 64.4326 95.3689 64.2045 95.5443C63.9764 95.7197 63.7307 95.8425 63.4675 95.9127C63.2043 96.0004 62.9411 96.0179 62.6428 96.0179C62.3445 96.0179 62.0813 95.9478 61.8181 95.825C61.5549 95.7022 61.3268 95.5268 61.1162 95.2812C60.9057 95.0356 60.7478 94.7374 60.6249 94.3866L59.1685 89.6506C59.0457 89.2823 59.0106 88.9315 59.0632 88.6333C59.0983 88.3351 59.2036 88.0544 59.344 87.8089C59.5019 87.5633 59.6949 87.3528 59.923 87.1774C60.1512 87.002 60.3968 86.8792 60.66 86.809C60.9232 86.7213 61.1864 86.7038 61.4672 86.7038C61.7479 86.7213 62.0287 86.7915 62.2743 86.9143C62.5376 87.0195 62.7657 87.1949 62.9762 87.423C63.1868 87.651 63.3447 87.9492 63.4675 88.3351L64.959 93.0711ZM62.2217 88.7385C62.134 88.4228 61.976 88.2298 61.7479 88.1246C61.5374 88.0369 61.3093 88.0194 61.0636 88.0895C60.8179 88.1597 60.6425 88.3 60.5196 88.493C60.3968 88.6859 60.3793 88.949 60.467 89.2647L61.9234 94.0007C62.0111 94.3165 62.1691 94.5094 62.3972 94.6147C62.6077 94.7024 62.8358 94.7199 63.0815 94.6497C63.3096 94.5796 63.5026 94.4393 63.6255 94.2463C63.7483 94.0534 63.7658 93.7902 63.6781 93.4745L62.2217 88.7385Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M51.6057 88.5982L51.7636 97.9649L49.7457 98C49.3772 98 49.0439 97.9649 48.7631 97.8772C48.4824 97.7895 48.2191 97.6141 47.991 97.3686C47.7629 97.123 47.605 96.8423 47.4997 96.5091C47.3944 96.1758 47.3593 95.7373 47.3418 95.176C47.3418 94.755 47.3593 94.4042 47.3944 94.106C47.4471 93.8078 47.5348 93.5447 47.6927 93.2816C47.8682 92.9658 48.1139 92.7378 48.4122 92.5449C48.7105 92.3695 49.114 92.2818 49.6229 92.2642L50.3072 92.2467L50.2546 88.5982H51.6057ZM50.395 96.7196L50.3423 93.5447L49.6931 93.5622C49.4299 93.5622 49.2193 93.6149 49.0614 93.685C48.9035 93.7552 48.7982 93.878 48.7456 94.0183C48.6754 94.1586 48.6403 94.3165 48.6227 94.5094C48.6052 94.7024 48.6052 94.9129 48.6052 95.1584C48.6052 95.3689 48.6227 95.5794 48.6227 95.7899C48.6403 95.9829 48.6754 96.1583 48.7456 96.2986C48.8157 96.4389 48.921 96.5617 49.0614 96.6319C49.2018 96.702 49.4123 96.7371 49.6755 96.7371L50.395 96.7196Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M43.4112 95.5092C43.341 95.8776 43.2358 96.1933 43.0427 96.4564C42.8673 96.7196 42.6567 96.93 42.4111 97.0879C42.1654 97.2282 41.9197 97.3335 41.639 97.3861C41.3582 97.4387 41.0775 97.4387 40.8143 97.3861C40.5511 97.3335 40.2879 97.2458 40.0422 97.1054C39.7965 96.9651 39.586 96.7897 39.393 96.5617C39.2175 96.3337 39.0947 96.0705 39.0069 95.7548C38.9192 95.4391 38.9192 95.1058 38.9718 94.7374L39.7965 89.8611C39.8667 89.4752 39.9896 89.142 40.165 88.8964C40.3405 88.6333 40.5511 88.4403 40.7792 88.3C41.0248 88.1421 41.288 88.0369 41.5688 88.0018C41.8496 87.9492 42.1303 87.9492 42.3935 88.0018C42.6567 88.0544 42.9199 88.1421 43.1656 88.2825C43.4112 88.4228 43.6218 88.5982 43.7973 88.8262C43.9903 89.0367 44.1131 89.2998 44.2008 89.598C44.2886 89.8962 44.2886 90.247 44.2184 90.6329L43.4112 95.5092ZM42.9199 90.4224C42.9726 90.1067 42.9199 89.8436 42.7795 89.6682C42.6216 89.4928 42.4286 89.37 42.1829 89.3349C41.9373 89.2998 41.7267 89.3349 41.5162 89.4577C41.3056 89.5805 41.1828 89.791 41.1301 90.1242L40.3054 95.0006C40.2528 95.3163 40.3054 95.5794 40.4458 95.7548C40.6037 95.9302 40.7967 96.053 41.0424 96.0881C41.288 96.1232 41.4986 96.0881 41.7092 95.9653C41.9197 95.8425 42.0426 95.6145 42.0952 95.2988L42.9199 90.4224Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M37.4453 86.9845L34.2166 95.7724L32.1812 95.0356C30.6897 94.4919 30.2686 93.3517 30.9002 91.6328C31.0933 91.1065 31.3389 90.7031 31.6197 90.4049C31.918 90.1067 32.304 89.9138 32.7953 89.8436L32.9006 85.3356L34.2342 85.8268L34.0412 90.019L34.7957 90.2997L36.1643 86.5459L37.4453 86.9845ZM33.4095 94.1235L34.4096 91.3872L33.6902 91.1241C33.4621 91.0364 33.2866 91.0013 33.1287 91.0188C32.9708 91.0364 32.8304 91.089 32.7251 91.1767C32.6198 91.2644 32.5146 91.3872 32.4268 91.545C32.3391 91.7029 32.2514 91.8959 32.1812 92.1239C32.0934 92.3519 32.0408 92.5449 32.0057 92.7203C31.9706 92.8957 31.9706 93.0711 31.9882 93.2114C32.0583 93.4921 32.3216 93.7201 32.7427 93.878L33.4095 94.1235Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M30.1633 83.8622L26.1801 90.9136L27.5312 91.6854L26.9171 92.7904L23.0392 90.5978L23.6533 89.4928L25.0044 90.2646L28.9876 83.2132L30.1633 83.8622Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M25.7414 81.1258L19.8983 88.4403L16.7749 85.9495L17.5645 84.9672L19.6351 86.6161L21.4073 84.3884L19.6 82.9501L20.3896 81.9678L22.1969 83.4061L24.6886 80.2839L25.7414 81.1258Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M15.4765 81.6872C15.1958 81.9327 14.8975 82.1081 14.5992 82.1958C14.3009 82.2835 14.0026 82.3186 13.7043 82.2835C13.4235 82.2485 13.1603 82.1608 12.9147 82.0204C12.669 81.8801 12.4584 81.7222 12.2654 81.5118C12.0724 81.3013 11.9496 81.0732 11.8443 80.8101C11.739 80.547 11.6864 80.2664 11.6688 79.9857C11.6688 79.7051 11.739 79.4069 11.8794 79.1262C12.0198 78.8456 12.2128 78.5649 12.4935 78.3193L16.1959 75.0392C16.4942 74.7761 16.7925 74.6007 17.0908 74.513C17.3891 74.4253 17.6699 74.4078 17.9507 74.4428C18.2489 74.4779 18.5122 74.5656 18.7578 74.706C19.0035 74.8463 19.214 75.0042 19.4071 75.2146C19.5825 75.4251 19.7229 75.6532 19.8282 75.9163C19.9335 76.1794 19.9861 76.46 19.9861 76.7407C19.9861 77.0213 19.9335 77.3195 19.8106 77.6002C19.6878 77.8808 19.4772 78.1615 19.1789 78.4246L15.4765 81.6872ZM18.284 77.4072C18.5297 77.1967 18.6525 76.9687 18.635 76.7231C18.635 76.4951 18.5472 76.2846 18.3893 76.0917C18.2314 75.9163 18.0208 75.7935 17.7927 75.7584C17.5646 75.7233 17.319 75.811 17.0733 76.039L13.3709 79.3192C13.1252 79.5297 13.0024 79.7577 13.0199 80.0033C13.0199 80.2313 13.1077 80.4418 13.2656 80.6347C13.4235 80.8277 13.6341 80.9329 13.8622 80.968C14.0903 81.0031 14.336 80.9154 14.5816 80.6873L18.284 77.4072Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M16.2134 71.3031L8.22947 76.2145L7.52759 75.0743L14.3709 70.8645L12.9847 68.6018L14.1253 67.9001L16.2134 71.3031Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M12.9848 65.4971L4.38673 69.2508L3.84277 68.0229L12.4233 64.2692L12.9848 65.4971Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M4.43946 63.357C4.07097 63.4623 3.73758 63.4798 3.42173 63.4272C3.10589 63.3746 2.82513 63.2693 2.57947 63.1115C2.35136 62.9536 2.1408 62.7607 1.98288 62.5326C1.82495 62.3046 1.70212 62.059 1.63194 61.7959C1.56175 61.5328 1.5442 61.2522 1.56175 60.9715C1.5793 60.6909 1.64948 60.4102 1.77231 60.1646C1.91269 59.9191 2.08816 59.691 2.33382 59.4806C2.57947 59.2701 2.87777 59.1297 3.24626 59.0245L8.01905 57.744C8.42263 57.6388 8.77357 57.6037 9.07187 57.6563C9.37017 57.7089 9.65092 57.8142 9.87903 57.9721C10.1247 58.1299 10.3177 58.3229 10.4932 58.5684C10.6511 58.7965 10.7739 59.042 10.8441 59.3051C10.9143 59.5683 10.9318 59.8489 10.9143 60.1296C10.8968 60.4102 10.809 60.6733 10.6862 60.9364C10.5634 61.1995 10.3879 61.4276 10.1422 61.6205C9.91412 61.8135 9.59828 61.9713 9.21224 62.0766L4.43946 63.357ZM8.8613 60.7786C9.17715 60.6909 9.38771 60.5505 9.47545 60.3401C9.56318 60.1296 9.59828 59.9015 9.52809 59.656C9.4579 59.4104 9.33507 59.235 9.14205 59.0947C8.94904 58.9543 8.68583 58.9368 8.38753 59.0245L3.61475 60.305C3.2989 60.3927 3.08834 60.533 3.0006 60.7435C2.89532 60.954 2.87777 61.182 2.94796 61.4276C3.01815 61.6731 3.14098 61.8486 3.334 61.9889C3.52701 62.1292 3.79022 62.1467 4.08852 62.059L8.8613 60.7786Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M9.3701 50.1314L0 49.9209L0.052641 47.9037C0.052641 47.5354 0.122829 47.2196 0.210564 46.939C0.298299 46.6583 0.491316 46.4127 0.736974 46.1847C0.982632 45.9567 1.28093 45.8164 1.61432 45.7287C1.94772 45.641 2.38639 45.6234 2.9479 45.6234C3.36902 45.641 3.71996 45.6585 4.01826 45.7287C4.31656 45.7813 4.57977 45.8865 4.82543 46.0619C5.12372 46.2549 5.36938 46.5004 5.52731 46.8162C5.68523 47.1319 5.77296 47.5353 5.75542 48.0265L5.73787 48.7106L9.38765 48.7983L9.3701 50.1314ZM1.29848 48.6053L4.47449 48.6755L4.49203 48.0265C4.49203 47.7634 4.45694 47.5354 4.38675 47.395C4.31656 47.2547 4.21128 47.1319 4.0709 47.0618C3.94808 46.9916 3.77261 46.939 3.57959 46.9214C3.38657 46.9039 3.17601 46.8863 2.93035 46.8863C2.71979 46.8863 2.50922 46.8863 2.29866 46.8863C2.10564 46.8863 1.93017 46.9214 1.77225 46.9916C1.61432 47.0618 1.50904 47.167 1.42131 47.3073C1.33357 47.4476 1.29848 47.6406 1.28093 47.9037L1.29848 48.6053Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M2.73732 41.7995C2.36883 41.7294 2.05298 41.5891 1.78978 41.4136C1.52657 41.2382 1.33356 41.0102 1.19318 40.7471C1.0528 40.5015 0.96507 40.2384 0.929976 39.9578C0.894882 39.6771 0.894882 39.3965 0.947523 39.1334C1.00016 38.8702 1.10545 38.6071 1.24582 38.3616C1.3862 38.116 1.57921 37.9055 1.80733 37.7301C2.03544 37.5547 2.31619 37.4494 2.61449 37.3793C2.91279 37.3091 3.26373 37.3091 3.63221 37.3793L8.47519 38.3791C8.86122 38.4668 9.17707 38.5896 9.42272 38.7825C9.66838 38.9755 9.8614 39.186 10.0018 39.4315C10.1422 39.6771 10.2474 39.9578 10.2825 40.2384C10.3176 40.5191 10.3176 40.7997 10.265 41.0628C10.2123 41.3259 10.1071 41.5891 9.96668 41.8346C9.82631 42.0802 9.63329 42.2907 9.38763 42.4485C9.15952 42.624 8.89631 42.7467 8.59802 42.8169C8.29972 42.8871 7.94878 42.8871 7.56274 42.7994L2.73732 41.7995ZM7.86104 41.4838C8.17689 41.554 8.44009 41.5014 8.61556 41.361C8.80858 41.2207 8.91386 41.0278 8.9665 40.7822C9.01914 40.5366 8.98405 40.3261 8.86122 40.1156C8.73839 39.9051 8.52783 39.7648 8.21198 39.7122L3.36901 38.7124C3.05316 38.6422 2.78996 38.6948 2.61449 38.8352C2.42147 38.9755 2.31619 39.1684 2.26355 39.414C2.21091 39.6596 2.246 39.8701 2.36883 40.0806C2.49166 40.291 2.70222 40.4314 3.01807 40.484L7.86104 41.4838Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M11.4933 36.0988L2.8075 32.5731L3.61466 30.5735C4.21126 29.1176 5.35181 28.7317 7.05387 29.4158C7.56273 29.6263 7.96631 29.8719 8.26461 30.1876C8.56291 30.5033 8.73838 30.8892 8.79102 31.3804L13.3006 31.6435L12.7742 32.959L8.59801 32.6082L8.29971 33.3449L12.0021 34.8534L11.4933 36.0988ZM4.49201 31.8189L7.19425 32.9239L7.475 32.2223C7.56273 32.0118 7.59783 31.8189 7.59783 31.661C7.59783 31.5031 7.54519 31.3628 7.45745 31.2576C7.36972 31.1523 7.24689 31.0471 7.08896 30.9594C6.93104 30.8717 6.73802 30.784 6.52746 30.6787C6.3169 30.5735 6.10633 30.5209 5.93086 30.4858C5.75539 30.4507 5.59747 30.4332 5.43955 30.4507C5.14125 30.5209 4.91314 30.7664 4.73767 31.1874L4.49201 31.8189Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M14.8623 28.9422L7.94882 24.7149L7.14166 26.0304L6.07129 25.3639L8.38749 21.5751L9.45786 22.2416L8.6507 23.5572L15.5642 27.7845L14.8623 28.9422Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M17.74 24.6447L10.616 18.5581L13.2129 15.5236L14.178 16.348L12.4584 18.3476L14.6167 20.1894L16.1257 18.4353L17.0908 19.2597L15.5818 21.0138L18.6174 23.6098L17.74 24.6447Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M17.5294 14.3658C17.3013 14.0676 17.1258 13.7695 17.0556 13.4537C16.9679 13.1555 16.9504 12.8573 17.003 12.5767C17.0556 12.296 17.1434 12.0329 17.2838 11.7873C17.4241 11.5418 17.5996 11.3313 17.8102 11.1559C18.0207 10.9805 18.2664 10.8402 18.5296 10.7524C18.7928 10.6647 19.0735 10.6121 19.3543 10.6121C19.635 10.6297 19.9334 10.6998 20.2141 10.8402C20.4949 10.9805 20.7581 11.191 21.0037 11.4892L24.1446 15.2955C24.4078 15.6112 24.5658 15.9094 24.6535 16.2076C24.7237 16.5058 24.7412 16.804 24.7061 17.0671C24.6535 17.3478 24.5658 17.6284 24.4254 17.874C24.285 18.1195 24.1095 18.33 23.899 18.5054C23.6884 18.6809 23.4428 18.8212 23.1795 18.9089C22.9163 19.0141 22.6356 19.0492 22.3548 19.0317C22.0741 19.0317 21.7758 18.9615 21.5126 18.8212C21.2318 18.6809 20.9686 18.4704 20.7054 18.1722L17.5294 14.3658ZM21.7231 17.3127C21.9337 17.5582 22.1443 17.6986 22.3899 17.6986C22.618 17.6986 22.8462 17.6284 23.0216 17.4705C23.2146 17.3127 23.3199 17.1197 23.3726 16.8917C23.4252 16.6637 23.3375 16.4181 23.1269 16.1725L19.986 12.3487C19.7579 12.1031 19.5473 11.9628 19.3017 11.9628C19.0735 11.9628 18.8454 12.0329 18.67 12.1908C18.4769 12.3487 18.3717 12.5416 18.319 12.7696C18.2664 12.9977 18.3541 13.2432 18.5647 13.4888L21.7231 17.3127Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M27.9524 15.4183L23.3375 7.26188L24.5132 6.59534L28.4788 13.5765L30.7599 12.2785L31.4267 13.4538L27.9524 15.4183Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M33.8481 12.4013L30.4089 3.68352L31.6548 3.19238L35.094 11.9101L33.8481 12.4013Z\" fill=\"black\" />\n                        <path className=\"buttonDark\" d=\"M36.2872 3.94667C36.1995 3.57831 36.1995 3.24504 36.2521 2.92931C36.3223 2.61357 36.4276 2.35046 36.6031 2.10489C36.761 1.87686 36.9715 1.68391 37.1997 1.52605C37.4453 1.36818 37.691 1.26294 37.9542 1.21032C38.2174 1.15769 38.4981 1.14015 38.7789 1.17523C39.0596 1.21032 39.3228 1.29802 39.586 1.4208C39.8317 1.56113 40.0598 1.75408 40.2528 1.99965C40.4458 2.24522 40.5862 2.56095 40.674 2.92931L41.7794 7.753C41.8671 8.1389 41.8847 8.48971 41.8145 8.78791C41.7443 9.0861 41.639 9.34921 41.4636 9.57724C41.2881 9.82281 41.0951 10.0158 40.8494 10.1561C40.6038 10.3139 40.3581 10.4192 40.0949 10.4718C39.8492 10.542 39.5685 10.5595 39.2877 10.5244C39.007 10.4894 38.7438 10.4017 38.4981 10.2613C38.2349 10.1385 38.0244 9.94559 37.8313 9.70002C37.6208 9.45445 37.4804 9.15626 37.3927 8.77037L36.2872 3.94667ZM38.7087 8.45463C38.7789 8.77037 38.9193 8.99839 39.1298 9.10364C39.3404 9.20888 39.5685 9.24396 39.7966 9.19134C40.0423 9.13872 40.2353 9.01594 40.3757 8.82299C40.516 8.63004 40.5511 8.38447 40.4809 8.06874L39.3755 3.24504C39.3053 2.92931 39.1649 2.71882 38.9544 2.61357C38.7438 2.50833 38.5157 2.47325 38.2876 2.52587C38.0419 2.57849 37.8489 2.70128 37.7085 2.89422C37.5681 3.08717 37.533 3.33274 37.6032 3.64848L38.7087 8.45463Z\" fill=\"black\" />\n                    </g>\n                    <g className=\"arrowColor\">\n                        <path id=\"arrowHover2\" d=\"M49.1501 43L55.0001 48.6842M49.1501 55L55.0001 48.6842M55.0001 48.6842H42.0001\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"1.2\" />\n                    </g>\n                </g>\n            </svg>\n        </NavLink>\n    )\n}\n\nexport default PortfolioButton;","import React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst darkMode = \"dark\";\n\nfunction DarkModeToggle() {\n    const systemPrefersDark = useMediaQuery(\n        {\n            query: \"(prefers-color-scheme: dark)\"\n        },\n        undefined,\n        prefersDark => {\n            setIsDark(prefersDark);\n        }\n    );\n\n    const [isDark, setIsDark] = useState(getDefaultTheme, systemPrefersDark);\n\n    function getDefaultTheme() {\n        const selectedTheme = JSON.parse(localStorage.getItem(darkMode))\n        return selectedTheme || false\n    }\n\n    \n\n    useEffect(() => {\n        if (isDark) {\n            document.documentElement.classList.add(darkMode)\n            localStorage.setItem(darkMode, JSON.stringify(isDark))\n        } else {\n            document.documentElement.classList.remove(darkMode)\n            localStorage.setItem(darkMode, JSON.stringify(isDark))\n        }\n    }, [isDark]);\n\n    return (\n        <div className=\"row h-100 text-center mx-md-4 ml-2\">\n            <div className=\"col-3 my-auto px-0 iconLtDkModeStar\">*</div>\n            <div className=\"switch-checkbox col-6 px-0 my-auto\">\n                <label className=\"switch mb-0\">\n                    <input\n                        type=\"checkbox\"\n                        checked={isDark}\n                        onChange={event => setIsDark(event.target.checked)} />\n                    <span className=\"slider round\"></span>\n                </label>\n            </div>\n            <div className=\"col-3 my-auto px-0 iconLtDkModeMoon\">☽</div>\n        </div>\n    )\n}\n\nexport default DarkModeToggle;","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, NavItem, NavbarToggler, Collapse, NavLink, NavbarBrand } from 'reactstrap';\nimport AboutButton from './AboutButton';\nimport PortfolioButton from './PortfolioButton';\nimport DarkModeToggle from './DarkModeToggle';\nimport { motion } from \"framer-motion\";\n\nconst hamburger = <svg className=\"strokeChange\" width=\"33\" height=\"26\" viewBox=\"0 0 33 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0 1H33M0 13H33M0 25H33\" stroke=\"black\" stroke-width=\"2\"/>\n</svg>\n\nconst transition = { duration: 2, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst itemNav = {\n\n    initial: {\n        opacity: 0,\n    },\n    in: {\n        opacity: 1,\n    },\n    out: {\n        opacity: 0,\n    },\n\n};\n\nfunction Navigation() {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const breakpoint = 1735;\n    const collapse = 768;\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n\n    return (\n        <>\n            <motion.div\n                className=\"sticky\"\n                variants={itemNav}\n                transition={transition}\n                initial=\"initial\"\n                animate=\"in\"\n                exit=\"out\"\n            >\n                <Navbar className={` py-4 ${windowWidth < breakpoint ? 'navWhite' : 'navTransparent'} `} expand=\"md\">\n                    <NavbarBrand>\n                        <DarkModeToggle />\n                    </NavbarBrand>\n                    <NavbarToggler onClick={toggle}>{hamburger}</NavbarToggler>\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"ml-auto pr-4\" navbar>\n                            <NavItem className=\"text-left text-md-right pr-4\">\n                                {windowWidth >= collapse ?\n                                    <PortfolioButton />\n                                    : <NavLink className=\"pl-4 navlinkText\" href=\"/portfolio/\">PORTFOLIO</NavLink>\n                                }\n                            </NavItem>\n                            <NavItem className=\"text-left text-md-right\">\n                                {windowWidth >= collapse ?\n                                    <AboutButton />\n                                    : <NavLink className=\"pl-4 navlinkText\" href=\"/about/\">ABOUT</NavLink>\n                                }\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </motion.div>\n        </>\n    )\n}\n\nexport default Navigation;","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faBorderNone } from \"@fortawesome/free-solid-svg-icons\";\n\nconst github = <FontAwesomeIcon icon={faGithub} />\n\nconst globe = <svg width=\"20\" height=\"20\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1 6H17.5M1 13H17.5\" stroke=\"white\" />\n    <circle cx=\"9.5\" cy=\"9.5\" r=\"9\" stroke=\"white\" />\n    <path d=\"M12.5 9.5C12.5 12.0801 12.1139 14.3939 11.5057 16.0447C11.2009 16.872 10.8499 17.5065 10.4853 17.925C10.1198 18.3447 9.78535 18.5 9.5 18.5C9.21465 18.5 8.88021 18.3447 8.51467 17.925C8.15013 17.5065 7.79911 16.872 7.4943 16.0447C6.88613 14.3939 6.5 12.0801 6.5 9.5C6.5 6.91989 6.88613 4.60609 7.4943 2.95534C7.79911 2.128 8.15013 1.49347 8.51467 1.07496C8.88021 0.655304 9.21465 0.5 9.5 0.5C9.78535 0.5 10.1198 0.655304 10.4853 1.07496C10.8499 1.49347 11.2009 2.128 11.5057 2.95534C12.1139 4.60609 12.5 6.91989 12.5 9.5Z\" stroke=\"white\" />\n</svg>\n\nconst arrowLeft = <svg width=\"12\" height=\"11\" viewBox=\"0 0 12 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M6 10.5L1.5 6M6 1L1.5 6M1.5 6L11.5 6\" stroke=\"white\" stroke-width=\"1.2\" />\n</svg>\n\nconst figma = <svg className=\"colourFill\" width=\"42\" height=\"42\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24ZM19.2 38.4C21.851 38.4 24 36.251 24 33.6V28.8H19.2C16.549 28.8 14.4 30.949 14.4 33.6C14.4 36.251 16.549 38.4 19.2 38.4ZM14.4 24C14.4 26.651 16.549 28.8 19.2 28.8H24V19.2H19.2C16.549 19.2 14.4 21.349 14.4 24ZM14.4 14.4C14.4 17.051 16.549 19.2 19.2 19.2H24V9.6H19.2C16.549 9.6 14.4 11.749 14.4 14.4ZM24 9.6V19.2H28.8C31.451 19.2 33.6 17.051 33.6 14.4C33.6 11.749 31.451 9.6 28.8 9.6H24ZM33.6 24C33.6 21.349 31.451 19.2 28.8 19.2C26.149 19.2 24 21.349 24 24C24 26.651 26.149 28.8 28.8 28.8C31.451 28.8 33.6 26.651 33.6 24Z\" fill=\"none\" />\n</svg>\n\nconst transition = { duration: 2, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst itemExample = {\n\n    initial: {\n        opacity: 0,\n    },\n    in: {\n        opacity: 1,\n    },\n    out: {\n        opacity: 0,\n    },\n\n};\n\nfunction RenderExample({ example }) {\n\n    const removeIcon = example.siteAdressGit === 'None' ? 'hideIcon' : null;\n        \n    return (\n        <motion.div\n            variants={itemExample}\n            transition={transition}\n            initial=\"initial\"\n            animate=\"in\"\n            exit=\"out\">\n            <div className=\"row h-100\">\n                <div className=\"col-1 px-0 my-auto\">\n                    <Link to=\"/portfolio\" className=\"mainButton arrowButton btn text-center pb-1\">{arrowLeft}</Link>\n                </div>\n                <div className=\"col-10 text-center my-auto mx-auto\">\n                    <h1 className=\"mb-0\">{example.title}</h1>\n                </div>\n                <div className=\"col-1\"></div>\n                <div className=\"col-12 py-5 text-center\"><a href={example.siteAdressWeb} target=\"_blank\" rel=\"noopener noreferrer\" className=\"mainButton btn globeButton\" title=\"navigate to website\">{globe}</a>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-4 text-center col-sm-10 mx-auto text-md-left py-md-5 mb-4 pr-md-5\">\n                    <h3>{example.objectiveTitle}</h3>\n                    <p className=\"mb-0\">{example.objective}</p>\n                </div>\n                <div className=\"col-md-4 text-center col-10 mx-auto text-md-left py-md-5 mb-4 px-md-5\">\n                    <h3>{example.contributorsTitle}</h3>\n                    {example.contributors.map((info) =>\n                        <li style={{ listStyle: 'none' }}>{info}</li>\n                    )}\n                </div>\n                <div className=\"col-md-4 text-center col-10 mx-auto  text-md-left py-md-5 mb-4 pr-md-5\">\n                    <h3>{example.programsTitle}</h3>\n                    <p>{example.programs}</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8 order-1 mx-auto text-center text-md-left\" >\n                    <h3>{example.websiteTitle}</h3>\n                    <a href={example.siteAdressWeb} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                            className=\"img-fluid imgWidth\"\n                            src={example.img2} alt={example.title} /></a>\n                </div>\n                <div className=\"col-12 col-md-4 order-md-2 order-3 mx-auto pb-3 text-center text-md-left\">\n                    <h3>{example.htmlEmailTitle}</h3>\n                    <a href={example.emailHtmlAdress} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img\n                            className=\"img-fluid imgWidth\"\n                            src={example.img3} alt={example.title} /></a>\n                </div>\n                <div className=\"col-12 mx-auto col-md-8 text-center text-md-left pt-2 pb-md-2 pb-5 order-md-3 order-2\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <p>{example.website}</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 mx-auto ml-md-0 text-center linksExamplePage\" style={{ maxWidth: '200px' }}>\n                            <div className=\"row\">\n                                <div className=\"col-4\"><a href={example.siteAdressWeb} target=\"_blank\" rel=\"noopener noreferrer\" className=\"mainButton btn globeButton\" title=\"navigate to website\">{globe}</a></div>\n                                <div className={`${removeIcon} col-4`}><a className=\"cursor\" href={example.siteAdressGit} target=\"_blank\" rel=\"noopener noreferrer\" alt={example.siteAdressWeb}>{github}</a></div>\n                                <div className=\"col-4\"><a className=\"cursor\" href={example.siteFigma} alt={example.siteAddressWeb} target=\"_blank\" rel=\"noopener noreferrer\">{figma}</a></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 text-center col-12 mx-auto  text-md-left pt-2 pb-md-2 pb-5 order-4\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n\n                            <p>{example.html}</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 mx-auto ml-md-0 text-center linksExamplePage\" style={{ maxWidth: '200px' }}>\n                            <div className=\"row\">\n                                <div className={`${removeIcon} col-4`}><a href={example.emailHtmlAdress} className=\"mainButton btn globeButton\" title=\"navigate to website\" target=\"_blank\" rel=\"noopener noreferrer\">{globe}</a></div>\n                                <div className={`${removeIcon} col-4`}><a className=\"cursor\" href={example.emailHtmlGit} alt={example.siteAdressWeb} target=\"_blank\" rel=\"noopener noreferrer\">{github}</a></div>\n                                <div className=\"col-4\"><a className=\"cursor\" href={example.emailHtmlFigma} alt={example.siteAddressWeb} target=\"_blank\" rel=\"noopener noreferrer\">{figma}</a></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n\n    )\n}\n\nfunction ExampleOne({ example }) {\n    if (example)\n        return (\n            <div className=\"container-fluid maxWidthContainer pagePb px-4 px-sm-5 pt-5\">\n                <RenderExample example={example} />\n            </div>\n        )\n}\n\nexport default ExampleOne;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport Footer from './FooterComponent'\nimport About from './AboutComponent'\nimport Landing from './LandingPageComponent'\nimport Portfolio from './PortfolioComponent'\nimport Navigation from './NavigationComponent'\nimport ExampleOne from './ExampleOneComponent'\nimport { AnimatePresence } from \"framer-motion\";\nimport { UserContext, HERO, ABOUT, PORTFOLIOWORK } from '../UserContext';\n\nconst itemList = HERO;\nconst example = PORTFOLIOWORK;\nconst about = ABOUT;\n\nconst PortfolioPage = () => {\n    return (\n        <>\n            <Navigation />\n            <Portfolio />\n            <Footer />\n        </>\n    )\n}\n\nconst AboutPage = () => {\n    return (\n        <>\n            <Navigation />\n            <About />\n            <Footer />\n        </>\n    )\n}\n\nconst ExampleOnePage = ({ match }) => {\n    return (\n        <>\n            <ExampleOne\n                example={example.filter(example => example.id === +match.params.exampleId)[0]}\n            />\n            <Footer />\n        </>\n    )\n}\n\nfunction Main() {\n\n    return (\n        <>\n            <Router>\n                <UserContext.Provider value={{itemList, about, example}}>\n                    <Route\n                        render={({ location }) => (\n                            <AnimatePresence exitBeforeEnter>\n                                <Switch location={location} key={location.pathname}>\n                                    <Route exact path=\"/home\" component={Landing} />\n                                    <Route exact path=\"/portfolio\" component={PortfolioPage} />\n                                    <Route path=\"/image/:exampleId\" component={ExampleOnePage} />\n                                    <Route exact path=\"/about\" component={AboutPage} />\n                                    <Redirect to=\"/home\" />\n                                </Switch>\n                            </AnimatePresence>\n                        )}\n                    />\n                </UserContext.Provider>\n            </Router>\n\n        </>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nfunction App () {\n\n    return (\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'typeface-abel';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}